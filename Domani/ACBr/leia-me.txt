+---------------------------------------------------------+
|                                                         |
|   Projeto: Componentes ACBr   Versao 0.08b              |
|                                                         |
|  Biblioteca multiplataforma de componentes Delphi para  |
|  interação com equipamentos de Automação Comercial      |
|  utilizados no Brasil                                   |
|                                                         |
|  http://acbr.sourceforge.net                            |
|                                                         |
+---------------------------------------------------------+

INDICE

1. Descrição
2. Licença
3. Compatibilidade
4. Como executar os Demos.
5. Instalação
6. Componentes
7. Autores e Colaboradores
8. Como posso ajudar no projeto
9. Vantagens e Desvantagens
10. Tarefas que ainda precisam ser iniciadas, melhoradas ou completadas
11. Histórico do desenvolvimento

--------------------------------------------------------------------------------

1. DESCRIÇÃO

   O mercado de automação comercial Brasileiro está em franca expansão.
Vários fabricantes vem disponibilizando vários equipamentos para permitir a
criação de Programas de Ponto de Venda. Entre esses equipamentos podemos citar:
Impressoras Fiscais, Gavetas de Dinheiro, Impressoras de Cheque, Transferencia
Eletrônica de Fundos (TEF), Monitor de Bombas de Combustível, Display de
Mensagens, etc.

  Quase todos os fabricantes disponibilizam DLL's para acesso a seus
equipamentos, entretanto para uma aplicação de Automação Comercial acessar
vários equipamentos são necessárias várias DLL's,o que dificulta a instalação e
manutenção dos Programas. Outro problema é a não disponibilização de SO's, por
parte dos Fabricantes, para acesso aos equipamentos em Linux.

  O objetivo desse projeto é desenvolver uma Paleta de Componentes para a
Linguagem Delphi com versões VCL e CLX, que permita acesso direto a esses
equipamentos, sem DLL's, interagindo com eles direto na porta serial (ou outra
porta a qual eles sejam ligados). Além de permitir a programadores da Linguagem
Kylix, acesso direto a esses equipamentos em Linux.

--------------------------------------------------------------------------------

2. LICENÇA

  Esta biblioteca é software livre; você pode redistribuí-la e/ou modificá-la
 sob os termos da Licença Pública Geral Menor do GNU conforme publicada pela
 Free Software Foundation; tanto a versão 2.1 da Licença, ou (a seu critério)
 qualquer versão posterior.

  Esta biblioteca é distribuída na expectativa de que seja útil, porém, SEM
 NENHUMA GARANTIA; nem mesmo a garantia implícita de COMERCIABILIDADE OU
 ADEQUAÇÃO A UMA FINALIDADE ESPECÍFICA. Consulte a Licença Pública Geral Menor
 do GNU para mais detalhes. (Arquivo LICENÇA.TXT ou LICENSE.TXT)

  Por favor leia pelo menos a Introdução do arquivo LICENÇA.TXT, se você deseja
usar essa biblioteca em algum Programa Comercial, ou ainda criar uma modificação
dessa Biblioteca.

  Porque o projeto é OpenSource ? É realmente muito difícil fazer um projeto
desse tamanho sozinho. Conseguir acesso a diversos equipamentos para testes, em
diferentes sistemas operacionais e configurações de máquinas. Por isso acho que
compartilhando minhas informações com a comunidade, também serei beneficiado...
seja com sugestões, ajuda nos testes, e até mesmo com a colaboração de outros
desenvolvedores.


--------------------------------------------------------------------------------

3. COMPATIBILIDADE

  Compatível com Delphi 6, 7 e Kylix 3.

  Pode haver compatibilidade com versões inferiores ao Delphi 6, porém ainda não
foi testado...

  Por enquanto não é possível intalar a versão VCL e CLX da Biblioteca
simultaneamente.

  Durante o desenvolvimento foi usada a seguinte Plataforma:
- Windows 98 SE    Delphi 7 Professional
- Conectiva 10     Kylix 3

  Patchs não oficiais para CLX aplicados ( http://www.kylix-patch.de.vu )

--------------------------------------------------------------------------------

4. COMO EXECUTAR OS DEMOS

  Existem 2 arquivos ZIP dentro do pacote ACBr.ZIP. Eles são demonstrativos
dos Componentes do ACBr já compilados.

- DemosWin32_X.XXx.ZIP para Windows (VCL)
  Onde X.XXx é a versão do ACBr. Os Demos para Windows são compilados com a
versão VCL do ACBr, portanto nao devem precisar de nenhuma biblioteca.

- DemosLinux_X.XXx.ZIP para Linux
  Os Demos Linux precisam da biblioteca QT/Borland (libborqt-6.9-qt2.3.so)
disponivel no Kylix (/usr/local/kylix/bin). Para rodar os demos em uma máquina
que não possua o Kylix instalado, copie a biblioteca acima para o diretório
/usr/lib.
  Se você não possui o Kylix instalado, as bibliotecas de run-time podem ser
achadas em: http://kylixlibs.sourceforge.net

--------------------------------------------------------------------------------

5. INSTALAÇÃO

1. Descompacte o arquivo .ZIP na pasta de sua preferência.

2. Abra o arquivo .DPK para a versão desejada.
   Na IDE do Delphi acione  "File, Open"
   Localize o arquivo ACBr\source\ACBrCLX.DPK   (para versão CLX)   ou
                      ACBr\source\ACBrVCL.DPK   (para versão VCL)

3. Compile e Instale a Biblioteca.
   Clique em "Compile" e em seguida em "Install". Feche o arquivo DPK
  (não há necessidade de salvar).

4. Adcione o diretório " ACBr\source "  no  "Library Path".
   Na IDE do Delphi acione  "Tools, Enviroment Options" selecione a guia
   "Library",  clique no botão elíptico (...) de "Library Path",
   clique no botão elíptico (...) à frente da caixa de texto, localize a pasta
   " ACBr\Source " no diretório de instalação da Biblioteca, clique em "OK",
   e em "Add". Click em "OK" para finalizar.

5. A paleta ACBr será criada com os componentes da Biblioteca ACBr.


***** Nota IMPORTANTE sobre a Versão CLX *****

- Se você instalou a versão CLX da ACBr abra apenas os programas de demos
  iniciados com a letra Q   Ex: QECFTeste.dpr    Os outros projetos com o mesmo
  nome, porém sem a letra Q são para a versão VCL
- Ao iniciar um NOVO projeto em CLX adcione a clausula "VisualCLX" ou "CLX" em
  "Conditional Defines".
  - Clique em "Project", "Options"   ou   SHIFT-CTRL-F11
  - Clique na aba "Directories/Conditionals"
  - Digite   VisualCLX    em "Conditional Defines"  e clique em OK.


  Nota para o uso das versões VCL / CLX. Se você já instalou uma versão
(VCL ou CLX) e pretende instalar a outra versão... É necessário clicar em
"Project,  Build ACBr...", antes de "Compile" e "Install".  Isso irá gerar
corretamente os arquivos DCU para a nova versão, pois algums arquivos são
compartilhados entre as duas versões...

--------------------------------------------------------------------------------

6. COMPONENTES

* IMPORTANTE *  Durante a fase Alpha do Projeto, alguns relases ocorrerão sem os
devidos testes em alguns modelos de equipamentos.  Isso por causa da dificuldade
de conseguir Hardware disponível para testes.  Antes de cada release, fazemos o
maior esforço possível para testar o maior número de modelos, contactando Cola-
boradores ou Fabricantes. Muitos fabricantes gentilmente nos ajudaram nos testes,
outros nem tanto...  Se você possui acesso a algum equipamento que é do escopo
do projeto ACBr,  SEJA VOCÊ TAMBÉM UM COLABORADOR..... Ficaremos muito gratos
com a sua participação no projeto. 


  Inicialmente imaginamos desenvolver os seguintes componentes

ACBrECF - Para se comunicar com Impressoras Fiscais (ECF). A idéia é substituir
  os comandos da DLL por chamadas aos métodos do componente ACBrECF, com a
  vantagem imediata de tornar o seu código compatível a todas os Modelos de
  Impressoras suportadas pelo ACBrECF, apenas escolha o modelo e pronto...
  Inicialmente suportando os seguintes modelos:
  Bematech, Daruma, Schalter, Sweda, Mecaf (e compatíveis)

ACBrGaveta - Para acionamento de Gavetas de dinheiro. Com suporte a gavetas
  ligadas a Porta Serial, ou diretamente ao ECF ou ainda ligadas a Impressoras
  não Fiscais (paralela ou serial). Inicialmente suportando os seguintes
  modelos: Menno, Gerbô.

ACBrCheque - Para impressão de Cheques. A impressora de cheques pode ser avulsa
  ou conjugada ao ECF (ECF 2 estações). Inicialmente com suporte as Impressoras
  de Cheque Chronos, Bematech, e todos ECF's 2 estações suportados por ACBrECF

ACBrDisplayCliente - Display de Mensagens de 2 linhas para o Cliente (fica
  voltado para o Cliente e exibe informações sobre a venda...). Inicialmente
  suportando o Gertec

ACBrDisplayOperador - Display de Mensagens de 2 linhas acoplado a teclados
  reduzidos, comunicando pela porta AT. Modelos: Gertec

ACBrBombas - Monitor de Bombas de Combustível, lendo os abastecimentos gerados,
  alterando os preços das Bombas. Modelo suportado: CompanyTec

ACBrLeBarras - Permitindo acesso a informação lida por Leitores de código de
  Barra ligados a porta serial.

ACBrLeCMC7 - Leitor de código CMC7 de Cheques. (Nenhuma experiência do autor).

ACBrSintegra - Componente para formatar informações no LayOut do Sintegra,
  suportando os registros da serie 50 e 60

ACBrTEF - Componente para facilitar a criação dos arquivos de troca entre a
  Aplicação Comercial e os programas das Operadoras. (Experiência apenas com
  TEF Discado)

ACBrCalculadora - Mais uma calculadora... mas com algumas frescuras a mais, como
  por exemplo, um Memo simulando a fita (permitindo salvar)

ACBrUtil - Unit contendo diversos procedimentos e funções úteis para aplicações
  comerciais: ValidaCNPJ, ValidaCPF, ValidaINSCEST, Extenso, etc

--------------------------------------------------------------------------------

7. AUTORES E COLABORADORES

- Daniel Simões de Almeida
  Administração do Projeto,   Desenvolvimento

- Alexandre Rocha Lima e Marcondes
  Administração do Projeto  e  Suporte

- Andre Ferreira de Moraes
  WebMaster,  Documentação,  Arquivos de ajuda

- Projeto Jedi
  Diversas rotinas e o arquivo ACBr.inc foram baseados no código da JCL e JVCL

--------------------------------------------------------------------------------

8. COMO POSSO AJUDAR NO PROJETO

  Se você possui experiencia em Automação comercial e deseja ajudar, junte-se a
nós... ficaremos muito contente com a sua ajuda.

  * Testando os Componentes:
  Fizemos o possível para eliminar os bugs mais óbvios... mas em ambientes
diferente bugs novos podem aparecer. Por favor nós envie-nos um e-mail com os
seus testes. Mesmo que tudo dê certo ainda sim gostariamos da sua opnião...

  * Divulgando o ACBr:
  Quanto maior o uso da biblioteca mais usuários podem ajudar. Se a biblioteca
for bem conhecida e utilizada os Fabricantes de equipamentos de Automação
Comercial terão maior interesse em ajudar no desenvolvimento.

  * Desenvolvendo Componentes:
  Alguns componentes como o ACBrECF deverão ser implementados para vários
modelos de equipamento. Se o equipamento que você deseja não consta na relação
de Equipamentos a compatíveis você pode estudar os Fontes e tentar implementar
uma nova Classe para o seu Equipamento (Por favor, entre em contato antes)

  * Emprestando Equipamentos:
  Nem sempre temos acesso aos Equipamentos para testes e melhorias. Se você é um
fabricante ou possui um equipamento disponível para emprestimo, entre em contato
Em breve estarei relacionando os equipamentos que necessitam de testes...

  * Efetuando Doaçoes:
  Atualmente a Biblioteca é desenvolvida no tempo livre disponível dos
Desenvolvedores.... pois é... até mesmo os programadores precisam comer.... ;-)

--------------------------------------------------------------------------------

9. VANTAGENS E DESVANTAGENS

  Vantagens:
- Multiplataforma: Linux / Windows
- Programação Limpa e Clara: Basta inserir um componente ACBrECF no seu projeto
  e configurar o Modelo. O Codigo fonte sempre irá se referir a esse componente,
  sem se preocupar com implementações específicas de cada Modelo.
- Total controle da Aplicação: Já vi DLL's que simplesmente param o proces-
  samento do programa (Quem já homologou TEF discado, sabe o que eu quero
  dizer...)
- Facil distribuição: Não precisa distribuir e instalar nenhuma DLL
- Livre-se do Inferno das DLL's. (Quando o usuário instala outro programa que
  usa a mesma DLL que você usa, porém em uma versão antiga (causando Bugs no seu
  programa) )

  Desvantagens:
- Se o hardware mudar, ficamos dependendo de novas informações do fabricante, ou
  até mesmo de um modelo do equipamento para testes...
- Geralmente as DLL's incorporam novos Hardwares do mesmo fabricante.... Aqui
  teremos que implementar um novo filho das classes Basicas para cada Hardware
  novo (somente se o novo hardware nao for compativel com o antigo)

--------------------------------------------------------------------------------

10. TAREFAS QUE AINDA PRECISAM SER INICIADAS, MELHORADAS OU COMPLETADAS

  Na versão atual existe tanto a fazer e programar que essa seção seria muito
grande.... ;-)

--------------------------------------------------------------------------------

11. HISTÓRICO DO DESENVOLVIMENTO

  Por favor leia o arquivo:  " ACBr-change-log.TXT "
