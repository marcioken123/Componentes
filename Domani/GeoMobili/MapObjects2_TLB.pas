unit MapObjects2_TLB;

// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// The types declared in this file were generated from data read from a       
// Type Library. If this type library is explicitly or indirectly (via        
// another type library referring to this type library) re-imported, or the   
// 'Refresh' command of the Type Library Editor activated while editing the   
// Type Library, the contents of this file will be regenerated and all        
// manual modifications will be lost.                                         
// ************************************************************************ //

// PASTLWTR : 1.2
// File generated on 15/12/2005 01:17:44 from Type Library described below.

// ************************************************************************  //
// Type Lib: F:\Arquivos de programas\Arquivos comuns\ESRI\Mo20.ocx (1)
// LIBID: {9BD6A640-CE75-11D1-AF04-204C4F4F5020}
// LCID: 0
// Helpfile: F:\Arquivos de programas\Arquivos comuns\ESRI\MapObjects2.hlp
// HelpString: ESRI MapObjects 2.3
// DepndLst: 
//   (1) v2.0 stdole, (F:\WINDOWS\System32\stdole2.tlb)
// Errors:
//   Hint: TypeInfo 'Unit' changed to 'Unit_'
//   Hint: Parameter 'string' of IMoStrings.Add changed to 'string_'
//   Hint: Member 'Xor' of 'IMoRectangle' changed to 'Xor_'
//   Hint: Member 'Set' of 'IMoPoint' changed to 'Set_'
//   Hint: Member 'Xor' of 'IMoPoint' changed to 'Xor_'
//   Hint: Member 'Set' of 'IMoPoints' changed to 'Set_'
//   Hint: Member 'Xor' of 'IMoPoints' changed to 'Xor_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Xor' of 'IMoPolygon' changed to 'Xor_'
//   Hint: Member 'Set' of 'IMoParts' changed to 'Set_'
//   Hint: Member 'Xor' of 'IMoLine' changed to 'Xor_'
//   Hint: Parameter 'end' of IMoLine.ReturnLineEvent changed to 'end_'
//   Hint: Parameter 'end' of IMoLine.SetMeasures changed to 'end_'
//   Hint: Member 'Xor' of 'IMoEllipse' changed to 'Xor_'
//   Hint: Member 'File' of 'IMoImageLayer' changed to 'File_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Unit' of 'IMoProjCoordSys' changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Member 'Unit' of 'IMoGeoCoordSys' changed to 'Unit_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
//   Hint: Symbol 'Type' renamed to 'type_'
// ************************************************************************ //
{$TYPEDADDRESS OFF} // Unit must be compiled without type-checked pointers. 
{$WARN SYMBOL_PLATFORM OFF}
{$WRITEABLECONST ON}
{$VARPROPSETTER ON}
{$R 'MapObjects2_TLB.dcr'}

interface

uses Windows, ActiveX, Classes, Graphics, OleCtrls, OleServer, StdVCL, Variants;
  


// *********************************************************************//
// GUIDS declared in the TypeLibrary. Following prefixes are used:        
//   Type Libraries     : LIBID_xxxx                                      
//   CoClasses          : CLASS_xxxx                                      
//   DISPInterfaces     : DIID_xxxx                                       
//   Non-DISP interfaces: IID_xxxx                                        
// *********************************************************************//
const
  // TypeLibrary Major and minor versions
  MapObjects2MajorVersion = 2;
  MapObjects2MinorVersion = 0;

  LIBID_MapObjects2: TGUID = '{9BD6A640-CE75-11D1-AF04-204C4F4F5020}';

  DIID_IMoGeoDatasets: TGUID = '{9BD6A64C-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoDataConnection: TGUID = '{9BD6A64E-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoGeoDataset: TGUID = '{9BD6A650-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoTableDesc: TGUID = '{9BD6A68A-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_TableDesc: TGUID = '{9BD6A68B-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoStrings: TGUID = '{9BD6A672-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoLayers: TGUID = '{9BD6A652-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoMapLayer: TGUID = '{9BD6A655-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoRectangle: TGUID = '{9BD6A657-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Rectangle: TGUID = '{9BD6A658-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoPoint: TGUID = '{9BD6A65B-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Point: TGUID = '{9BD6A65C-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoPoints: TGUID = '{9BD6A665-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Points: TGUID = '{9BD6A666-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoRecordset: TGUID = '{9BD6A659-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoFields: TGUID = '{9BD6A65D-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoField: TGUID = '{9BD6A65F-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoStatistics: TGUID = '{9BD6A674-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoSymbol: TGUID = '{9BD6A66E-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Symbol: TGUID = '{9BD6A66F-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Strings: TGUID = '{9BD6A673-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoTable: TGUID = '{9BD6A685-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Table: TGUID = '{9BD6A686-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoPolygon: TGUID = '{9BD6A661-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoParts: TGUID = '{9BD6A696-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoLine: TGUID = '{9BD6A663-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoValueMapRenderer: TGUID = '{9BD6A670-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoClassBreaksRenderer: TGUID = '{9BD6A676-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoDotDensityRenderer: TGUID = '{9BD6A678-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoLabelRenderer: TGUID = '{9BD6A67A-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoTextSymbol: TGUID = '{9BD6A687-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_TextSymbol: TGUID = '{9BD6A688-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoTrackingLayer: TGUID = '{9BD6A67D-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoGeoEvent: TGUID = '{9BD6A67F-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoEllipse: TGUID = '{9BD6A681-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoImageLayer: TGUID = '{9BD6A683-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoAddressLocation: TGUID = '{9BD6A68E-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoPlaceLocator: TGUID = '{9BD6A694-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoProjection: TGUID = '{43FD9771-D8FF-11D1-AF14-006097DA3688}';
  DIID_IMoProjCoordSys: TGUID = '{F9C06023-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoGeoCoordSys: TGUID = '{F9C06026-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoDatum: TGUID = '{F9C0602C-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoSpheroid: TGUID = '{F9C0602F-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoUnit: TGUID = '{F9C06029-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoPrimeMeridian: TGUID = '{F9C06032-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoGeoTransformation: TGUID = '{F9C06035-DA8D-11D1-AF16-006097DA3688}';
  DIID_IMoStandardizer: TGUID = '{2637C6F3-0472-11D2-909C-00600826393D}';
  DIID_IMoGeocoder: TGUID = '{2637C6F5-0472-11D2-909C-00600826393D}';
  CLASS_Standardizer: TGUID = '{2637C6F4-0472-11D2-909C-00600826393D}';
  CLASS_GeoDataset: TGUID = '{9BD6A651-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_AddressLocation: TGUID = '{9BD6A68F-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_DataConnection: TGUID = '{9BD6A64F-CE75-11D1-AF04-204C4F4F5020}';
  DIID_IMoZRenderer: TGUID = '{0C8392E4-3CC4-11D2-8AF6-0060082D41FB}';
  DIID_IMoGroupRenderer: TGUID = '{83259D40-4A42-11D2-AF7A-006097DA3688}';
  DIID_IMoChartRenderer: TGUID = '{83259D42-4A42-11D2-AF7A-006097DA3688}';
  DIID_IMoLabelPlacer: TGUID = '{83259D44-4A42-11D2-AF7A-006097DA3688}';
  DIID_IMoEventRenderer: TGUID = '{356EF6C6-73E3-11D2-BF0D-0060082D41FB}';
  DIID__DMap: TGUID = '{9BD6A649-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Ellipse: TGUID = '{9BD6A682-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Line: TGUID = '{9BD6A664-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Polygon: TGUID = '{9BD6A662-CE75-11D1-AF04-204C4F4F5020}';
  DIID__DMapEvents: TGUID = '{9BD6A64A-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Map: TGUID = '{9BD6A64B-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_GeoDatasets: TGUID = '{9BD6A64D-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Layers: TGUID = '{9BD6A653-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_MapLayer: TGUID = '{9BD6A656-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Recordset: TGUID = '{9BD6A65A-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Fields: TGUID = '{9BD6A65E-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Field: TGUID = '{9BD6A660-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_ValueMapRenderer: TGUID = '{9BD6A671-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Statistics: TGUID = '{9BD6A675-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_ClassBreaksRenderer: TGUID = '{9BD6A677-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_DotDensityRenderer: TGUID = '{9BD6A679-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_LabelRenderer: TGUID = '{9BD6A67B-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_TrackingLayer: TGUID = '{9BD6A67E-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_GeoEvent: TGUID = '{9BD6A680-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_ImageLayer: TGUID = '{9BD6A684-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_PlaceLocator: TGUID = '{9BD6A695-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Parts: TGUID = '{9BD6A697-CE75-11D1-AF04-204C4F4F5020}';
  CLASS_Projection: TGUID = '{43FD9772-D8FF-11D1-AF14-006097DA3688}';
  CLASS_ProjCoordSys: TGUID = '{F9C06024-DA8D-11D1-AF16-006097DA3688}';
  CLASS_GeoCoordSys: TGUID = '{F9C06027-DA8D-11D1-AF16-006097DA3688}';
  CLASS_Unit_: TGUID = '{F9C0602A-DA8D-11D1-AF16-006097DA3688}';
  CLASS_Datum: TGUID = '{F9C0602D-DA8D-11D1-AF16-006097DA3688}';
  CLASS_Spheroid: TGUID = '{F9C06030-DA8D-11D1-AF16-006097DA3688}';
  CLASS_PrimeMeridian: TGUID = '{F9C06033-DA8D-11D1-AF16-006097DA3688}';
  CLASS_GeoTransformation: TGUID = '{F9C06036-DA8D-11D1-AF16-006097DA3688}';
  CLASS_Geocoder: TGUID = '{2637C6F6-0472-11D2-909C-00600826393D}';
  CLASS_ZRenderer: TGUID = '{0C8392E5-3CC4-11D2-8AF6-0060082D41FB}';
  CLASS_GroupRenderer: TGUID = '{83259D41-4A42-11D2-AF7A-006097DA3688}';
  CLASS_ChartRenderer: TGUID = '{83259D43-4A42-11D2-AF7A-006097DA3688}';
  CLASS_LabelPlacer: TGUID = '{83259D45-4A42-11D2-AF7A-006097DA3688}';
  CLASS_EventRenderer: TGUID = '{356EF6C7-73E3-11D2-BF0D-0060082D41FB}';

// *********************************************************************//
// Declaration of Enumerations defined in Type Library                    
// *********************************************************************//
// Constants for enum ConnectionErrorConstants
type
  ConnectionErrorConstants = TOleEnum;
const
  moNoError = $00000000;
  moUnknownError = $00000001;
  moAccessDenied = $00000002;
  moInvalidUser = $00000003;
  moNetworkTimeout = $00000004;
  moInvalidDatabase = $00000005;
  moTasksExceeded = $00000006;
  moFileNotFound = $00000007;
  moInvalidDirectory = $00000008;
  moHostUnknown = $00000009;
  moSE_FAILURE = $FFFFFFFF;
  moSE_INVALID_LAYERINFO_OBJECT = $FFFFFFFE;
  moSE_NO_ANNOTATION = $FFFFFFFD;
  moSE_FINISHED = $FFFFFFFC;
  moSE_SDE_NOT_STARTED = $FFFFFFFB;
  moSE_UNCHANGED = $FFFFFFFA;
  moSE_CONNECTIONS_EXCEEDED = $FFFFFFF9;
  moSE_LOGIN_NOT_ALLOWED = $FFFFFFF8;
  moSE_INVALID_USER = $FFFFFFF7;
  moSE_NET_FAILURE = $FFFFFFF6;
  moSE_NET_TIMEOUT = $FFFFFFF5;
  moSE_OUT_OF_SVMEM = $FFFFFFF4;
  moSE_OUT_OF_CLMEM = $FFFFFFF3;
  moSE_OUT_OF_CONTEXT = $FFFFFFF2;
  moSE_NO_ACCESS = $FFFFFFF1;
  moSE_TOO_MANY_LAYERS = $FFFFFFF0;
  moSE_NO_LAYER_SPECIFIED = $FFFFFFEF;
  moSE_LAYER_LOCKED = $FFFFFFEE;
  moSE_LAYER_EXISTS = $FFFFFFED;
  moSE_LAYER_NOEXIST = $FFFFFFEC;
  moSE_LAYER_INUSE = $FFFFFFEB;
  moSE_FID_NOEXIST = $FFFFFFEA;
  moSE_FID_EXISTS = $FFFFFFE9;
  moSE_LAYER_MISMATCH = $FFFFFFE8;
  moSE_NO_PERMISSIONS = $FFFFFFE7;
  moSE_INVALID_NOT_NULL = $FFFFFFE6;
  moSE_INVALID_SHAPE = $FFFFFFE5;
  moSE_INVALID_LAYER_NUMBER = $FFFFFFE4;
  moSE_INVALID_ENTITY_TYPE = $FFFFFFE3;
  moSE_INVALID_SEARCH_METHOD = $FFFFFFE2;
  moSE_INVALID_ETYPE_MASK = $FFFFFFE1;
  moSE_BIND_CONFLICT = $FFFFFFE0;
  moSE_INVALID_GRIDSIZE = $FFFFFFDF;
  moSE_INVALID_LOCK_MODE = $FFFFFFDE;
  moSE_ETYPE_NOT_ALLOWED = $FFFFFFDD;
  moSE_TOO_MANY_POINTS = $FFFFFFDC;
  moSE_TABLE_NOEXIST = $FFFFFFDB;
  moSE_ATTR_NOEXIST = $FFFFFFDA;
  moSE_LICENSE_FAILURE = $FFFFFFD9;
  moSE_OUT_OF_LICENSES = $FFFFFFD8;
  moSE_INVALID_COLUMN_VALUE = $FFFFFFD7;
  moSE_INVALID_WHERE = $FFFFFFD6;
  moSE_INVALID_SQL = $FFFFFFD6;
  moSE_LOG_NOEXIST = $FFFFFFD5;
  moSE_LOG_NOACCESS = $FFFFFFD4;
  moSE_LOG_NOTOPEN = $FFFFFFD3;
  moSE_LOG_IO_ERROR = $FFFFFFD2;
  moSE_NO_SHAPES = $FFFFFFD1;
  moSE_NO_LOCKS = $FFFFFFD0;
  moSE_LOCK_CONFLICT = $FFFFFFCF;
  moSE_OUT_OF_LOCKS = $FFFFFFCE;
  moSE_DB_IO_ERROR = $FFFFFFCD;
  moSE_STREAM_IN_PROGRESS = $FFFFFFCC;
  moSE_INVALID_COLUMN_TYPE = $FFFFFFCB;
  moSE_TOPO_ERROR = $FFFFFFCA;
  moSE_ATTR_CONV_ERROR = $FFFFFFC9;
  moSE_INVALID_COLUMN_DEF = $FFFFFFC8;
  moSE_INVALID_SHAPE_BUF_SIZE = $FFFFFFC7;
  moSE_INVALID_ENVELOPE = $FFFFFFC6;
  moSE_TEMP_IO_ERROR = $FFFFFFC5;
  moSE_GSIZE_TOO_SMALL = $FFFFFFC4;
  moSE_LICENSE_EXPIRED = $FFFFFFC3;
  moSE_TABLE_EXISTS = $FFFFFFC2;
  moSE_INDEX_EXISTS = $FFFFFFC1;
  moSE_INDEX_NOEXIST = $FFFFFFC0;
  moSE_INVALID_POINTER = $FFFFFFBF;
  moSE_INVALID_PARAM_VALUE = $FFFFFFBE;
  moSE_ALL_SLIVERS = $FFFFFFBD;
  moSE_TRANS_IN_PROGRESS = $FFFFFFBC;
  moSE_IOMGR_NO_DBMS_CONNECT = $FFFFFFBB;
  moSE_DUPLICATE_ARC = $FFFFFFBA;
  moSE_INVALID_ANNO_OBJECT = $FFFFFFB9;
  moSE_PT_NO_EXIST = $FFFFFFB8;
  moSE_PTS_NOT_ADJACENT = $FFFFFFB7;
  moSE_INVALID_MID_PT = $FFFFFFB6;
  moSE_INVALID_END_PT = $FFFFFFB5;
  moSE_INVALID_RADIUS = $FFFFFFB4;
  moSE_LOAD_ONLY_LAYER = $FFFFFFB3;
  moSE_LAYERS_NOT_FOUND = $FFFFFFB2;
  moSE_FILE_IO_ERROR = $FFFFFFB1;
  moSE_BLOB_SIZE_TOO_LARGE = $FFFFFFB0;
  moSE_CORRIDOR_OUT_OF_BOUNDS = $FFFFFFAF;
  moSE_SHAPE_INTEGRITY_ERROR = $FFFFFFAE;
  moSE_NOT_IMPLEMENTED_YET = $FFFFFFAD;
  moSE_CAD_EXISTS = $FFFFFFAC;
  moSE_INVALID_TRANSID = $FFFFFFAB;
  moSE_INVALID_LAYER_NAME = $FFFFFFAA;
  moSE_INVALID_LAYER_KEYWORD = $FFFFFFA9;
  moSE_INVALID_RELEASE = $FFFFFFA8;
  moSE_VERSION_TBL_EXISTS = $FFFFFFA7;
  moSE_COLUMN_NOT_BOUND = $FFFFFFA6;
  moSE_INVALID_INDICATOR_VALUE = $FFFFFFA5;
  moSE_INVALID_CONNECTION = $FFFFFFA4;
  moSE_INVALID_DBA_PASSWORD = $FFFFFFA3;
  moSE_PATH_NOT_FOUND = $FFFFFFA2;
  moSE_SDEHOME_NOT_SET = $FFFFFFA1;
  moSE_NOT_TABLE_OWNER = $FFFFFFA0;
  moSE_PROCESS_NOT_FOUND = $FFFFFF9F;
  moSE_INVALID_DBMS_LOGIN = $FFFFFF9E;
  moSE_PASSWORD_TIMEOUT = $FFFFFF9D;
  moSE_INVALID_SERVER = $FFFFFF9C;
  moSE_IOMGR_NOT_AVAILABLE = $FFFFFF9B;
  moSE_SERVICE_NOT_FOUND = $FFFFFF9A;
  moSE_INVALID_STATS_TYPE = $FFFFFF99;
  moSE_INVALID_DISTINCT_TYPE = $FFFFFF98;
  moSE_INVALID_GRANT_REVOKE = $FFFFFF97;
  moSE_INVALID_SDEHOME = $FFFFFF96;
  moSE_INVALID_STREAM = $FFFFFF95;
  moSE_TOO_MANY_STREAMS = $FFFFFF94;
  moSE_OUT_OF_MUTEXES = $FFFFFF93;
  moSE_CONNECTION_LOCKED = $FFFFFF92;
  moSE_CONNECTION_IN_USE = $FFFFFF91;
  moSE_NOT_A_SELECT_STATEMENT = $FFFFFF90;
  moSE_FUNCTION_SEQUENCE_ERROR = $FFFFFF8F;
  moSE_WRONG_COLUMN_TYPE = $FFFFFF8E;
  moSE_PTABLE_LOCKED = $FFFFFF8D;
  moSE_PTABLE_IN_USE = $FFFFFF8C;
  moSE_STABLE_LOCKED = $FFFFFF8B;
  moSE_STABLE_IN_USE = $FFFFFF8A;
  moSE_INVALID_FILTER_TYPE = $FFFFFF89;
  moSE_NO_CAD = $FFFFFF88;
  moSE_INSTANCE_NOT_AVAILABLE = $FFFFFF87;
  moSE_INSTANCE_TOO_EARLY = $FFFFFF86;
  moSE_INVALID_SYSTEM_UNITS = $FFFFFF85;
  moSE_INVALID_UNITS = $FFFFFF84;
  moSE_INVALID_CAD_OBJECT = $FFFFFF83;
  moSE_INVALID_NUM_OF_PTS = $FFFFFF82;
  moSE_VERSION_NOEXIST = $FFFFFF82;
  moSE_INVALID_SPATIAL_CONSTRAINT = $FFFFFF81;
  moSE_INVALID_STREAM_TYPE = $FFFFFF80;
  moSE_INVALID_SPATIAL_COLUMN = $FFFFFF7F;
  moSE_NO_SPATIAL_MASKS = $FFFFFF7E;
  moSE_IOMGR_NOT_FOUND = $FFFFFF7D;
  moSE_SYSTEM_IS_CLIENT_ONLY = $FFFFFF7C;
  moSE_MULTIPLE_SPATIAL_COLS = $FFFFFF7B;
  moSE_INVALID_SHAPE_OBJECT = $FFFFFF7A;
  moSE_INVALID_PARTNUM = $FFFFFF79;
  moSE_INCOMPATIBLE_SHAPES = $FFFFFF78;
  moSE_INVALID_PART_OFFSET = $FFFFFF77;
  moSE_INCOMPATIBLE_COORDREFS = $FFFFFF76;
  moSE_COORD_OUT_OF_BOUNDS = $FFFFFF75;
  moSE_LAYER_CACHE_FULL = $FFFFFF74;
  moSE_INVALID_COORDREF_OBJECT = $FFFFFF73;
  moSE_INVALID_COORDSYS_ID = $FFFFFF72;
  moSE_INVALID_COORDSYS_DESC = $FFFFFF71;
  moSE_INVALID_ROW_ID_LAYER = $FFFFFF70;
  moSE_PROJECTION_ERROR = $FFFFFF6F;
  moSE_ARRAY_BYTES_EXCEEDED = $FFFFFF6E;
  moSE_POLY_SHELLS_OVERLAP = $FFFFFF6D;
  moSE_TOO_FEW_POINTS = $FFFFFF6C;
  moSE_INVALID_PART_SEPARATOR = $FFFFFF6B;
  moSE_INVALID_POLYGON_CLOSURE = $FFFFFF6A;
  moSE_INVALID_OUTER_SHELL = $FFFFFF69;
  moSE_ZERO_AREA_POLYGON = $FFFFFF68;
  moSE_POLYGON_HAS_VERTICAL_LINE = $FFFFFF67;
  moSE_OUTER_SHELLS_OVERLAP = $FFFFFF66;
  moSE_SELF_INTERSECTING = $FFFFFF65;
  moSE_INVALID_EXPORT_FILE = $FFFFFF64;
  moSE_READ_ONLY_SHAPE = $FFFFFF63;
  moSE_INVALID_DATA_SOURCE = $FFFFFF62;
  moSE_INVALID_STREAM_SPEC = $FFFFFF61;
  moSE_INVALID_ALTER_OPERATION = $FFFFFF60;
  moSE_INVALID_SPATIAL_COL_NAME = $FFFFFF5F;
  moSE_INVALID_DATABASE = $FFFFFF5E;
  moSE_SPATIAL_SQL_NOT_INSTALLED = $FFFFFF5D;
  moSE_NORM_DIM_INFO_NOT_FOUND = $FFFFFF5C;
  moSE_NORM_DIM_TAB_VALUE_NOT_FOUND = $FFFFFF5B;
  moSE_UNSUPPORTED_NORMALIZED_OPERATION = $FFFFFF5A;
  moSE_INVALID_REGISTERED_LAYER_OPTION = $FFFFFF59;
  moSE_READ_ONLY = $FFFFFF58;
  moSE_NO_SDE_ROWID_COLUMN = $FFFFFF57;
  moSE_READ_ONLY_COLUMN = $FFFFFF56;
  moSE_INVALID_VERSION_NAME = $FFFFFF55;
  moSE_STATE_NOEXIST = $FFFFFF54;
  moSE_INVALID_STATEINFO_OBJECT = $FFFFFF53;
  moSE_VERSION_HAS_MOVED = $FFFFFF52;
  moSE_STATE_HAS_CHILDREN = $FFFFFF51;
  moSE_PARENT_NOT_CLOSED = $FFFFFF50;
  moSE_VERSION_EXISTS = $FFFFFF4F;
  moSE_TABLE_NOT_MULTIVERSION = $FFFFFF4E;
  moSE_STATE_USED_BY_VERSION = $FFFFFF4D;
  moSE_INVALID_VERSIONINFO_OBJECT = $FFFFFF4C;
  moSE_INVALID_STATE_ID = $FFFFFF4B;
  moSE_SDETRACELOC_NOT_SET = $FFFFFF4A;
  moSE_ERROR_LOADING_SSA = $FFFFFF49;
  moSE_TOO_MANY_STATES = $FFFFFF48;
  moSE_STATES_ARE_SAME = $FFFFFF47;
  moSE_NO_ROWID_COLUMN = $FFFFFF46;
  moSE_NO_STATE_SET = $FFFFFF45;
  moSE_SSA_FUNCTION_ERROR = $FFFFFF44;
  moSE_INVALID_REGINFO_OBJECT = $FFFFFF43;
  moSE_NO_COMMON_LINEAGE = $FFFFFF42;
  moSE_STATE_INUSE = $FFFFFF41;
  moSE_STATE_TREE_INUSE = $FFFFFF40;
  moSE_INVALID_RASTER_COLUMN = $FFFFFF3F;
  moSE_RASTERCOLUMN_EXISTS = $FFFFFF3E;
  moSE_INVALID_MVTABLE_INDEX = $FFFFFF3D;
  moSE_INVALID_STORAGE_TYPE = $FFFFFF3C;
  moSE_AMBIGUOUS_NIL_SHAPE = $FFFFFF3B;
  moSE_INVALID_BYTE_ORDER = $FFFFFF3A;
  moSE_INVALID_GEOMETRY_TYPE = $FFFFFF39;
  moSE_INVALID_NUM_MEASURES = $FFFFFF38;
  moSE_INVALID_NUM_PARTS = $FFFFFF37;
  moSE_BINARY_TOO_SMALL = $FFFFFF36;
  moSE_SHAPE_TEXT_TOO_LONG = $FFFFFF35;
  moSE_SHAPE_TEXT_ERROR = $FFFFFF34;
  moSE_TOO_MANY_PARTS = $FFFFFF33;
  moSE_TYPE_MISMATCH = $FFFFFF32;
  moSE_SQL_PARENTHESIS_MISMATCH = $FFFFFF31;
  moSE_NIL_SHAPE_NOT_ALLOWED = $FFFFFF30;
  moSE_INSTANCE_ALREADY_RUNNING = $FFFFFF2F;
  moSE_UNSUPPORTED_OPERATION = $FFFFFF2E;
  moSE_INVALID_EXTERNAL_LAYER_OPTION = $FFFFFF2D;
  moSE_NORMALIZE_VALUE_NOT_FOUND = $FFFFFF2C;
  moSE_INVALID_QUERY_TYPE = $FFFFFF2B;
  moSE_NO_TRACE_LIBRARY = $FFFFFF2A;
  moSE_TRACE_ON = $FFFFFF29;
  moSE_TRACE_OFF = $FFFFFF28;
  moSE_SCL_SYNTAX_ERROR = $FFFFFF27;
  moSE_TABLE_REGISTERED = $FFFFFF26;
  moSE_INVALID_REGISTRATION_ID = $FFFFFF25;
  moSE_TABLE_NOREGISTERED = $FFFFFF24;
  moSE_TOO_MANY_REGISTRATIONS = $FFFFFF23;
  moSE_DELETE_NOT_ALLOWED = $FFFFFF22;
  moSE_ROWLOCKING_ENABLED = $FFFFFF21;
  moSE_ROWLOCKING_NOT_ENABLED = $FFFFFF20;
  moSE_RASTERCOLUMN_INUSE = $FFFFFF1F;
  moSE_RASTERCOLUMN_NOEXIST = $FFFFFF1E;
  moSE_INVALID_RASTERCOLUMN_NUMBER = $FFFFFF1D;
  moSE_TOO_MANY_RASTERCOLUMNS = $FFFFFF1C;
  moSE_INVALID_RASTER_NUMBER = $FFFFFF1B;
  moSE_NO_REQUEST_STATUS = $FFFFFF1A;
  moSE_NO_REQUEST_RESULTS = $FFFFFF19;
  moSE_RASTERBAND_EXISTS = $FFFFFF18;
  moSE_RASTERBAND_NOEXIST = $FFFFFF17;
  moSE_RASTER_EXISTS = $FFFFFF16;
  moSE_RASTER_NOEXIST = $FFFFFF15;
  moSE_TOO_MANY_RASTERBANDS = $FFFFFF14;
  moSE_TOO_MANY_RASTERS = $FFFFFF13;
  moSE_VIEW_EXISTS = $FFFFFF12;
  moSE_VIEW_NOEXIST = $FFFFFF11;
  moSE_LOCK_EXISTS = $FFFFFF10;
  moSE_ROWLOCK_MASK_CONFLICT = $FFFFFF0F;
  moSE_NOT_IN_RASTER = $FFFFFF0E;
  moSE_INVALID_RASBANDINFO_OBJECT = $FFFFFF0D;
  moSE_INVALID_RASCOLINFO_OBJECT = $FFFFFF0C;
  moSE_INVALID_RASTERINFO_OBJECT = $FFFFFF0B;
  moSE_INVALID_RASTERBAND_NUMBER = $FFFFFF0A;
  moSE_MULTIPLE_RASTER_COLS = $FFFFFF09;
  moSE_TABLE_SCHEMA_IS_LOCKED = $FFFFFF08;
  moSE_INVALID_LOGINFO_OBJECT = $FFFFFF07;
  moSE_SQL_TOO_LONG = $FFFFFF06;
  moSE_UNSUPPORTED_ON_VIEW = $FFFFFF05;
  moSE_LOG_EXISTS = $FFFFFF04;
  moSE_LOG_IS_OPEN = $FFFFFF03;
  moSE_SPATIALREF_EXISTS = $FFFFFF02;
  moSE_SPATIALREF_NOEXIST = $FFFFFF01;
  moSE_SPATIALREF_IN_USE = $FFFFFF00;
  moSE_INVALID_SPATIALREFINFO_OBJECT = $FFFFFEFF;
  moSE_SEQUENCENBR_EXISTS = $FFFFFEFE;
  moSE_INVALID_QUERYINFO_OBJECT = $FFFFFEFD;
  moSE_QUERYINFO_NOT_PREPARED = $FFFFFEFC;
  moSE_INVALID_RASTILEINFO_OBJECT = $FFFFFEFB;
  moSE_INVALID_RASCONSTRAINT_OBJECT = $FFFFFEFA;
  moSE_INVALID_METADATA_RECORD_ID = $FFFFFEF9;
  moSE_INVALID_METADATA_OBJECT = $FFFFFEF8;
  moSE_INVALID_METADATA_OBJECT_TYPE = $FFFFFEF7;
  moSE_SDEMETADATA_NOT_FOUND = $FFFFFEF6;
  moSE_METADATA_RECORD_NOEXIST = $FFFFFEF5;
  moSE_GEOMETRYCOL_NOEXIST = $FFFFFEF4;
  moSE_INVALID_FILE_PATH = $FFFFFEF3;
  moSE_INVALID_LOCATOR_OBJECT_TYPE = $FFFFFEF2;
  moSE_INVALID_LOCATOR = $FFFFFEF1;
  moSE_TABLE_HAS_NO_LOCATOR = $FFFFFEF0;
  moSE_INVALID_LOCATOR_CATEGORY = $FFFFFEEF;
  moSE_INVALID_LOCATOR_NAME = $FFFFFEEE;
  moSE_LOCATOR_NOEXIST = $FFFFFEED;
  moSE_LOCATOR_EXISTS = $FFFFFEEC;
  moSE_INVALID_LOCATOR_TYPE = $FFFFFEEB;
  moSE_NO_COORDREF = $FFFFFEEA;
  moSE_CANT_TRIM_RECONCILED_STATE = $FFFFFEE9;
  moSE_FILE_OBJECT_NOEXIST = $FFFFFEE8;
  moSE_FILE_OBJECT_EXISTS = $FFFFFEE7;
  moSE_INVALID_FILEINFO_OBJECT = $FFFFFEE6;
  moSE_INVALID_FILEINFO_OBJECT_TYPE = $FFFFFEE5;
  moSE_RASTERBAND_NO_STATS = $FFFFFEE4;
  moSE_VERSION_HAS_CHILDREN = $FFFFFEE3;
  moSE_SQLTYPE_UNSUPPORTED_ETYPE = $FFFFFEE2;
  moSE_NO_DBTUNE_FILE = $FFFFFEE1;
  moSE_LOG_SYSTABLES_CREATE_FAILED = $FFFFFEE0;
  moSE_OBJECT_RESTRICTED = $FFFFFEDF;
  moSE_INVALID_GEOGTRAN_OBJECT = $FFFFFEDE;
  moSE_COLUMN_EXISTS = $FFFFFEDD;
  moSE_SQL_KEYWORD = $FFFFFEDC;
  moSE_INVALID_OBJECTLOCKINFO_OBJECT = $FFFFFEDB;
  moSE_RASTERBUFFER_TOO_SMALL = $FFFFFEDA;
  moSE_INVALID_RASTER_DATA = $FFFFFED9;
  moSE_OPERATION_NOT_ALLOWED = $FFFFFED8;
  moSE_INVALID_RASTERATTR_OBJECT = $FFFFFED7;
  moSE_INVALID_VERSION_ID = $FFFFFED6;
  moSE_MVTABLE_CANT_BE_LOAD_ONLY = $FFFFFED5;
  moSE_INVALID_SDO_GEOM_METADATA_OBJ = $FFFFFED4;
  moSE_ROW_OUT_OF_SEQUENCE = $FFFFFED3;
  moSE_INSTANCE_IS_READ_ONLY = $FFFFFED2;
  moSE_MOSAIC_NOT_ALLOWED = $FFFFFED1;
  moSE_INVALID_RASTER_BITMAP = $FFFFFED0;
  moSE_SEQUENCENBR_NOEXIST = $FFFFFECF;
  moSE_SQLTYPE_INVALID_FEATURE_TYPE = $FFFFFECE;
  moSE_DBMS_OBJECTS_NOT_SUPPORTED = $FFFFFECD;
  moSE_BINARY_CONV_NO_COLUMNS_FOUND = $FFFFFECC;
  moSE_RASTERBAND_NO_COLORMAP = $FFFFFECB;
  moSE_INVALID_BIN_FUNCTION = $FFFFFECA;
  moSE_INVALID_RASTERBAND_STATS = $FFFFFEC9;
  moSE_INVALID_RASTERBAND_COLORMAP = $FFFFFEC8;
  moSE_INVALID_RASTER_KEYWORD = $FFFFFEC7;
  moSE_INCOMPATIBLE_INSTANCE = $FFFFFEC6;
  moSE_INVALID_VOLUME_INFO = $FFFFFEC5;
  moSE_INVALID_COMPRESSION_TYPE = $FFFFFEC4;
  moSE_INVALID_INDEX_PARAM = $FFFFFEC3;
  moSE_INVALID_INDEX_TYPE = $FFFFFEC2;
  moSE_SET_VALUE_CONFLICT = $FFFFFEC1;
  moSE_ADT_DATATYPE_NOT_SUPPORTED = $FFFFFEC0;
  moSE_NO_SPATIAL_INDEX = $FFFFFEBF;
  moSE_INVALID_IDENTIFIER = $FFFFFEBE;
  moSE_REGISTERED_TABLE_ROWID_EXIST = $FFFFFEBD;
  moSE_SERVER_LIB_LOAD_ERROR = $FFFFFEBC;
  moSE_REGISTRATION_NOT_ALLOWED = $FFFFFEBB;
  moSE_UNSUPPORTED_ON_MVTABLE = $FFFFFEBA;
  moSE_NO_ARCSDE_LICENSE = $FFFFFEB9;
  moSE_SDE_WARNING = $FFFFFC18;
  moSE_ETYPE_CHANGED = $FFFFFC17;
  moSE_AUTOCOMMITTED = $FFFFFC16;
  moSE_NO_ROWS_DELETED = $FFFFFC16;
  moSE_TOO_MANY_DISTINCTS = $FFFFFC15;
  moSE_NULL_VALUE = $FFFFFC14;
  moSE_NO_ROWS_UPDATED = $FFFFFC13;
  moSE_NO_CPGCVT = $FFFFFC12;
  moSE_NO_CPGHOME = $FFFFFC11;
  moSE_DBMS_DOES_NOT_SUPPORT = $FFFFFC10;
  moSE_INVALID_FUNCTION_ID = $FFFFFC0F;
  moSE_LAYERS_UPDATE_FAILED = $FFFFFC0E;
  moSE_NO_LOCALIZED_MESSAGE = $FFFFFC0D;
  moSE_SPATIAL_INDEX_NOT_CREATED = $FFFFFC0C;

// Constants for enum ShapeTypeConstants
type
  ShapeTypeConstants = TOleEnum;
const
  moShapeTypePoint = $00000015;
  moShapeTypeLine = $00000016;
  moShapeTypePolygon = $00000017;
  moShapeTypeMultipoint = $00000018;
  moShapeTypeRectangle = $00000019;
  moShapeTypeEllipse = $0000001A;

// Constants for enum CodePageConstants
type
  CodePageConstants = TOleEnum;
const
  moDefaultCodePage = $00000000;
  moOemCodePage = $00000001;
  moAnsiCodePage = $00000002;
  moIsoCodePage = $00000003;

// Constants for enum FieldTypeConstants
type
  FieldTypeConstants = TOleEnum;
const
  moNone = $00000000;
  moLong = $00000003;
  moDouble = $00000005;
  moDate = $00000007;
  moString = $00000008;
  moBoolean = $0000000B;
  moPoint = $00000015;
  moLine = $00000016;
  moPolygon = $00000017;
  moPoints = $00000018;

// Constants for enum ProjectionConstants
type
  ProjectionConstants = TOleEnum;
const
  moProjection_Albers = $0000A7FF;
  moProjection_AzimuthalEquidistant = $0000A818;
  moProjection_Behrmann = $0000A809;
  moProjection_Bonne = $0000A810;
  moProjection_Cassini = $0000A814;
  moProjection_EckertI = $0000A807;
  moProjection_EckertII = $0000A806;
  moProjection_EckertIII = $0000A805;
  moProjection_EckertIV = $0000A804;
  moProjection_EckertV = $0000A803;
  moProjection_EckertVI = $0000A802;
  moProjection_EquidistantConic = $0000A813;
  moProjection_EquidistantCylindrical = $0000A7FA;
  moProjection_GallStereographic = $0000A808;
  moProjection_GaussKruger = $0000A7FD;
  moProjection_Hotine = $0000A811;
  moProjection_LambertConformalConic = $0000A80C;
  moProjection_Loximuthal = $0000A80F;
  moProjection_Mercator = $0000A7FC;
  moProjection_MillerCylindrical = $0000A7FB;
  moProjection_Mollweide = $0000A801;
  moProjection_PlateCarree = $0000A7F9;
  moProjection_Polyconic = $0000A80D;
  moProjection_QuarticAuthalic = $0000A80E;
  moProjection_Robinson = $0000A816;
  moProjection_Sinusoidal = $0000A800;
  moProjection_Stereographic = $0000A812;
  moProjection_TransverseMercator = $0000A7FE;
  moProjection_TwoPointEquidistant = $0000A817;
  moProjection_VanDerGrintenI = $0000A815;
  moProjection_WinkelI = $0000A80A;
  moProjection_WinkelII = $0000A80B;
  moProjection_Aitoff = $0000A823;
  moProjection_CrasterParabolic = $0000A826;
  moProjection_CylindricalEqualArea = $0000A81A;
  moProjection_DoubleStereographic = $0000A81E;
  moProjection_FlatPolarQuartic = $0000A825;
  moProjection_Gnomonic = $0000A827;
  moProjection_HammerAitoff = $0000A824;
  moProjection_HotineObliqueMercatorAzimuthCenter = $0000A81D;
  moProjection_HotineObliqueMercatorAzimuthNaturalOrigin = $0000A81C;
  moProjection_HotineObliqueMercatorTwoPointCenter = $0000A81B;
  moProjection_Krovak = $0000A81F;
  moProjection_LambertAzimuthalEqualArea = $0000A819;
  moProjection_NewZealandMapGrid = $0000A820;
  moProjection_Orthographic = $0000A821;
  moProjection_StereographicNorthPole = $0000A82A;
  moProjection_StereographicSouthPole = $0000A82B;
  moProjection_Times = $0000A828;
  moProjection_VerticalNearSidePerspective = $0000A829;
  moProjection_WinkelTripel = $0000A822;

// Constants for enum StringsSortOrderConstants
type
  StringsSortOrderConstants = TOleEnum;
const
  moLexicalOrderAscending = $00000000;
  moLexicalOrderDescending = $00000001;
  moAsciiOrderAscending = $00000002;
  moAsciiOrderDescending = $00000003;

// Constants for enum EditModeConstants
type
  EditModeConstants = TOleEnum;
const
  moEditNone = $00000000;
  moEditInProgress = $00000001;
  moEditAdd = $00000002;

// Constants for enum SymbolTypeConstants
type
  SymbolTypeConstants = TOleEnum;
const
  moPointSymbol = $00000000;
  moLineSymbol = $00000001;
  moFillSymbol = $00000002;

// Constants for enum LayerTypeConstants
type
  LayerTypeConstants = TOleEnum;
const
  moMapLayer = $00000000;
  moImageLayer = $00000001;

// Constants for enum SearchMethodConstants
type
  SearchMethodConstants = TOleEnum;
const
  moExtentOverlap = $00000000;
  moCommonPoint = $00000001;
  moLineCross = $00000002;
  moCommonLine = $00000003;
  moCommonPointOrLineCross = $00000004;
  moEdgeTouchOrAreaIntersect = $00000005;
  moAreaIntersect = $00000006;
  moAreaIntersectNoEdgeTouch = $00000007;
  moContainedBy = $00000008;
  moContaining = $00000009;
  moContainedByNoEdgeTouch = $0000000A;
  moContainingNoEdgeTouch = $0000000B;
  moPointInPolygon = $0000000C;
  moCentroidInPolygon = $0000000D;
  moIdentical = $0000000E;

// Constants for enum FilterOrderConstants
type
  FilterOrderConstants = TOleEnum;
const
  moAttributeFirst = $00000001;
  moShapeFirst = $00000002;
  moOptimize = $00000003;

// Constants for enum AlignmentConstants
type
  AlignmentConstants = TOleEnum;
const
  moAlignTop = $00000001;
  moAlignBottom = $00000002;
  moAlignLeft = $00000003;
  moAlignRight = $00000004;
  moAlignCenter = $00000005;
  moAlignBaseline = $00000006;

// Constants for enum ImageCatalogConstants
type
  ImageCatalogConstants = TOleEnum;
const
  moOpenImagesInDisplay = $00000000;
  moOpenAllImages = $00000001;
  moOpenOneImage = $00000002;

// Constants for enum StreetSideConstants
type
  StreetSideConstants = TOleEnum;
const
  moLeftSide = $00000000;
  moRightSide = $00000001;

// Constants for enum ProjectedCoordSysConstants
type
  ProjectedCoordSysConstants = TOleEnum;
const
  moProjCS_AdindanUTM_37N = $00004EA9;
  moProjCS_AdindanUTM_38N = $00004EAA;
  moProjCS_AfgooyeUTM_38N = $0000503A;
  moProjCS_AfgooyeUTM_39N = $0000503B;
  moProjCS_AGD1966AMG_48 = $00004F18;
  moProjCS_AGD1966AMG_49 = $00004F19;
  moProjCS_AGD1966AMG_50 = $00004F1A;
  moProjCS_AGD1966AMG_51 = $00004F1B;
  moProjCS_AGD1966AMG_52 = $00004F1C;
  moProjCS_AGD1966AMG_53 = $00004F1D;
  moProjCS_AGD1966AMG_54 = $00004F1E;
  moProjCS_AGD1966AMG_55 = $00004F1F;
  moProjCS_AGD1966AMG_56 = $00004F20;
  moProjCS_AGD1966AMG_57 = $00004F21;
  moProjCS_AGD1966AMG_58 = $00004F22;
  moProjCS_AGD1984AMG_48 = $00004F7C;
  moProjCS_AGD1984AMG_49 = $00004F7D;
  moProjCS_AGD1984AMG_50 = $00004F7E;
  moProjCS_AGD1984AMG_51 = $00004F7F;
  moProjCS_AGD1984AMG_52 = $00004F80;
  moProjCS_AGD1984AMG_53 = $00004F81;
  moProjCS_AGD1984AMG_54 = $00004F82;
  moProjCS_AGD1984AMG_55 = $00004F83;
  moProjCS_AGD1984AMG_56 = $00004F84;
  moProjCS_AGD1984AMG_57 = $00004F85;
  moProjCS_AGD1984AMG_58 = $00004F86;
  moProjCS_AinElAbd1970UTM_37N = $00004FD5;
  moProjCS_AinElAbd1970UTM_38N = $00004FD6;
  moProjCS_AinElAbd1970UTM_39N = $00004FD7;
  moProjCS_AratuUTM_22S = $00005156;
  moProjCS_AratuUTM_23S = $00005157;
  moProjCS_AratuUTM_24S = $00005158;
  moProjCS_Argentina_1 = $000056AF;
  moProjCS_Argentina_2 = $000056B0;
  moProjCS_Argentina_3 = $000056B1;
  moProjCS_Argentina_4 = $000056B2;
  moProjCS_Argentina_5 = $000056B3;
  moProjCS_Argentina_6 = $000056B4;
  moProjCS_Argentina_7 = $000056B5;
  moProjCS_ATS1977UTM_19N = $000008AB;
  moProjCS_ATS1977UTM_20N = $000008AC;
  moProjCS_AustriaFerroCentral = $00007A3C;
  moProjCS_AustriaFerroEast = $00007A3D;
  moProjCS_AustriaFerroWest = $00007A3B;
  moProjCS_BahrainStateGrid = $00005013;
  moProjCS_BataviaUTM_48S = $0000529C;
  moProjCS_BataviaUTM_49S = $0000529D;
  moProjCS_BataviaUTM_50S = $0000529E;
  moProjCS_Beijing1954GK_13 = $000053A5;
  moProjCS_Beijing1954GK_13N = $000053E1;
  moProjCS_Beijing1954GK_14 = $000053A6;
  moProjCS_Beijing1954GK_14N = $000053E2;
  moProjCS_Beijing1954GK_15 = $000053A7;
  moProjCS_Beijing1954GK_15N = $000053E3;
  moProjCS_Beijing1954GK_16 = $000053A8;
  moProjCS_Beijing1954GK_16N = $000053E4;
  moProjCS_Beijing1954GK_17 = $000053A9;
  moProjCS_Beijing1954GK_17N = $000053E5;
  moProjCS_Beijing1954GK_18 = $000053AA;
  moProjCS_Beijing1954GK_18N = $000053E6;
  moProjCS_Beijing1954GK_19 = $000053AB;
  moProjCS_Beijing1954GK_19N = $000053E7;
  moProjCS_Beijing1954GK_20 = $000053AC;
  moProjCS_Beijing1954GK_20N = $000053E8;
  moProjCS_Beijing1954GK_21 = $000053AD;
  moProjCS_Beijing1954GK_21N = $000053E9;
  moProjCS_Beijing1954GK_22 = $000053AE;
  moProjCS_Beijing1954GK_22N = $000053EA;
  moProjCS_Beijing1954GK_23 = $000053AF;
  moProjCS_Beijing1954GK_23N = $000053EB;
  moProjCS_BelgeLambert1950 = $000053FC;
  moProjCS_BogotaUTM_17N = $00005539;
  moProjCS_BogotaUTM_18N = $0000553A;
  moProjCS_BritishNationalGrid = $00006C34;
  moProjCS_CamacupaUTM_32S = $00005610;
  moProjCS_CamacupaUTM_33S = $00005611;
  moProjCS_CarthageUTM_32N = $0000573C;
  moProjCS_CentreFrance = $00006BC8;
  moProjCS_ColombiaBogota = $00005584;
  moProjCS_ColombiaECentral = $00005585;
  moProjCS_ColombiaEast = $00005586;
  moProjCS_ColombiaWest = $00005583;
  moProjCS_CorregoAlegreUTM_23S = $000057FB;
  moProjCS_CorregoAlegreUTM_24S = $000057FC;
  moProjCS_Corse = $00006BCA;
  moProjCS_Datum73UTM_29N = $00006B25;
  moProjCS_DoualaUTM_32N = $00005930;
  moProjCS_ED_1950_UTM_28N = $000059F4;
  moProjCS_ED_1950_UTM_29N = $000059F5;
  moProjCS_ED_1950_UTM_30N = $000059F6;
  moProjCS_ED_1950_UTM_31N = $000059F7;
  moProjCS_ED_1950_UTM_32N = $000059F8;
  moProjCS_ED_1950_UTM_33N = $000059F9;
  moProjCS_ED_1950_UTM_34N = $000059FA;
  moProjCS_ED_1950_UTM_35N = $000059FB;
  moProjCS_ED_1950_UTM_36N = $000059FC;
  moProjCS_ED_1950_UTM_37N = $000059FD;
  moProjCS_ED_1950_UTM_38N = $000059FE;
  moProjCS_EgyptExtendedPurpleBelt = $000059D2;
  moProjCS_EgyptPurpleBelt = $000059D1;
  moProjCS_EgyptRedBelt = $000059D0;
  moProjCS_ETRS1989UTM_28N = $000064E4;
  moProjCS_ETRS1989UTM_29N = $000064E5;
  moProjCS_ETRS1989UTM_30N = $000064E6;
  moProjCS_ETRS1989UTM_31N = $000064E7;
  moProjCS_ETRS1989UTM_32N = $000064E8;
  moProjCS_ETRS1989UTM_33N = $000064E9;
  moProjCS_ETRS1989UTM_34N = $000064EA;
  moProjCS_ETRS1989UTM_35N = $000064EB;
  moProjCS_ETRS1989UTM_36N = $000064EC;
  moProjCS_ETRS1989UTM_37N = $000064ED;
  moProjCS_ETRS1989UTM_38N = $000064EE;
  moProjCS_FahudUTM_39N = $00005AC7;
  moProjCS_FahudUTM_40N = $00005AC8;
  moProjCS_Finland_1 = $00000957;
  moProjCS_Finland_2 = $00000958;
  moProjCS_Finland_3 = $00000959;
  moProjCS_Finland_4 = $0000095A;
  moProjCS_FranceI = $00006BBD;
  moProjCS_FranceII = $00006BBE;
  moProjCS_FranceIII = $00006BBF;
  moProjCS_FranceIV = $00006BC0;
  moProjCS_GarouaUTM_33N = $00005B89;
  moProjCS_GDA1994MGA_48 = $00006EBC;
  moProjCS_GDA1994MGA_49 = $00006EBD;
  moProjCS_GDA1994MGA_50 = $00006EBE;
  moProjCS_GDA1994MGA_51 = $00006EBF;
  moProjCS_GDA1994MGA_52 = $00006EC0;
  moProjCS_GDA1994MGA_53 = $00006EC1;
  moProjCS_GDA1994MGA_54 = $00006EC2;
  moProjCS_GDA1994MGA_55 = $00006EC3;
  moProjCS_GDA1994MGA_56 = $00006EC4;
  moProjCS_GDA1994MGA_57 = $00006EC5;
  moProjCS_GDA1994MGA_58 = $00006EC6;
  moProjCS_Germany_1 = $00007B03;
  moProjCS_Germany_2 = $00007B04;
  moProjCS_Germany_3 = $00007B05;
  moProjCS_Germany_4 = $00007B06;
  moProjCS_Germany_5 = $00007B07;
  moProjCS_GhanaMetreGrid = $000061A8;
  moProjCS_GreekGrid = $00000834;
  moProjCS_Indian1954UTM_47N = $00005D8B;
  moProjCS_Indian1954UTM_48N = $00005D8C;
  moProjCS_Indian1975UTM_47N = $00005DEF;
  moProjCS_Indian1975UTM_48N = $00005DF0;
  moProjCS_India_0 = $00005F32;
  moProjCS_India_I = $00005F33;
  moProjCS_India_IIa = $00005F34;
  moProjCS_India_IIb = $00005F3E;
  moProjCS_India_IIIa = $00005F35;
  moProjCS_India_IIIb = $00005F3F;
  moProjCS_India_IVa = $00005F36;
  moProjCS_India_IVb = $00005F40;
  moProjCS_Indonesia1974UTM_46N = $00005D26;
  moProjCS_Indonesia1974UTM_46S = $00005D4E;
  moProjCS_Indonesia1974UTM_47N = $00005D27;
  moProjCS_Indonesia1974UTM_47S = $00005D4F;
  moProjCS_Indonesia1974UTM_48N = $00005D28;
  moProjCS_Indonesia1974UTM_48S = $00005D50;
  moProjCS_Indonesia1974UTM_49N = $00005D29;
  moProjCS_Indonesia1974UTM_49S = $00005D51;
  moProjCS_Indonesia1974UTM_50N = $00005D2A;
  moProjCS_Indonesia1974UTM_50S = $00005D52;
  moProjCS_Indonesia1974UTM_51N = $00005D2B;
  moProjCS_Indonesia1974UTM_51S = $00005D53;
  moProjCS_Indonesia1974UTM_52N = $00005D2C;
  moProjCS_Indonesia1974UTM_52S = $00005D54;
  moProjCS_Indonesia1974UTM_53N = $00005D2D;
  moProjCS_Indonesia1974UTM_53S = $00005D55;
  moProjCS_Indonesia1974UTM_54S = $00005D56;
  moProjCS_IrishNationalGrid = $000074CC;
  moProjCS_Jamaica1875OldGrid = $00005E24;
  moProjCS_Jad1969JamaicaGrid = $00005E88;
  moProjCS_KertauUTM_47N = $00005FE3;
  moProjCS_KertauUTM_48N = $00005FE4;
  moProjCS_KOC_Lambert = $00006018;
  moProjCS_KuwaitUtilityKTM = $00007C9C;
  moProjCS_LaCanoaUTM_20N = $00006090;
  moProjCS_LaCanoaUTM_21N = $00006091;
  moProjCS_LomeUTM_31N = $0000628F;
  moProjCS_Malongo1987UTM_32S = $0000654C;
  moProjCS_MassawaUTM_37N = $0000667D;
  moProjCS_MhastUTM_32S = $00006740;
  moProjCS_MinnaUTM_31N = $000066DB;
  moProjCS_MinnaUTM_32N = $000066DC;
  moProjCS_MonteMarioRomeItaly1 = $000067DF;
  moProjCS_MonteMarioRomeItaly2 = $000067E0;
  moProjCS_MPoralokoUTM_32N = $00006808;
  moProjCS_MPoralokoUTM_32S = $00006844;
  moProjCS_NAD1927SPCS_ALEast = $00006869;
  moProjCS_NAD1927SPCS_ALWest = $0000686A;
  moProjCS_NAD1927SPCS_AK10 = $00006874;
  moProjCS_NAD1927SPCS_AK2 = $0000686C;
  moProjCS_NAD1927SPCS_AK3 = $0000686D;
  moProjCS_NAD1927SPCS_AK4 = $0000686E;
  moProjCS_NAD1927SPCS_AK5 = $0000686F;
  moProjCS_NAD1927SPCS_AK6 = $00006870;
  moProjCS_NAD1927SPCS_AK7 = $00006871;
  moProjCS_NAD1927SPCS_AK8 = $00006872;
  moProjCS_NAD1927SPCS_AK9 = $00006873;
  moProjCS_NAD1927SPCS_AZCentral = $0000687D;
  moProjCS_NAD1927SPCS_AZEast = $0000687C;
  moProjCS_NAD1927SPCS_AZWest = $0000687E;
  moProjCS_NAD1927SPCS_ARNorth = $0000687F;
  moProjCS_NAD1927SPCS_ARSouth = $00006880;
  moProjCS_NAD1927BLM_14N = $00007D4A;
  moProjCS_NAD1927BLM_15N = $00007D4B;
  moProjCS_NAD1927BLM_16N = $00007D4C;
  moProjCS_NAD1927BLM_17N = $00007D4D;
  moProjCS_NAD1927SPCS_CAI = $00006875;
  moProjCS_NAD1927SPCS_CAII = $00006876;
  moProjCS_NAD1927SPCS_CAIII = $00006877;
  moProjCS_NAD1927SPCS_CAIV = $00006878;
  moProjCS_NAD1927SPCS_CAV = $00006879;
  moProjCS_NAD1927SPCS_CAVI = $0000687A;
  moProjCS_NAD1927SPCS_CAVII = $0000687B;
  moProjCS_NAD1927SPCS_COCentral = $00006882;
  moProjCS_NAD1927SPCS_CONorth = $00006881;
  moProjCS_NAD1927SPCS_COSouth = $00006883;
  moProjCS_NAD1927SPCS_CT = $00006884;
  moProjCS_NAD1927SPCS_DE = $00006885;
  moProjCS_NAD1927SPCS_FLEast = $00006886;
  moProjCS_NAD1927SPCS_FLNorth = $00006888;
  moProjCS_NAD1927SPCS_FLWest = $00006887;
  moProjCS_NAD1927SPCS_GAEast = $0000688E;
  moProjCS_NAD1927SPCS_GAWest = $0000688F;
  moProjCS_NAD1927SPCS_Guam = $0000FE25;
  moProjCS_NAD1927SPCS_HI1 = $00006889;
  moProjCS_NAD1927SPCS_HI2 = $0000688A;
  moProjCS_NAD1927SPCS_HI3 = $0000688B;
  moProjCS_NAD1927SPCS_HI4 = $0000688C;
  moProjCS_NAD1927SPCS_HI5 = $0000688D;
  moProjCS_NAD1927SPCS_IDCentral = $00006891;
  moProjCS_NAD1927SPCS_IDEast = $00006890;
  moProjCS_NAD1927SPCS_IDWest = $00006892;
  moProjCS_NAD1927SPCS_ILEast = $00006893;
  moProjCS_NAD1927SPCS_ILWest = $00006894;
  moProjCS_NAD1927SPCS_INEast = $00006895;
  moProjCS_NAD1927SPCS_INWest = $00006896;
  moProjCS_NAD1927SPCS_IANorth = $00006897;
  moProjCS_NAD1927SPCS_IASouth = $00006898;
  moProjCS_NAD1927SPCS_KSNorth = $00006899;
  moProjCS_NAD1927SPCS_KSSouth = $0000689A;
  moProjCS_NAD1927SPCS_KYNorth = $0000689B;
  moProjCS_NAD1927SPCS_KYSouth = $0000689C;
  moProjCS_NAD1927SPCS_LANorth = $0000689D;
  moProjCS_NAD1927SPCS_LASouth = $0000689E;
  moProjCS_NAD1927SPCS_MEEast = $0000689F;
  moProjCS_NAD1927SPCS_MEWest = $000068A0;
  moProjCS_NAD1927SPCS_MaD = $000068A1;
  moProjCS_NAD1927SPCS_MAIsland = $000068A3;
  moProjCS_NAD1927SPCS_MAMainland = $000068A2;
  moProjCS_NAD1927SPCS_MICentral = $000068A5;
  moProjCS_NAD1927SPCS_MINorth = $000068A4;
  moProjCS_NAD1927SPCS_MISouth = $000068A6;
  moProjCS_NAD1927SPCS_MNCentral = $000068A8;
  moProjCS_NAD1927SPCS_MNNorth = $000068A7;
  moProjCS_NAD1927SPCS_MNSouth = $000068A9;
  moProjCS_NAD1927SPCS_MSEast = $000068AA;
  moProjCS_NAD1927SPCS_MSWest = $000068AB;
  moProjCS_NAD1927SPCS_MOCentral = $000068AD;
  moProjCS_NAD1927SPCS_MOEast = $000068AC;
  moProjCS_NAD1927SPCS_MOWest = $000068AE;
  moProjCS_NAD1927SPCS_MTCentral = $00007D02;
  moProjCS_NAD1927SPCS_MTNorth = $00007D01;
  moProjCS_NAD1927SPCS_MTSouth = $00007D03;
  moProjCS_NAD1927SPCS_NENorth = $00007D05;
  moProjCS_NAD1927SPCS_NESouth = $00007D06;
  moProjCS_NAD1927SPCS_NVCentral = $00007D08;
  moProjCS_NAD1927SPCS_NVEast = $00007D07;
  moProjCS_NAD1927SPCS_NVWest = $00007D09;
  moProjCS_NAD1927SPCS_NH = $00007D0A;
  moProjCS_NAD1927SPCS_NJ = $00007D0B;
  moProjCS_NAD1927SPCS_NMCentral = $00007D0D;
  moProjCS_NAD1927SPCS_NMEast = $00007D0C;
  moProjCS_NAD1927SPCS_NMWest = $00007D0E;
  moProjCS_NAD1927SPCS_NYCentral = $00007D10;
  moProjCS_NAD1927SPCS_NYEast = $00007D0F;
  moProjCS_NAD1927SPCS_NYLongIsland = $00007D12;
  moProjCS_NAD1927SPCS_NYWest = $00007D11;
  moProjCS_NAD1927SPCS_NC = $00007D13;
  moProjCS_NAD1927SPCS_NDNorth = $00007D14;
  moProjCS_NAD1927SPCS_NDSouth = $00007D15;
  moProjCS_NAD1927SPCS_OhioNorth = $00007D16;
  moProjCS_NAD1927SPCS_OHSouth = $00007D17;
  moProjCS_NAD1927SPCS_OKNorth = $00007D18;
  moProjCS_NAD1927SPCS_OKSouth = $00007D19;
  moProjCS_NAD1927SPCS_ORNorth = $00007D1A;
  moProjCS_NAD1927SPCS_ORSouth = $00007D1B;
  moProjCS_NAD1927SPCS_PANorth = $00007D1C;
  moProjCS_NAD1927SPCS_PAaSouth = $00007D1D;
  moProjCS_NAD1927SPCS_PuertoRico = $00007D3B;
  moProjCS_NAD1927SPCS_RI = $00007D1E;
  moProjCS_NAD1927SPCS_SCNorth = $00007D1F;
  moProjCS_NAD1927SPCS_SCSouth = $00007D21;
  moProjCS_NAD1927SPCS_SDNorth = $00007D22;
  moProjCS_NAD1927SPCS_SDSouth = $00007D23;
  moProjCS_NAD1927SPCS_TN = $00007D24;
  moProjCS_NAD1927SPCS_TXCentral = $00007D27;
  moProjCS_NAD1927SPCS_TXNorth = $00007D25;
  moProjCS_NAD1927SPCS_TXNorthCentral = $00007D26;
  moProjCS_NAD1927SPCS_TXSouth = $00007D29;
  moProjCS_NAD1927SPCS_TXSouthCentral = $00007D28;
  moProjCS_NAD1927SPCS_UTCentral = $00007D2B;
  moProjCS_NAD1927SPCS_UTNorth = $00007D2A;
  moProjCS_NAD1927SPCS_UTSouth = $00007D2C;
  moProjCS_NAD1927UTM_10N = $00006856;
  moProjCS_NAD1927UTM_11N = $00006857;
  moProjCS_NAD1927UTM_12N = $00006858;
  moProjCS_NAD1927UTM_13N = $00006859;
  moProjCS_NAD1927UTM_14N = $0000685A;
  moProjCS_NAD1927UTM_15N = $0000685B;
  moProjCS_NAD1927UTM_16N = $0000685C;
  moProjCS_NAD1927UTM_17N = $0000685D;
  moProjCS_NAD1927UTM_18N = $0000685E;
  moProjCS_NAD1927UTM_19N = $0000685F;
  moProjCS_NAD1927UTM_20N = $00006860;
  moProjCS_NAD1927UTM_21N = $00006861;
  moProjCS_NAD1927UTM_22N = $00006862;
  moProjCS_NAD1927UTM_3N = $0000684F;
  moProjCS_NAD1927UTM_4N = $00006850;
  moProjCS_NAD1927UTM_5N = $00006851;
  moProjCS_NAD1927UTM_6N = $00006852;
  moProjCS_NAD1927UTM_7N = $00006853;
  moProjCS_NAD1927UTM_8N = $00006854;
  moProjCS_NAD1927UTM_9N = $00006855;
  moProjCS_NAD1927SPCS_VT = $00007D2D;
  moProjCS_NAD1927SPCS_VANorth = $00007D2E;
  moProjCS_NAD1927SPCS_VASouth = $00007D2F;
  moProjCS_NAD1927SPCS_StCroix = $00007D3C;
  moProjCS_NAD1927SPCS_WANorth = $00007D30;
  moProjCS_NAD1927SPCS_WASouth = $00007D31;
  moProjCS_NAD1927SPCS_WVNorth = $00007D32;
  moProjCS_NAD1927SPCS_WVSouth = $00007D33;
  moProjCS_NAD1927SPCS_WICentral = $00007D35;
  moProjCS_NAD1927SPCS_WINorth = $00007D34;
  moProjCS_NAD1927SPCS_WISouth = $00007D36;
  moProjCS_NAD1927SPCS_WYEast = $00007D37;
  moProjCS_NAD1927SPCS_WYEastCentral = $00007D38;
  moProjCS_NAD1927SPCS_WYWest = $00007D3A;
  moProjCS_NAD1927SPCS_WYWestCentral = $00007D39;
  moProjCS_NAD1983SPCS_ALEast = $00006931;
  moProjCS_NAD1983SPCS_ALWest = $00006932;
  moProjCS_NAD1983SPCS_AK10 = $0000693C;
  moProjCS_NAD1983SPCS_AK2 = $00006934;
  moProjCS_NAD1983SPCS_AK3 = $00006935;
  moProjCS_NAD1983SPCS_AK4 = $00006936;
  moProjCS_NAD1983SPCS_AK5 = $00006937;
  moProjCS_NAD1983SPCS_AK6 = $00006938;
  moProjCS_NAD1983SPCS_AK7 = $00006939;
  moProjCS_NAD1983SPCS_AK8 = $0000693A;
  moProjCS_NAD1983SPCS_AK9 = $0000693B;
  moProjCS_NAD1983SPCS_AZCentral = $00006945;
  moProjCS_NAD1983SPCS_AZEast = $00006944;
  moProjCS_NAD1983SPCS_AZWest = $00006946;
  moProjCS_NAD1983SPCS_AKNorth = $00006947;
  moProjCS_NAD1983SPCS_AKSouth = $00006948;
  moProjCS_NAD1983SPCS_CAI = $0000693D;
  moProjCS_NAD1983SPCS_CAII = $0000693E;
  moProjCS_NAD1983SPCS_CAIII = $0000693F;
  moProjCS_NAD1983SPCS_CAIV = $00006940;
  moProjCS_NAD1983SPCS_CAV = $00006941;
  moProjCS_NAD1983SPCS_CAVI = $00006942;
  moProjCS_NAD1983SPCS_COCentral = $0000694A;
  moProjCS_NAD1983SPCS_CONorth = $00006949;
  moProjCS_NAD1983SPCS_COSouth = $0000694B;
  moProjCS_NAD1983SPCS_CT = $0000694C;
  moProjCS_NAD1983SPCS_DE = $0000694D;
  moProjCS_NAD1983SPCS_FLEast = $0000694E;
  moProjCS_NAD1983SPCS_FLNorth = $00006950;
  moProjCS_NAD1983SPCS_FLWest = $0000694F;
  moProjCS_NAD1983SPCS_GAEast = $00006956;
  moProjCS_NAD1983SPCS_GAWest = $00006957;
  moProjCS_NAD1983SPCS_Guam = $0000FE89;
  moProjCS_NAD1983SPCS_HI_1 = $00006951;
  moProjCS_NAD1983SPCS_HI_2 = $00006952;
  moProjCS_NAD1983SPCS_HI_3 = $00006953;
  moProjCS_NAD1983SPCS_HI_4 = $00006954;
  moProjCS_NAD1983SPCS_HI_5 = $00006955;
  moProjCS_NAD1983SPCS_IDCentral = $00006959;
  moProjCS_NAD1983SPCS_IDEast = $00006958;
  moProjCS_NAD1983SPCS_IDWest = $0000695A;
  moProjCS_NAD1983SPCS_ILEast = $0000695B;
  moProjCS_NAD1983SPCS_ILWest = $0000695C;
  moProjCS_NAD1983SPCS_INEast = $0000695D;
  moProjCS_NAD1983SPCS_INWest = $0000695E;
  moProjCS_NAD1983SPCS_IANorth = $0000695F;
  moProjCS_NAD1983SPCS_IASouth = $00006960;
  moProjCS_NAD1983SPCS_KSNorth = $00006961;
  moProjCS_NAD1983SPCS_KSSouth = $00006962;
  moProjCS_NAD1983SPCS_KYNorth = $00006963;
  moProjCS_NAD1983SPCS_KYSouth = $00006964;
  moProjCS_NAD1983SPCS_LANorth = $00006965;
  moProjCS_NAD1983SPCS_LASouth = $00006966;
  moProjCS_NAD1983SPCS_MEEast = $00006967;
  moProjCS_NAD1983SPCS_MEWest = $00006968;
  moProjCS_NAD1983SPCS_MD = $00006969;
  moProjCS_NAD1983SPCS_MAIsland = $0000696B;
  moProjCS_NAD1983SPCS_MAMainland = $0000696A;
  moProjCS_NAD1983SPCS_MICentral = $0000696D;
  moProjCS_NAD1983SPCS_MINorth = $0000696C;
  moProjCS_NAD1983SPCS_MISouth = $0000696E;
  moProjCS_NAD1983SPCS_MNCentral = $00006970;
  moProjCS_NAD1983SPCS_MNNorth = $0000696F;
  moProjCS_NAD1983SPCS_MNSouth = $00006971;
  moProjCS_NAD1983SPCS_MSEast = $00006972;
  moProjCS_NAD1983SPCS_MSWest = $00006973;
  moProjCS_NAD1983SPCS_MOCentral = $00006975;
  moProjCS_NAD1983SPCS_MOEast = $00006974;
  moProjCS_NAD1983SPCS_MOWest = $00006976;
  moProjCS_NAD1983SPCS_MT = $00007D64;
  moProjCS_NAD1983SPCS_NE = $00007D68;
  moProjCS_NAD1983SPCS_NVCentral = $00007D6C;
  moProjCS_NAD1983SPCS_NVEast = $00007D6B;
  moProjCS_NAD1983SPCS_NVWest = $00007D6D;
  moProjCS_NAD1983SPCS_NH = $00007D6E;
  moProjCS_NAD1983SPCS_NJ = $00007D6F;
  moProjCS_NAD1983SPCS_NMCentral = $00007D71;
  moProjCS_NAD1983SPCS_NMEast = $00007D70;
  moProjCS_NAD1983SPCS_NMWest = $00007D72;
  moProjCS_NAD1983SPCS_NYCentral = $00007D74;
  moProjCS_NAD1983SPCS_NYEast = $00007D73;
  moProjCS_NAD1983SPCS_NYLongIsland = $00007D76;
  moProjCS_NAD1983SPCS_NYWest = $00007D75;
  moProjCS_NAD1983SPCS_NC = $00007D77;
  moProjCS_NAD1983SPCS_NDNorth = $00007D78;
  moProjCS_NAD1983SPCS_NDSouth = $00007D79;
  moProjCS_NAD1983SPCS_OHNorth = $00007D7A;
  moProjCS_NAD1983SPCS_OHSouth = $00007D7B;
  moProjCS_NAD1983SPCS_OKNorth = $00007D7C;
  moProjCS_NAD1983SPCS_OKSouth = $00007D7D;
  moProjCS_NAD1983SPCS_ORNorth = $00007D7E;
  moProjCS_NAD1983SPCS_ORSouth = $00007D7F;
  moProjCS_NAD1983SPCS_PANorth = $00007D80;
  moProjCS_NAD1983SPCS_PASouth = $00007D81;
  moProjCS_NAD1983SPCS_PRStCroix = $00007DA1;
  moProjCS_NAD1983SPCS_RI = $00007D82;
  moProjCS_NAD1983SPCS_SC = $00007D85;
  moProjCS_NAD1983SPCS_SDNorth = $00007D86;
  moProjCS_NAD1983SPCS_SDSouth = $00007D87;
  moProjCS_NAD1983SPCS_TN = $00007D88;
  moProjCS_NAD1983SPCS_TXCentral = $00007D8B;
  moProjCS_NAD1983SPCS_TXNorth = $00007D89;
  moProjCS_NAD1983SPCS_TXNorthCentral = $00007D8A;
  moProjCS_NAD1983SPCS_TXSouth = $00007D8D;
  moProjCS_NAD1983SPCS_TXSouthCentral = $00007D8C;
  moProjCS_NAD1983SPCS_UTCentral = $00007D8F;
  moProjCS_NAD1983SPCS_UTNorth = $00007D8E;
  moProjCS_NAD1983SPCS_UTSouth = $00007D90;
  moProjCS_NAD1983UTM_10N = $0000691E;
  moProjCS_NAD1983UTM_11N = $0000691F;
  moProjCS_NAD1983UTM_12N = $00006920;
  moProjCS_NAD1983UTM_13N = $00006921;
  moProjCS_NAD1983UTM_14N = $00006922;
  moProjCS_NAD1983UTM_15N = $00006923;
  moProjCS_NAD1983UTM_16N = $00006924;
  moProjCS_NAD1983UTM_17N = $00006925;
  moProjCS_NAD1983UTM_18N = $00006926;
  moProjCS_NAD1983UTM_19N = $00006927;
  moProjCS_NAD1983UTM_20N = $00006928;
  moProjCS_NAD1983UTM_21N = $00006929;
  moProjCS_NAD1983UTM_22N = $0000692A;
  moProjCS_NAD1983UTM_23N = $0000692B;
  moProjCS_NAD1983UTM_3N = $00006917;
  moProjCS_NAD1983UTM_4N = $00006918;
  moProjCS_NAD1983UTM_5N = $00006919;
  moProjCS_NAD1983UTM_6N = $0000691A;
  moProjCS_NAD1983UTM_7N = $0000691B;
  moProjCS_NAD1983UTM_8N = $0000691C;
  moProjCS_NAD1983UTM_9N = $0000691D;
  moProjCS_NAD1983SPCS_VT = $00007D91;
  moProjCS_NAD1983SPCS_VANorth = $00007D92;
  moProjCS_NAD1983SPCS_VASouth = $00007D93;
  moProjCS_NAD1983SPCS_WANorth = $00007D94;
  moProjCS_NAD1983SPCS_WASouth = $00007D95;
  moProjCS_NAD1983SPCS_WVNorth = $00007D96;
  moProjCS_NAD1983SPCS_WVSouth = $00007D97;
  moProjCS_NAD1983SPCS_WICentral = $00007D99;
  moProjCS_NAD1983SPCS_WINorth = $00007D98;
  moProjCS_NAD1983SPCS_WISouth = $00007D9A;
  moProjCS_NAD1983SPCS_WYEast = $00007D9B;
  moProjCS_NAD1983SPCS_WYEastCentral = $00007D9C;
  moProjCS_NAD1983SPCS_WYWest = $00007D9E;
  moProjCS_NAD1983SPCS_WYWestCentral = $00007D9D;
  moProjCS_NADMichiganStatePlaneMichigaNCentralFIPS2112 = $000068BC;
  moProjCS_NADMichiganStatePlaneMichigaNCentralOldFIPS2102 = $000068B2;
  moProjCS_NADMichiganStatePlaneMichiganEastOldFIPS2101 = $000068B1;
  moProjCS_NADMichiganStatePlaneMichiganNorthFIPS2111 = $000068BB;
  moProjCS_NADMichiganStatePlaneMichiganSouthFIPS2113 = $000068BD;
  moProjCS_NADMichiganStatePlaneMichiganWestOldFIPS2103 = $000068B3;
  moProjCS_Nahrwan1967UTM_38N = $0000699E;
  moProjCS_Nahrwan1967UTM_39N = $0000699F;
  moProjCS_Nahrwan1967UTM_40N = $000069A0;
  moProjCS_Naparima1972UTM_20N = $000069F0;
  moProjCS_NZGD1949NorthIsland = $00006A9B;
  moProjCS_NZGD1949SouthIsland = $00006A9C;
  moProjCS_NGNUTM_38N = $00007C5E;
  moProjCS_NGNUTM_39N = $00007C5F;
  moProjCS_NigeriaEastBelt = $00006719;
  moProjCS_NigeriaMidBelt = $00006718;
  moProjCS_NigeriaWestBelt = $00006717;
  moProjCS_NordAlgerieNorth = $0000777F;
  moProjCS_NordAlgerieAncienneNorth = $0000771B;
  moProjCS_NorddeGuerre = $00006B6C;
  moProjCS_NordFrance = $00006BC7;
  moProjCS_MerchichNordMaroc = $0000664F;
  moProjCS_NordSahara1959UTM_29N = $00007809;
  moProjCS_NordSahara1959UTM_30N = $0000780A;
  moProjCS_NordSahara1959UTM_31N = $0000780B;
  moProjCS_NordSahara1959UTM_32N = $0000780C;
  moProjCS_CarthageNordTunisie = $00005777;
  moProjCS_PeruCentral = $0000613C;
  moProjCS_PeruEast = $0000613D;
  moProjCS_PeruWest = $0000613B;
  moProjCS_Philippines_I = $0000632F;
  moProjCS_Philippines_II = $00006330;
  moProjCS_Philippines_III = $00006331;
  moProjCS_Philippines_IV = $00006332;
  moProjCS_Philippines_V = $00006333;
  moProjCS_PointeNoireUTM_32S = $00006E48;
  moProjCS_LisbonPortugueseGrid = $000050DC;
  moProjCS_PSADUTM_17S = $0000612D;
  moProjCS_PSADUTM_18N = $000060F2;
  moProjCS_PSADUTM_18S = $0000612E;
  moProjCS_PSADUTM_19N = $000060F3;
  moProjCS_PSADUTM_19S = $0000612F;
  moProjCS_PSADUTM_20N = $000060F4;
  moProjCS_PSADUTM_20S = $00006130;
  moProjCS_PSADUTM_21N = $000060F5;
  moProjCS_Pulkovo1942GK_10 = $00006EFA;
  moProjCS_Pulkovo1942GK_10N = $00006F36;
  moProjCS_Pulkovo1942GK_11 = $00006EFB;
  moProjCS_Pulkovo1942GK_11N = $00006F37;
  moProjCS_Pulkovo1942GK_12 = $00006EFC;
  moProjCS_Pulkovo1942GK_12N = $00006F38;
  moProjCS_Pulkovo1942GK_13 = $00006EFD;
  moProjCS_Pulkovo1942GK_13N = $00006F39;
  moProjCS_Pulkovo1942GK_14 = $00006EFE;
  moProjCS_Pulkovo1942GK_14N = $00006F3A;
  moProjCS_Pulkovo1942GK_15 = $00006EFF;
  moProjCS_Pulkovo1942GK_15N = $00006F3B;
  moProjCS_Pulkovo1942GK_16 = $00006F00;
  moProjCS_Pulkovo1942GK_16N = $00006F3C;
  moProjCS_Pulkovo1942GK_17 = $00006F01;
  moProjCS_Pulkovo1942GK_17N = $00006F3D;
  moProjCS_Pulkovo1942GK_18 = $00006F02;
  moProjCS_Pulkovo1942GK_18N = $00006F3E;
  moProjCS_Pulkovo1942GK_19 = $00006F03;
  moProjCS_Pulkovo1942GK_19N = $00006F3F;
  moProjCS_Pulkovo1942GK_20 = $00006F04;
  moProjCS_Pulkovo1942GK_20N = $00006F40;
  moProjCS_Pulkovo1942GK_21 = $00006F05;
  moProjCS_Pulkovo1942GK_21N = $00006F41;
  moProjCS_Pulkovo1942GK_22 = $00006F06;
  moProjCS_Pulkovo1942GK_22N = $00006F42;
  moProjCS_Pulkovo1942GK_23 = $00006F07;
  moProjCS_Pulkovo1942GK_23N = $00006F43;
  moProjCS_Pulkovo1942GK_24 = $00006F08;
  moProjCS_Pulkovo1942GK_24N = $00006F44;
  moProjCS_Pulkovo1942GK_25 = $00006F09;
  moProjCS_Pulkovo1942GK_25N = $00006F45;
  moProjCS_Pulkovo1942GK_26 = $00006F0A;
  moProjCS_Pulkovo1942GK_26N = $00006F46;
  moProjCS_Pulkovo1942GK_27 = $00006F0B;
  moProjCS_Pulkovo1942GK_27N = $00006F47;
  moProjCS_Pulkovo1942GK_28 = $00006F0C;
  moProjCS_Pulkovo1942GK_28N = $00006F48;
  moProjCS_Pulkovo1942GK_29 = $00006F0D;
  moProjCS_Pulkovo1942GK_29N = $00006F49;
  moProjCS_Pulkovo1942GK_30 = $00006F0E;
  moProjCS_Pulkovo1942GK_30N = $00006F4A;
  moProjCS_Pulkovo1942GK_31 = $00006F0F;
  moProjCS_Pulkovo1942GK_31N = $00006F4B;
  moProjCS_Pulkovo1942GK_32 = $00006F10;
  moProjCS_Pulkovo1942GK_32N = $00006F4C;
  moProjCS_Pulkovo1942GK_4 = $00006EF4;
  moProjCS_Pulkovo1942GK_4N = $00006F30;
  moProjCS_Pulkovo1942GK_5 = $00006EF5;
  moProjCS_Pulkovo1942GK_5N = $00006F31;
  moProjCS_Pulkovo1942GK_6 = $00006EF6;
  moProjCS_Pulkovo1942GK_6N = $00006F32;
  moProjCS_Pulkovo1942GK_7 = $00006EF7;
  moProjCS_Pulkovo1942GK_7N = $00006F33;
  moProjCS_Pulkovo1942GK_8 = $00006EF8;
  moProjCS_Pulkovo1942GK_8N = $00006F34;
  moProjCS_Pulkovo1942GK_9 = $00006EF9;
  moProjCS_Pulkovo1942GK_9N = $00006F35;
  moProjCS_Pulkovo1995GK_10 = $00004E2A;
  moProjCS_Pulkovo1995GK_10N = $00004E66;
  moProjCS_Pulkovo1995GK_11 = $00004E2B;
  moProjCS_Pulkovo1995GK_11N = $00004E67;
  moProjCS_Pulkovo1995GK_12 = $00004E2C;
  moProjCS_Pulkovo1995GK_12N = $00004E68;
  moProjCS_Pulkovo1995GK_13 = $00004E2D;
  moProjCS_Pulkovo1995GK_13N = $00004E69;
  moProjCS_Pulkovo1995GK_14 = $00004E2E;
  moProjCS_Pulkovo1995GK_14N = $00004E6A;
  moProjCS_Pulkovo1995GK_15 = $00004E2F;
  moProjCS_Pulkovo1995GK_15N = $00004E6B;
  moProjCS_Pulkovo1995GK_16 = $00004E30;
  moProjCS_Pulkovo1995GK_16N = $00004E6C;
  moProjCS_Pulkovo1995GK_17 = $00004E31;
  moProjCS_Pulkovo1995GK_17N = $00004E6D;
  moProjCS_Pulkovo1995GK_18 = $00004E32;
  moProjCS_Pulkovo1995GK_18N = $00004E6E;
  moProjCS_Pulkovo1995GK_19 = $00004E33;
  moProjCS_Pulkovo1995GK_19N = $00004E6F;
  moProjCS_Pulkovo1995GK_20 = $00004E34;
  moProjCS_Pulkovo1995GK_20N = $00004E70;
  moProjCS_Pulkovo1995GK_21 = $00004E35;
  moProjCS_Pulkovo1995GK_21N = $00004E71;
  moProjCS_Pulkovo1995GK_22 = $00004E36;
  moProjCS_Pulkovo1995GK_22N = $00004E72;
  moProjCS_Pulkovo1995GK_23 = $00004E37;
  moProjCS_Pulkovo1995GK_23N = $00004E73;
  moProjCS_Pulkovo1995GK_24 = $00004E38;
  moProjCS_Pulkovo1995GK_24N = $00004E74;
  moProjCS_Pulkovo1995GK_25 = $00004E39;
  moProjCS_Pulkovo1995GK_25N = $00004E75;
  moProjCS_Pulkovo1995GK_26 = $00004E3A;
  moProjCS_Pulkovo1995GK_26N = $00004E76;
  moProjCS_Pulkovo1995GK_27 = $00004E3B;
  moProjCS_Pulkovo1995GK_27N = $00004E77;
  moProjCS_Pulkovo1995GK_28 = $00004E3C;
  moProjCS_Pulkovo1995GK_28N = $00004E78;
  moProjCS_Pulkovo1995GK_29 = $00004E3D;
  moProjCS_Pulkovo1995GK_29N = $00004E79;
  moProjCS_Pulkovo1995GK_30 = $00004E3E;
  moProjCS_Pulkovo1995GK_30N = $00004E7A;
  moProjCS_Pulkovo1995GK_31 = $00004E3F;
  moProjCS_Pulkovo1995GK_31N = $00004E7B;
  moProjCS_Pulkovo1995GK_32 = $00004E40;
  moProjCS_Pulkovo1995GK_32N = $00004E7C;
  moProjCS_Pulkovo1995GK_4 = $00004E24;
  moProjCS_Pulkovo1995GK_4N = $00004E60;
  moProjCS_Pulkovo1995GK_5 = $00004E25;
  moProjCS_Pulkovo1995GK_5N = $00004E61;
  moProjCS_Pulkovo1995GK_6 = $00004E26;
  moProjCS_Pulkovo1995GK_6N = $00004E62;
  moProjCS_Pulkovo1995GK_7 = $00004E27;
  moProjCS_Pulkovo1995GK_7N = $00004E63;
  moProjCS_Pulkovo1995GK_8 = $00004E28;
  moProjCS_Pulkovo1995GK_8N = $00004E64;
  moProjCS_Pulkovo1995GK_9 = $00004E29;
  moProjCS_Pulkovo1995GK_9N = $00004E65;
  moProjCS_QatarNationalGrid = $00006FB8;
  moProjCS_SouthAmerican1969UTM_17S = $000071F9;
  moProjCS_SouthAmerican1969UTM_18N = $000071BE;
  moProjCS_SouthAmerican1969UTM_18S = $000071FA;
  moProjCS_SouthAmerican1969UTM_19N = $000071BF;
  moProjCS_SouthAmerican1969UTM_19S = $000071FB;
  moProjCS_SouthAmerican1969UTM_20N = $000071C0;
  moProjCS_SouthAmerican1969UTM_20S = $000071FC;
  moProjCS_SouthAmerican1969UTM_21N = $000071C1;
  moProjCS_SouthAmerican1969UTM_21S = $000071FD;
  moProjCS_SouthAmerican1969UTM_22N = $000071C2;
  moProjCS_SouthAmerican1969UTM_22S = $000071FE;
  moProjCS_SouthAmerican1969UTM_23S = $000071FF;
  moProjCS_SouthAmerican1969UTM_24S = $00007200;
  moProjCS_SouthAmerican1969UTM_25S = $00007201;
  moProjCS_MerchichSahara = $00006651;
  moProjCS_SapperHill1943UTM_20S = $00007224;
  moProjCS_SapperHill1943UTM_21S = $00007225;
  moProjCS_SchwarzeckUTM_33S = $00007295;
  moProjCS_Sphere_AzimuthalEquidistant = $0000CF28;
  moProjCS_Sphere_Behrmann = $0000CF19;
  moProjCS_Sphere_Bonne = $0000CF20;
  moProjCS_Sphere_Cassini = $0000CF24;
  moProjCS_Sphere_EckertI = $0000CF17;
  moProjCS_Sphere_EckertII = $0000CF16;
  moProjCS_Sphere_EckertIII = $0000CF15;
  moProjCS_Sphere_EckertIV = $0000CF14;
  moProjCS_Sphere_EckertV = $0000CF13;
  moProjCS_Sphere_EckertVI = $0000CF12;
  moProjCS_Sphere_EquidistantConic = $0000CF23;
  moProjCS_Sphere_EquidistantCylindrical = $0000CF0A;
  moProjCS_Sphere_GallStereographic = $0000CF18;
  moProjCS_Sphere_Hotine = $0000CF21;
  moProjCS_Sphere_Loximuthal = $0000CF1F;
  moProjCS_Sphere_Mercator = $0000CF0C;
  moProjCS_Sphere_MillerCylindrical = $0000CF0B;
  moProjCS_Sphere_Mollweide = $0000CF11;
  moProjCS_Sphere_PlateCarree = $0000CF09;
  moProjCS_Sphere_Polyconic = $0000CF1D;
  moProjCS_Sphere_QuarticAuthalic = $0000CF1E;
  moProjCS_Sphere_Robinson = $0000CF26;
  moProjCS_Sphere_Sinusoidal = $0000CF10;
  moProjCS_Sphere_Stereographic = $0000CF22;
  moProjCS_Sphere_TwoPointEquidistant = $0000CF27;
  moProjCS_Sphere_VanderGrintenI = $0000CF25;
  moProjCS_Sphere_WinkelI = $0000CF1A;
  moProjCS_Sphere_WinkelII = $0000CF1B;
  moProjCS_PCSDealulPisculuiStereo1933 = $00007B70;
  moProjCS_PCSDealulPisculuiStereo1970 = $00007BD4;
  moProjCS_SudanUTM_35N = $000073C3;
  moProjCS_SudanUTM_36N = $000073C4;
  moProjCS_NordAlgerieSouth = $00007780;
  moProjCS_NordAlgerieAncienneSouth = $0000771C;
  moProjCS_SudFrance = $00006BC9;
  moProjCS_MerchichSudMaroc = $00006650;
  moProjCS_CarthageSudTunisie = $00005778;
  moProjCS_SwedishNationalGrid = $00007850;
  moProjCS_Tananarive1925UTM_38S = $0000742A;
  moProjCS_Tananarive1925UTM_39S = $0000742B;
  moProjCS_TrucialCoast1948UTM_39N = $00007683;
  moProjCS_TrucialCoast1948UTM_40N = $00007684;
  moProjCS_Timbalai1948UTM_49N = $00007499;
  moProjCS_Timbalai1948UTM_50N = $0000749A;
  moProjCS_WGS1972UTM_10N = $00007DD2;
  moProjCS_WGS1972UTM_10S = $00007E36;
  moProjCS_WGS1972UTM_11N = $00007DD3;
  moProjCS_WGS1972UTM_11S = $00007E37;
  moProjCS_WGS1972UTM_12N = $00007DD4;
  moProjCS_WGS1972UTM_12S = $00007E38;
  moProjCS_WGS1972UTM_13N = $00007DD5;
  moProjCS_WGS1972UTM_13S = $00007E39;
  moProjCS_WGS1972UTM_14N = $00007DD6;
  moProjCS_WGS1972UTM_14S = $00007E3A;
  moProjCS_WGS1972UTM_15N = $00007DD7;
  moProjCS_WGS1972UTM_15S = $00007E3B;
  moProjCS_WGS1972UTM_16N = $00007DD8;
  moProjCS_WGS1972UTM_16S = $00007E3C;
  moProjCS_WGS1972UTM_17N = $00007DD9;
  moProjCS_WGS1972UTM_17S = $00007E3D;
  moProjCS_WGS1972UTM_18N = $00007DDA;
  moProjCS_WGS1972UTM_18S = $00007E3E;
  moProjCS_WGS1972UTM_19N = $00007DDB;
  moProjCS_WGS1972UTM_19S = $00007E3F;
  moProjCS_WGS1972UTM_1N = $00007DC9;
  moProjCS_WGS1972UTM_1S = $00007E2D;
  moProjCS_WGS1972UTM_20N = $00007DDC;
  moProjCS_WGS1972UTM_20S = $00007E40;
  moProjCS_WGS1972UTM_21N = $00007DDD;
  moProjCS_WGS1972UTM_21S = $00007E41;
  moProjCS_WGS1972UTM_22N = $00007DDE;
  moProjCS_WGS1972UTM_22S = $00007E42;
  moProjCS_WGS1972UTM_23N = $00007DDF;
  moProjCS_WGS1972UTM_23S = $00007E43;
  moProjCS_WGS1972UTM_24N = $00007DE0;
  moProjCS_WGS1972UTM_24S = $00007E44;
  moProjCS_WGS1972UTM_25N = $00007DE1;
  moProjCS_WGS1972UTM_25S = $00007E45;
  moProjCS_WGS1972UTM_26N = $00007DE2;
  moProjCS_WGS1972UTM_26S = $00007E46;
  moProjCS_WGS1972UTM_27N = $00007DE3;
  moProjCS_WGS1972UTM_27S = $00007E47;
  moProjCS_WGS1972UTM_28N = $00007DE4;
  moProjCS_WGS1972UTM_28S = $00007E48;
  moProjCS_WGS1972UTM_29N = $00007DE5;
  moProjCS_WGS1972UTM_29S = $00007E49;
  moProjCS_WGS1972UTM_2N = $00007DCA;
  moProjCS_WGS1972UTM_2S = $00007E2E;
  moProjCS_WGS1972UTM_30N = $00007DE6;
  moProjCS_WGS1972UTM_30S = $00007E4A;
  moProjCS_WGS1972UTM_31N = $00007DE7;
  moProjCS_WGS1972UTM_31S = $00007E4B;
  moProjCS_WGS1972UTM_32N = $00007DE8;
  moProjCS_WGS1972UTM_32S = $00007E4C;
  moProjCS_WGS1972UTM_33N = $00007DE9;
  moProjCS_WGS1972UTM_33S = $00007E4D;
  moProjCS_WGS1972UTM_34N = $00007DEA;
  moProjCS_WGS1972UTM_34S = $00007E4E;
  moProjCS_WGS1972UTM_35N = $00007DEB;
  moProjCS_WGS1972UTM_35S = $00007E4F;
  moProjCS_WGS1972UTM_36N = $00007DEC;
  moProjCS_WGS1972UTM_36S = $00007E50;
  moProjCS_WGS1972UTM_37N = $00007DED;
  moProjCS_WGS1972UTM_37S = $00007E51;
  moProjCS_WGS1972UTM_38N = $00007DEE;
  moProjCS_WGS1972UTM_38S = $00007E52;
  moProjCS_WGS1972UTM_39N = $00007DEF;
  moProjCS_WGS1972UTM_39S = $00007E53;
  moProjCS_WGS1972UTM_3N = $00007DCB;
  moProjCS_WGS1972UTM_3S = $00007E2F;
  moProjCS_WGS1972UTM_40N = $00007DF0;
  moProjCS_WGS1972UTM_40S = $00007E54;
  moProjCS_WGS1972UTM_41N = $00007DF1;
  moProjCS_WGS1972UTM_41S = $00007E55;
  moProjCS_WGS1972UTM_42N = $00007DF2;
  moProjCS_WGS1972UTM_42S = $00007E56;
  moProjCS_WGS1972UTM_43N = $00007DF3;
  moProjCS_WGS1972UTM_43S = $00007E57;
  moProjCS_WGS1972UTM_44N = $00007DF4;
  moProjCS_WGS1972UTM_44S = $00007E58;
  moProjCS_WGS1972UTM_45N = $00007DF5;
  moProjCS_WGS1972UTM_45S = $00007E59;
  moProjCS_WGS1972UTM_46N = $00007DF6;
  moProjCS_WGS1972UTM_46S = $00007E5A;
  moProjCS_WGS1972UTM_47N = $00007DF7;
  moProjCS_WGS1972UTM_47S = $00007E5B;
  moProjCS_WGS1972UTM_48N = $00007DF8;
  moProjCS_WGS1972UTM_48S = $00007E5C;
  moProjCS_WGS1972UTM_49N = $00007DF9;
  moProjCS_WGS1972UTM_49S = $00007E5D;
  moProjCS_WGS1972UTM_4N = $00007DCC;
  moProjCS_WGS1972UTM_4S = $00007E30;
  moProjCS_WGS1972UTM_50N = $00007DFA;
  moProjCS_WGS1972UTM_50S = $00007E5E;
  moProjCS_WGS1972UTM_51N = $00007DFB;
  moProjCS_WGS1972UTM_51S = $00007E5F;
  moProjCS_WGS1972UTM_52N = $00007DFC;
  moProjCS_WGS1972UTM_52S = $00007E60;
  moProjCS_WGS1972UTM_53N = $00007DFD;
  moProjCS_WGS1972UTM_53S = $00007E61;
  moProjCS_WGS1972UTM_54N = $00007DFE;
  moProjCS_WGS1972UTM_54S = $00007E62;
  moProjCS_WGS1972UTM_55N = $00007DFF;
  moProjCS_WGS1972UTM_55S = $00007E63;
  moProjCS_WGS1972UTM_56N = $00007E00;
  moProjCS_WGS1972UTM_56S = $00007E64;
  moProjCS_WGS1972UTM_57N = $00007E01;
  moProjCS_WGS1972UTM_57S = $00007E65;
  moProjCS_WGS1972UTM_58N = $00007E02;
  moProjCS_WGS1972UTM_58S = $00007E66;
  moProjCS_WGS1972UTM_59N = $00007E03;
  moProjCS_WGS1972UTM_59S = $00007E67;
  moProjCS_WGS1972UTM_5N = $00007DCD;
  moProjCS_WGS1972UTM_5S = $00007E31;
  moProjCS_WGS1972UTM_60N = $00007E04;
  moProjCS_WGS1972UTM_60S = $00007E68;
  moProjCS_WGS1972UTM_6N = $00007DCE;
  moProjCS_WGS1972UTM_6S = $00007E32;
  moProjCS_WGS1972UTM_7N = $00007DCF;
  moProjCS_WGS1972UTM_7S = $00007E33;
  moProjCS_WGS1972UTM_8N = $00007DD0;
  moProjCS_WGS1972UTM_8S = $00007E34;
  moProjCS_WGS1972UTM_9N = $00007DD1;
  moProjCS_WGS1972UTM_9S = $00007E35;
  moProjCS_WGS1984UTM_10N = $00007F62;
  moProjCS_WGS1984UTM_10S = $00007FC6;
  moProjCS_WGS1984UTM_11N = $00007F63;
  moProjCS_WGS1984UTM_11S = $00007FC7;
  moProjCS_WGS1984UTM_12N = $00007F64;
  moProjCS_WGS1984UTM_12S = $00007FC8;
  moProjCS_WGS1984UTM_13N = $00007F65;
  moProjCS_WGS1984UTM_13S = $00007FC9;
  moProjCS_WGS1984UTM_14N = $00007F66;
  moProjCS_WGS1984UTM_14S = $00007FCA;
  moProjCS_WGS1984UTM_15N = $00007F67;
  moProjCS_WGS1984UTM_15S = $00007FCB;
  moProjCS_WGS1984UTM_16N = $00007F68;
  moProjCS_WGS1984UTM_16S = $00007FCC;
  moProjCS_WGS1984UTM_17N = $00007F69;
  moProjCS_WGS1984UTM_17S = $00007FCD;
  moProjCS_WGS1984UTM_18N = $00007F6A;
  moProjCS_WGS1984UTM_18S = $00007FCE;
  moProjCS_WGS1984UTM_19N = $00007F6B;
  moProjCS_WGS1984UTM_19S = $00007FCF;
  moProjCS_WGS1984UTM_1N = $00007F59;
  moProjCS_WGS1984UTM_1S = $00007FBD;
  moProjCS_WGS1984UTM_20N = $00007F6C;
  moProjCS_WGS1984UTM_20S = $00007FD0;
  moProjCS_WGS1984UTM_21N = $00007F6D;
  moProjCS_WGS1984UTM_21S = $00007FD1;
  moProjCS_WGS1984UTM_22N = $00007F6E;
  moProjCS_WGS1984UTM_22S = $00007FD2;
  moProjCS_WGS1984UTM_23N = $00007F6F;
  moProjCS_WGS1984UTM_23S = $00007FD3;
  moProjCS_WGS1984UTM_24N = $00007F70;
  moProjCS_WGS1984UTM_24S = $00007FD4;
  moProjCS_WGS1984UTM_25N = $00007F71;
  moProjCS_WGS1984UTM_25S = $00007FD5;
  moProjCS_WGS1984UTM_26N = $00007F72;
  moProjCS_WGS1984UTM_26S = $00007FD6;
  moProjCS_WGS1984UTM_27N = $00007F73;
  moProjCS_WGS1984UTM_27S = $00007FD7;
  moProjCS_WGS1984UTM_28N = $00007F74;
  moProjCS_WGS1984UTM_28S = $00007FD8;
  moProjCS_WGS1984UTM_29N = $00007F75;
  moProjCS_WGS1984UTM_29S = $00007FD9;
  moProjCS_WGS1984UTM_2N = $00007F5A;
  moProjCS_WGS1984UTM_2S = $00007FBE;
  moProjCS_WGS1984UTM_30N = $00007F76;
  moProjCS_WGS1984UTM_30S = $00007FDA;
  moProjCS_WGS1984UTM_31N = $00007F77;
  moProjCS_WGS1984UTM_31S = $00007FDB;
  moProjCS_WGS1984UTM_32N = $00007F78;
  moProjCS_WGS1984UTM_32S = $00007FDC;
  moProjCS_WGS1984UTM_33N = $00007F79;
  moProjCS_WGS1984UTM_33S = $00007FDD;
  moProjCS_WGS1984UTM_34N = $00007F7A;
  moProjCS_WGS1984UTM_34S = $00007FDE;
  moProjCS_WGS1984UTM_35N = $00007F7B;
  moProjCS_WGS1984UTM_35S = $00007FDF;
  moProjCS_WGS1984UTM_36N = $00007F7C;
  moProjCS_WGS1984UTM_36S = $00007FE0;
  moProjCS_WGS1984UTM_37N = $00007F7D;
  moProjCS_WGS1984UTM_37S = $00007FE1;
  moProjCS_WGS1984UTM_38N = $00007F7E;
  moProjCS_WGS1984UTM_38S = $00007FE2;
  moProjCS_WGS1984UTM_39N = $00007F7F;
  moProjCS_WGS1984UTM_39S = $00007FE3;
  moProjCS_WGS1984UTM_3N = $00007F5B;
  moProjCS_WGS1984UTM_3S = $00007FBF;
  moProjCS_WGS1984UTM_40N = $00007F80;
  moProjCS_WGS1984UTM_40S = $00007FE4;
  moProjCS_WGS1984UTM_41N = $00007F81;
  moProjCS_WGS1984UTM_41S = $00007FE5;
  moProjCS_WGS1984UTM_42N = $00007F82;
  moProjCS_WGS1984UTM_42S = $00007FE6;
  moProjCS_WGS1984UTM_43N = $00007F83;
  moProjCS_WGS1984UTM_43S = $00007FE7;
  moProjCS_WGS1984UTM_44N = $00007F84;
  moProjCS_WGS1984UTM_44S = $00007FE8;
  moProjCS_WGS1984UTM_45N = $00007F85;
  moProjCS_WGS1984UTM_45S = $00007FE9;
  moProjCS_WGS1984UTM_46N = $00007F86;
  moProjCS_WGS1984UTM_46S = $00007FEA;
  moProjCS_WGS1984UTM_47N = $00007F87;
  moProjCS_WGS1984UTM_47S = $00007FEB;
  moProjCS_WGS1984UTM_48N = $00007F88;
  moProjCS_WGS1984UTM_48S = $00007FEC;
  moProjCS_WGS1984UTM_49N = $00007F89;
  moProjCS_WGS1984UTM_49S = $00007FED;
  moProjCS_WGS1984UTM_4N = $00007F5C;
  moProjCS_WGS1984UTM_4S = $00007FC0;
  moProjCS_WGS1984UTM_50N = $00007F8A;
  moProjCS_WGS1984UTM_50S = $00007FEE;
  moProjCS_WGS1984UTM_51N = $00007F8B;
  moProjCS_WGS1984UTM_51S = $00007FEF;
  moProjCS_WGS1984UTM_52N = $00007F8C;
  moProjCS_WGS1984UTM_52S = $00007FF0;
  moProjCS_WGS1984UTM_53N = $00007F8D;
  moProjCS_WGS1984UTM_53S = $00007FF1;
  moProjCS_WGS1984UTM_54N = $00007F8E;
  moProjCS_WGS1984UTM_54S = $00007FF2;
  moProjCS_WGS1984UTM_55N = $00007F8F;
  moProjCS_WGS1984UTM_55S = $00007FF3;
  moProjCS_WGS1984UTM_56N = $00007F90;
  moProjCS_WGS1984UTM_56S = $00007FF4;
  moProjCS_WGS1984UTM_57N = $00007F91;
  moProjCS_WGS1984UTM_57S = $00007FF5;
  moProjCS_WGS1984UTM_58N = $00007F92;
  moProjCS_WGS1984UTM_58S = $00007FF6;
  moProjCS_WGS1984UTM_59N = $00007F93;
  moProjCS_WGS1984UTM_59S = $00007FF7;
  moProjCS_WGS1984UTM_5N = $00007F5D;
  moProjCS_WGS1984UTM_5S = $00007FC1;
  moProjCS_WGS1984UTM_60N = $00007F94;
  moProjCS_WGS1984UTM_60S = $00007FF8;
  moProjCS_WGS1984UTM_6N = $00007F5E;
  moProjCS_WGS1984UTM_6S = $00007FC2;
  moProjCS_WGS1984UTM_7N = $00007F5F;
  moProjCS_WGS1984UTM_7S = $00007FC3;
  moProjCS_WGS1984UTM_8N = $00007F60;
  moProjCS_WGS1984UTM_8S = $00007FC4;
  moProjCS_WGS1984UTM_9N = $00007F61;
  moProjCS_WGS1984UTM_9S = $00007FC5;
  moProjCS_World_AzimuthalEquidistant = $0000D310;
  moProjCS_World_Behrmann = $0000D301;
  moProjCS_World_Bonne = $0000D308;
  moProjCS_World_Cassini = $0000D30C;
  moProjCS_World_EckertI = $0000D2FF;
  moProjCS_World_EckertII = $0000D2FE;
  moProjCS_World_EckertIII = $0000D2FD;
  moProjCS_World_EckertIV = $0000D2FC;
  moProjCS_World_EckertV = $0000D2FB;
  moProjCS_World_EckertVI = $0000D2FA;
  moProjCS_World_EquidistantConic = $0000D30B;
  moProjCS_World_EquidistantCylindrical = $0000D2F2;
  moProjCS_World_GallStereographic = $0000D300;
  moProjCS_World_Hotine = $0000D309;
  moProjCS_World_Loximuthal = $0000D307;
  moProjCS_World_Mercator = $0000D2F4;
  moProjCS_World_MillerCylindrical = $0000D2F3;
  moProjCS_World_Mollweide = $0000D2F9;
  moProjCS_World_PlateCarree = $0000D2F1;
  moProjCS_World_Polyconic = $0000D305;
  moProjCS_World_QuarticAuthalic = $0000D306;
  moProjCS_World_Robinson = $0000D30E;
  moProjCS_World_Sinusoidal = $0000D2F8;
  moProjCS_World_Stereographic = $0000D30A;
  moProjCS_World_TwoPointEquidistant = $0000D30F;
  moProjCS_World_VanderGrintenI = $0000D30D;
  moProjCS_World_WinkelI = $0000D302;
  moProjCS_World_WinkelII = $0000D303;
  moProjCS_Yoff1972UTM_28N = $00007934;
  moProjCS_Zanderij1972UTM_21N = $00007991;
  moProjCS_Abidjan1987TM5NW = $00000875;
  moProjCS_Abidjan1987UTM_29N = $000007FB;
  moProjCS_Abidjan1987UTM_30N = $000007F9;
  moProjCS_AccraGhanaGrid = $00000858;
  moProjCS_AccraTM1NW = $00000859;
  moProjCS_AfricaAlbersEqualAreaConic = $00018E86;
  moProjCS_AfricaEquidistantConic = $00018E87;
  moProjCS_AfricaLambertConformalConic = $00018E88;
  moProjCS_AfricaSinusoidal = $00018E7B;
  moProjCS_AGD1966VICGRID = $00018F1A;
  moProjCS_AlaskaAlbersEqualAreaConic = $00018E76;
  moProjCS_AmericanSamoa1962StatePlaneAmericanSamoaFIPS5300 = $0000FE26;
  moProjCS_Anguilla1957BritishWestIndiesGrid = $000007D0;
  moProjCS_Antigua1943BritishWestIndiesGrid = $000007D1;
  moProjCS_Arc1950UTM_34S = $000051C6;
  moProjCS_Arc1950UTM_35S = $000051C7;
  moProjCS_Arc1950UTM_36S = $000051C8;
  moProjCS_Arc1960UTM_35N = $00005267;
  moProjCS_Arc1960UTM_35S = $0000522B;
  moProjCS_Arc1960UTM_36N = $00005268;
  moProjCS_Arc1960UTM_36S = $0000522C;
  moProjCS_Arc1960UTM_37N = $00005269;
  moProjCS_Arc1960UTM_37S = $0000522D;
  moProjCS_AsiaLambertConformalConic = $00018E7C;
  moProjCS_AsiaNorthAlbersEqualAreaConic = $00018E89;
  moProjCS_AsiaNorthEquidistantConic = $00018E8A;
  moProjCS_AsiaNorthLambertConformalConic = $00018E8B;
  moProjCS_AsiaSouthAlbersEqualAreaConic = $00018E8C;
  moProjCS_AsiaSouthEquidistantConic = $00018E8D;
  moProjCS_AsiaSouthLambertConformalConic = $00018E8E;
  moProjCS_ATS1977MTM4NovaScotia = $000008F6;
  moProjCS_ATS1977MTM5NovaScotia = $000008F7;
  moProjCS_ATS1977NewBrunswickStereographic = $00000898;
  moProjCS_Barbados1938BarbadosGrid = $0000532C;
  moProjCS_Barbados1938BritishWestIndiesGrid = $0000532B;
  moProjCS_BelgeLambert1972 = $00019384;
  moProjCS_Bern1898BernLV03C = $00005514;
  moProjCS_BissauUTM_28N = $0000082F;
  moProjCS_CamacupaTM1130SE = $0000564B;
  moProjCS_CamacupaTM12SE = $0000564C;
  moProjCS_CanadaAlbersEqualAreaConic = $00018E71;
  moProjCS_CanadaLambertConformalConic = $00018E72;
  moProjCS_CapeUTM_34S = $000056DA;
  moProjCS_CapeUTM_35S = $000056DB;
  moProjCS_CapeUTM_36S = $000056DC;
  moProjCS_CarthageTM11NE = $00000828;
  moProjCS_CH1903PlusLV95 = $00000808;
  moProjCS_CH1903LV03 = $00005515;
  moProjCS_ChosMalal1914Argentina2 = $00000821;
  moProjCS_Conakry1905UTM_28N = $00007B28;
  moProjCS_Conakry1905UTM_29N = $00007B29;
  moProjCS_DabolaUTM_28N = $0000080F;
  moProjCS_DabolaUTM_29N = $00000810;
  moProjCS_Datum73HayfordGaussIGeoE = $00018F10;
  moProjCS_Datum73HayfordGaussIPCC = $00018F11;
  moProjCS_DeirezZorLevantStereographic = $000058FC;
  moProjCS_DeirezZorLevant_ = $000058AC;
  moProjCS_DeirezZorSyriaLambert = $000058F2;
  moProjCS_DHDN3DegreeGauss_1 = $00007AE5;
  moProjCS_DHDN3DegreeGauss_2 = $00007AE6;
  moProjCS_DHDN3DegreeGauss_3 = $00007AE7;
  moProjCS_DHDN3DegreeGauss_4 = $00007AE8;
  moProjCS_DHDN3DegreeGauss_5 = $00007AE9;
  moProjCS_Dominica1945BritishWestIndiesGrid = $000007D2;
  moProjCS_ED1950ED77UTM_38N = $0000080A;
  moProjCS_ED1950ED77UTM_39N = $0000080B;
  moProjCS_ED1950ED77UTM_40N = $0000080C;
  moProjCS_ED1950ED77UTM_41N = $0000080D;
  moProjCS_ED1950TM0N = $00005A32;
  moProjCS_ED1950TM5NE = $00005A37;
  moProjCS_EgyptBlueBelt = $000059CF;
  moProjCS_ELD1979Libya10 = $00000819;
  moProjCS_ELD1979Libya11 = $0000081A;
  moProjCS_ELD1979Libya12 = $0000081B;
  moProjCS_ELD1979Libya13 = $0000081C;
  moProjCS_ELD1979Libya5 = $00000814;
  moProjCS_ELD1979Libya6 = $00000815;
  moProjCS_ELD1979Libya7 = $00000816;
  moProjCS_ELD1979Libya8 = $00000817;
  moProjCS_ELD1979Libya9 = $00000818;
  moProjCS_ELD1979TM12NE = $00000827;
  moProjCS_ELD1979UTM_32N = $0000081D;
  moProjCS_ELD1979UTM_33N = $0000081E;
  moProjCS_ELD1979UTM_34N = $0000081F;
  moProjCS_ELD1979UTM_35N = $00000820;
  moProjCS_EstonianCoordinateSystemof1992 = $00000CE4;
  moProjCS_ETRF1989TMBaltic1993 = $0000651C;
  moProjCS_EuropeAlbersEqualAreaConic = $00018E7D;
  moProjCS_EuropeEquidistantConic = $00018E8F;
  moProjCS_EuropeLambertConformalConic = $00018E7E;
  moProjCS_FD1958Iraq = $00000C80;
  moProjCS_GDA1994SouthAustraliaLambert = $00018F1C;
  moProjCS_GDA1994VICGRID94 = $00018F1B;
  moProjCS_GD1949NewZealandMapGrid = $00006A40;
  moProjCS_GraciosaBaseSW1948UTM_26N = $00018F12;
  moProjCS_Grenada1953BritishWestIndiesGrid = $000007D3;
  moProjCS_Hanoi1972GK106NE = $0000082D;
  moProjCS_Hanoi1972GK_18 = $000007FC;
  moProjCS_Hanoi1972GK_19 = $000007FD;
  moProjCS_HawaiiAlbersEqualAreaConic = $00018E77;
  moProjCS_HitoXVIII1963Argentina2 = $00000823;
  moProjCS_HitoXVIII1963UTM19S = $00000824;
  moProjCS_HongKong1980Grid = $00018EFC;
  moProjCS_HongKong1980UTM_49N = $00018EFD;
  moProjCS_HongKong1980UTM_50N = $00018EFE;
  moProjCS_Hungarian1972EgysegesOrszagosVetuleti = $00005C94;
  moProjCS_Indian1954UTM_46N = $00005D8A;
  moProjCS_Indian1960TM106NE = $00000C68;
  moProjCS_Indian1960UTM_48N = $00000C4C;
  moProjCS_Indian1960UTM_49N = $00000C4D;
  moProjCS_IRENET95IrishTransverseMercator = $0000086D;
  moProjCS_IRENET95UTM_29N = $0000086E;
  moProjCS_IsraelTMGrid = $000007F7;
  moProjCS_Japan_1 = $000075D1;
  moProjCS_Japan_10 = $000075DA;
  moProjCS_Japan_11 = $000075DB;
  moProjCS_Japan_12 = $000075DC;
  moProjCS_Japan_13 = $000075DD;
  moProjCS_Japan_14 = $000075DE;
  moProjCS_Japan_15 = $000075DF;
  moProjCS_Japan_16 = $000075E0;
  moProjCS_Japan_17 = $000075E1;
  moProjCS_Japan_18 = $000075E2;
  moProjCS_Japan_19 = $000075E3;
  moProjCS_Japan_2 = $000075D2;
  moProjCS_Japan_3 = $000075D3;
  moProjCS_Japan_4 = $000075D4;
  moProjCS_Japan_5 = $000075D5;
  moProjCS_Japan_6 = $000075D6;
  moProjCS_Japan_7 = $000075D7;
  moProjCS_Japan_8 = $000075D8;
  moProjCS_Japan_9 = $000075D9;
  moProjCS_Kalianpur1937India_IIb = $00005F37;
  moProjCS_Kalianpur1937UTM_45N = $00005EF1;
  moProjCS_Kalianpur1937UTM_46N = $00005EF2;
  moProjCS_Kalianpur1962India_I = $00005F38;
  moProjCS_Kalianpur1962India_IIa = $00005F39;
  moProjCS_Kalianpur1962UTM_41N = $00005EF7;
  moProjCS_Kalianpur1962UTM_42N = $00005EF8;
  moProjCS_Kalianpur1962UTM_43N = $00005EF9;
  moProjCS_Kalianpur1975India_I = $00005F3A;
  moProjCS_Kalianpur1975India_IIa = $00005F3B;
  moProjCS_Kalianpur1975India_IIb = $00005F3C;
  moProjCS_Kalianpur1975India_III = $00005F3D;
  moProjCS_Kalianpur1975UTM_42N = $00005F16;
  moProjCS_Kalianpur1975UTM_43N = $00005F17;
  moProjCS_Kalianpur1975UTM_44N = $00005F18;
  moProjCS_Kalianpur1975UTM_45N = $00005F19;
  moProjCS_Kalianpur1975UTM_46N = $00005F1A;
  moProjCS_Kalianpur1975UTM_47N = $00005F1B;
  moProjCS_KertauSingaporeGrid = $00005FB4;
  moProjCS_Korean1985KoreaCentralBelt = $00000831;
  moProjCS_Korean1985KoreaEastBelt = $00000830;
  moProjCS_Korean1985KoreaWestBelt = $00000832;
  moProjCS_LakeMaracaiboGrid = $00000836;
  moProjCS_LakeMaracaiboGridM1 = $00000835;
  moProjCS_LakeMaracaiboGridM3 = $00000837;
  moProjCS_LakeMaracaiboLaRosaGrid = $00000838;
  moProjCS_LaCanoaUTM_18N = $0000608E;
  moProjCS_LaCanoaUTM_19N = $0000608F;
  moProjCS_LietuvosKoordinaciuSistema = $00000A28;
  moProjCS_LisboaBesselBonne = $00018F13;
  moProjCS_LisboaHayfordGaussIGeoE = $00018F14;
  moProjCS_LisboaHayfordGaussIPCC = $00018F15;
  moProjCS_Locodjo1965TM5NW = $00000874;
  moProjCS_Locodjo1965UTM_29N = $000007FA;
  moProjCS_Locodjo1965UTM_30N = $000007F8;
  moProjCS_Madrid1870MadridSpain = $0000080E;
  moProjCS_MGI3DegreeGauss_5 = $00007A21;
  moProjCS_MGI3DegreeGauss_6 = $00007A22;
  moProjCS_MGI3DegreeGauss_7 = $00007A23;
  moProjCS_MGI3DegreeGauss_8 = $00007A24;
  moProjCS_MGIAustriaLambert = $00007A41;
  moProjCS_MGIBalkans5 = $00007A2B;
  moProjCS_MGIBalkans6 = $00007A2C;
  moProjCS_MGIBalkans7 = $00007A2D;
  moProjCS_MGIBalkans8 = $00007A2E;
  moProjCS_MGIM28 = $00007A3E;
  moProjCS_MGIM31 = $00007A3F;
  moProjCS_MGIM34 = $00007A40;
  moProjCS_MonteMarioItaly1 = $00018ECB;
  moProjCS_MonteMarioItaly2 = $00018ECC;
  moProjCS_Montserrat1958BritishWestIndiesGrid = $000007D4;
  moProjCS_MountDillonTobagoGrid = $00000812;
  moProjCS_MoznetUTM_36S = $00000BDC;
  moProjCS_MoznetUTM_37S = $00000BDD;
  moProjCS_NAD192710TMAEPForest = $00018F22;
  moProjCS_NAD192710TMAEPResource = $00018F23;
  moProjCS_NAD19273TM111 = $00018F24;
  moProjCS_NAD19273TM114 = $00018F25;
  moProjCS_NAD19273TM117 = $00018F26;
  moProjCS_NAD19273TM120 = $00018F27;
  moProjCS_NAD1927CGQ77MTM10SCoPQ = $000007E0;
  moProjCS_NAD1927CGQ77MTM2SCoPQ = $000007D8;
  moProjCS_NAD1927CGQ77MTM3SCoPQ = $000007D9;
  moProjCS_NAD1927CGQ77MTM4SCoPQ = $000007DA;
  moProjCS_NAD1927CGQ77MTM5SCoPQ = $000007DB;
  moProjCS_NAD1927CGQ77MTM6SCoPQ = $000007DC;
  moProjCS_NAD1927CGQ77MTM7SCoPQ = $000007DD;
  moProjCS_NAD1927CGQ77MTM8SCoPQ = $000007DE;
  moProjCS_NAD1927CGQ77MTM9SCoPQ = $000007DF;
  moProjCS_NAD1927CGQ77QuebecLambert = $0000085A;
  moProjCS_NAD1927CGQ77UTM_17N = $000007EF;
  moProjCS_NAD1927CGQ77UTM_18N = $000007F0;
  moProjCS_NAD1927CGQ77UTM_19N = $000007F1;
  moProjCS_NAD1927CGQ77UTM_20N = $000007F2;
  moProjCS_NAD1927CGQ77UTM_21N = $000007F3;
  moProjCS_NAD1927CubaNorte = $00000825;
  moProjCS_NAD1927CubaSur = $00000826;
  moProjCS_NAD1927DEF1976MTM10 = $000007E3;
  moProjCS_NAD1927DEF1976MTM11 = $000007E4;
  moProjCS_NAD1927DEF1976MTM12 = $000007E5;
  moProjCS_NAD1927DEF1976MTM13 = $000007E6;
  moProjCS_NAD1927DEF1976MTM14 = $000007E7;
  moProjCS_NAD1927DEF1976MTM15 = $000007E8;
  moProjCS_NAD1927DEF1976MTM16 = $000007E9;
  moProjCS_NAD1927DEF1976MTM17 = $000007EA;
  moProjCS_NAD1927DEF1976MTM8 = $000007E1;
  moProjCS_NAD1927DEF1976MTM9 = $000007E2;
  moProjCS_NAD1927DEF1976UTM_15N = $000007EB;
  moProjCS_NAD1927DEF1976UTM_16N = $000007EC;
  moProjCS_NAD1927DEF1976UTM_17N = $000007ED;
  moProjCS_NAD1927DEF1976UTM_18N = $000007EE;
  moProjCS_NAD1927GuatemalaNorte = $00007D3D;
  moProjCS_NAD1927GuatemalaSur = $00007D3E;
  moProjCS_NAD1927MichiganGeoRefFeetUS = $00018EE8;
  moProjCS_NAD1927MichiganGeoRefMeters = $00018EEA;
  moProjCS_NAD1927MTM1 = $00007D51;
  moProjCS_NAD1927MTM2 = $00007D52;
  moProjCS_NAD1927MTM3 = $00007D53;
  moProjCS_NAD1927MTM4 = $00007D54;
  moProjCS_NAD1927MTM5 = $00007D55;
  moProjCS_NAD1927MTM6 = $00007D56;
  moProjCS_NAD1927QuebecLambert = $00007D62;
  moProjCS_NAD1927StatePlaneAlaska1FIPS5001 = $0000686B;
  moProjCS_NAD198310TMAEPForest = $00018F28;
  moProjCS_NAD198310TMAEPResource = $00018F29;
  moProjCS_NAD19833TM111 = $00018F2A;
  moProjCS_NAD19833TM114 = $00018F2B;
  moProjCS_NAD19833TM117 = $00018F2C;
  moProjCS_NAD19833TM120 = $00018F2D;
  moProjCS_NAD1983BCEnvironmentAlbers = $00018F2E;
  moProjCS_NAD1983CRS98MTM10 = $00000863;
  moProjCS_NAD1983CRS98MTM3 = $0000085C;
  moProjCS_NAD1983CRS98MTM4 = $0000085D;
  moProjCS_NAD1983CRS98MTM5 = $0000085E;
  moProjCS_NAD1983CRS98MTM6 = $0000085F;
  moProjCS_NAD1983CRS98MTM7 = $00000860;
  moProjCS_NAD1983CRS98MTM8 = $00000861;
  moProjCS_NAD1983CRS98MTM9 = $00000862;
  moProjCS_NAD1983CSRS98MTM2SCoPQ = $0000085B;
  moProjCS_NAD1983CSRS98NewBrunswickStereographic = $000007F4;
  moProjCS_NAD1983CSRS98PrinceEdwardIsland = $000008F3;
  moProjCS_NAD1983CSRS98UTM_11N = $00000869;
  moProjCS_NAD1983CSRS98UTM_12N = $00000868;
  moProjCS_NAD1983CSRS98UTM_13N = $00000867;
  moProjCS_NAD1983CSRS98UTM_17N = $00000866;
  moProjCS_NAD1983CSRS98UTM_18N = $00000865;
  moProjCS_NAD1983CSRS98UTM_19N = $000007F5;
  moProjCS_NAD1983CSRS98UTM_20N = $000007F6;
  moProjCS_NAD1983CSRS98UTM_21N = $00000864;
  moProjCS_NAD1983HARNGuamMapGrid = $00018F39;
  moProjCS_NAD1983HARNStatePlaneAlabamaEastFIPS0101 = $00018F55;
  moProjCS_NAD1983HARNStatePlaneAlabamaWestFIPS0102 = $00018F56;
  moProjCS_NAD1983HARNStatePlaneArizonaCentralFIPS0202 = $00018F69;
  moProjCS_NAD1983HARNStatePlaneArizonaEastFIPS0201 = $00018F68;
  moProjCS_NAD1983HARNStatePlaneArizonaWestFIPS0203 = $00018F6A;
  moProjCS_NAD1983HARNStatePlaneArkansasNorthFIPS0301 = $00018F6B;
  moProjCS_NAD1983HARNStatePlaneArkansasSouthFIPS0302 = $00018F6C;
  moProjCS_NAD1983HARNStatePlaneCaliforniaIIIFIPS0403 = $00018F63;
  moProjCS_NAD1983HARNStatePlaneCaliforniaIIFIPS0402 = $00018F62;
  moProjCS_NAD1983HARNStatePlaneCaliforniaIVFIPS0404 = $00018F64;
  moProjCS_NAD1983HARNStatePlaneCaliforniaIFIPS0401 = $00018F61;
  moProjCS_NAD1983HARNStatePlaneCaliforniaVIFIPS0406 = $00018F66;
  moProjCS_NAD1983HARNStatePlaneCaliforniaVFIPS0405 = $00018F65;
  moProjCS_NAD1983HARNStatePlaneColoradoCentralFIPS0502 = $00018F6E;
  moProjCS_NAD1983HARNStatePlaneColoradoNorthFIPS0501 = $00018F6D;
  moProjCS_NAD1983HARNStatePlaneColoradoSouthFIPS0503 = $00018F6F;
  moProjCS_NAD1983HARNStatePlaneConnecticutFIPS0600 = $00018F70;
  moProjCS_NAD1983HARNStatePlaneDelawareFIPS0700 = $00018F71;
  moProjCS_NAD1983HARNStatePlaneFloridaEastFIPS0901 = $00018F72;
  moProjCS_NAD1983HARNStatePlaneFloridaNorthFIPS0903 = $00018F74;
  moProjCS_NAD1983HARNStatePlaneFloridaWestFIPS0902 = $00018F73;
  moProjCS_NAD1983HARNStatePlaneGeorgiaEastFIPS1001 = $00018F7A;
  moProjCS_NAD1983HARNStatePlaneGeorgiaWestFIPS1002 = $00018F7B;
  moProjCS_NAD1983HARNStatePlaneHawaii1FIPS5101 = $00018F75;
  moProjCS_NAD1983HARNStatePlaneHawaii2FIPS5102 = $00018F76;
  moProjCS_NAD1983HARNStatePlaneHawaii3FIPS5103 = $00018F77;
  moProjCS_NAD1983HARNStatePlaneHawaii4FIPS5104 = $00018F78;
  moProjCS_NAD1983HARNStatePlaneHawaii5FIPS5105 = $00018F79;
  moProjCS_NAD1983HARNStatePlaneIdahoCentralFIPS1102 = $00018F7D;
  moProjCS_NAD1983HARNStatePlaneIdahoEastFIPS1101 = $00018F7C;
  moProjCS_NAD1983HARNStatePlaneIdahoWestFIPS1103 = $00018F7E;
  moProjCS_NAD1983HARNStatePlaneIllinoisEastFIPS1201 = $00018F7F;
  moProjCS_NAD1983HARNStatePlaneIllinoisWestFIPS1202 = $00018F80;
  moProjCS_NAD1983HARNStatePlaneIndianaEastFIPS1301 = $00018F81;
  moProjCS_NAD1983HARNStatePlaneIndianaWestFIPS1302 = $00018F82;
  moProjCS_NAD1983HARNStatePlaneKansasNorthFIPS1501 = $00018F85;
  moProjCS_NAD1983HARNStatePlaneKansasSouthFIPS1502 = $00018F86;
  moProjCS_NAD1983HARNStatePlaneKentuckyFIPS1600 = $00018FDB;
  moProjCS_NAD1983HARNStatePlaneKentuckyNorthFIPS1601 = $00018F87;
  moProjCS_NAD1983HARNStatePlaneKentuckySouthFIPS1602 = $00018F88;
  moProjCS_NAD1983HARNStatePlaneLouisianaNorthFIPS1701 = $00018F89;
  moProjCS_NAD1983HARNStatePlaneLouisianaSouthFIPS1702 = $00018F8A;
  moProjCS_NAD1983HARNStatePlaneMaineEastFIPS1801 = $00018F8B;
  moProjCS_NAD1983HARNStatePlaneMaineWestFIPS1802 = $00018F8C;
  moProjCS_NAD1983HARNStatePlaneMarylandFIPS1900 = $00018F8D;
  moProjCS_NAD1983HARNStatePlaneMassachusettsIslandFIPS2002 = $00018F8F;
  moProjCS_NAD1983HARNStatePlaneMassachusettsMainlandFIPS2001 = $00018F8E;
  moProjCS_NAD1983HARNStatePlaneMichiganCentralFIPS2112 = $00018F91;
  moProjCS_NAD1983HARNStatePlaneMichiganNorthFIPS2111 = $00018F90;
  moProjCS_NAD1983HARNStatePlaneMichiganSouthFIPS2113 = $00018F92;
  moProjCS_NAD1983HARNStatePlaneMinnesotaCentralFIPS2202 = $00018F94;
  moProjCS_NAD1983HARNStatePlaneMinnesotaNorthFIPS2201 = $00018F93;
  moProjCS_NAD1983HARNStatePlaneMinnesotaSouthFIPS2203 = $00018F95;
  moProjCS_NAD1983HARNStatePlaneMississippiEastFIPS2301 = $00018F96;
  moProjCS_NAD1983HARNStatePlaneMississippiWestFIPS2302 = $00018F97;
  moProjCS_NAD1983HARNStatePlaneMissouriCentralFIPS2402 = $00018F99;
  moProjCS_NAD1983HARNStatePlaneMissouriEastFIPS2401 = $00018F98;
  moProjCS_NAD1983HARNStatePlaneMissouriWestFIPS2403 = $00018F9A;
  moProjCS_NAD1983HARNStatePlaneMontanaFIPS2500 = $00018F9C;
  moProjCS_NAD1983HARNStatePlaneNebraskaFIPS2600 = $00018FA0;
  moProjCS_NAD1983HARNStatePlaneNevadaCentralFIPS2702 = $00018FA4;
  moProjCS_NAD1983HARNStatePlaneNevadaEastFIPS2701 = $00018FA3;
  moProjCS_NAD1983HARNStatePlaneNevadaWestFIPS2703 = $00018FA5;
  moProjCS_NAD1983HARNStatePlaneNewHampshireFIPS2800 = $00018FA6;
  moProjCS_NAD1983HARNStatePlaneNewJerseyFIPS2900 = $00018FA7;
  moProjCS_NAD1983HARNStatePlaneNewMexicoCentralFIPS3002 = $00018FA9;
  moProjCS_NAD1983HARNStatePlaneNewMexicoEastFIPS3001 = $00018FA8;
  moProjCS_NAD1983HARNStatePlaneNewMexicoWestFIPS3003 = $00018FAA;
  moProjCS_NAD1983HARNStatePlaneNewYorkCentralFIPS3102 = $00018FAC;
  moProjCS_NAD1983HARNStatePlaneNewYorkEastFIPS3101 = $00018FAB;
  moProjCS_NAD1983HARNStatePlaneNewYorkLongIslandFIPS3104 = $00018FAE;
  moProjCS_NAD1983HARNStatePlaneNewYorkWestFIPS3103 = $00018FAD;
  moProjCS_NAD1983HARNStatePlaneNorthDakotaNorthFIPS3301 = $00018FB0;
  moProjCS_NAD1983HARNStatePlaneNorthDakotaSouthFIPS3302 = $00018FB1;
  moProjCS_NAD1983HARNStatePlaneOhioNorthFIPS3401 = $00018FB2;
  moProjCS_NAD1983HARNStatePlaneOhioSouthFIPS3402 = $00018FB3;
  moProjCS_NAD1983HARNStatePlaneOklahomaNorthFIPS3501 = $00018FB4;
  moProjCS_NAD1983HARNStatePlaneOklahomaSouthFIPS3502 = $00018FB5;
  moProjCS_NAD1983HARNStatePlaneOregonNorthFIPS3601 = $00018FB6;
  moProjCS_NAD1983HARNStatePlaneOregonSouthFIPS3602 = $00018FB7;
  moProjCS_NAD1983HARNStatePlanePuertoRicoVirginIslandsFIPS5200 = $00018FD9;
  moProjCS_NAD1983HARNStatePlaneRhodeIslandFIPS3800 = $00018FBA;
  moProjCS_NAD1983HARNStatePlaneSouthDakotaNorthFIPS4001 = $00018FBE;
  moProjCS_NAD1983HARNStatePlaneSouthDakotaSouthFIPS4002 = $00018FBF;
  moProjCS_NAD1983HARNStatePlaneTennesseeFIPS4100 = $00018FC0;
  moProjCS_NAD1983HARNStatePlaneTexasCentralFIPS4203 = $00018FC3;
  moProjCS_NAD1983HARNStatePlaneTexasNorthCentralFIPS4202 = $00018FC2;
  moProjCS_NAD1983HARNStatePlaneTexasNorthFIPS4201 = $00018FC1;
  moProjCS_NAD1983HARNStatePlaneTexasSouthCentralFIPS4204 = $00018FC4;
  moProjCS_NAD1983HARNStatePlaneTexasSouthFIPS4205 = $00018FC5;
  moProjCS_NAD1983HARNStatePlaneUtahCentralFIPS4302 = $00018FC7;
  moProjCS_NAD1983HARNStatePlaneUtahNorthFIPS4301 = $00018FC6;
  moProjCS_NAD1983HARNStatePlaneUtahSouthFIPS4303 = $00018FC8;
  moProjCS_NAD1983HARNStatePlaneVermontFIPS4400 = $00018FC9;
  moProjCS_NAD1983HARNStatePlaneVirginiaNorthFIPS4501 = $00018FCA;
  moProjCS_NAD1983HARNStatePlaneVirginiaSouthFIPS4502 = $00018FCB;
  moProjCS_NAD1983HARNStatePlaneWashingtonNorthFIPS4601 = $00018FCC;
  moProjCS_NAD1983HARNStatePlaneWashingtonSouthFIPS4602 = $00018FCD;
  moProjCS_NAD1983HARNStatePlaneWestVirginiaNorthFIPS4701 = $00018FCE;
  moProjCS_NAD1983HARNStatePlaneWestVirginiaSouthFIPS4702 = $00018FCF;
  moProjCS_NAD1983HARNStatePlaneWisconsinCentralFIPS4802 = $00018FD1;
  moProjCS_NAD1983HARNStatePlaneWisconsinNorthFIPS4801 = $00018FD0;
  moProjCS_NAD1983HARNStatePlaneWisconsinSouthFIPS4803 = $00018FD2;
  moProjCS_NAD1983HARNStatePlaneWyomingEastCentralFIPS4902 = $00018FD4;
  moProjCS_NAD1983HARNStatePlaneWyomingEastFIPS4901 = $00018FD3;
  moProjCS_NAD1983HARNStatePlaneWyomingWestCentralFIPS4903 = $00018FD5;
  moProjCS_NAD1983HARNStatePlaneWyomingWestFIPS4904 = $00018FD6;
  moProjCS_NAD1983HARNUTM_2S = $00018F38;
  moProjCS_NAD1983MichiganGeoRefFeetUS = $00018EE9;
  moProjCS_NAD1983MichiganGeoRefMeters = $00018EEB;
  moProjCS_NAD1983MTM1 = $00007DB5;
  moProjCS_NAD1983MTM10 = $00007DBE;
  moProjCS_NAD1983MTM11 = $00007DBF;
  moProjCS_NAD1983MTM12 = $00007DC0;
  moProjCS_NAD1983MTM13 = $00007DC1;
  moProjCS_NAD1983MTM14 = $00007DC2;
  moProjCS_NAD1983MTM15 = $00007DC3;
  moProjCS_NAD1983MTM16 = $00007DC4;
  moProjCS_NAD1983MTM17 = $00007DC5;
  moProjCS_NAD1983MTM2 = $00007DB6;
  moProjCS_NAD1983MTM2SCoPQ = $00007DB4;
  moProjCS_NAD1983MTM3 = $00007DB7;
  moProjCS_NAD1983MTM4 = $00007DB8;
  moProjCS_NAD1983MTM5 = $00007DB9;
  moProjCS_NAD1983MTM6 = $00007DBA;
  moProjCS_NAD1983MTM7 = $00007DBB;
  moProjCS_NAD1983MTM8 = $00007DBC;
  moProjCS_NAD1983MTM9 = $00007DBD;
  moProjCS_NAD1983QuebecLambert = $00007DC6;
  moProjCS_NAD1983StatePlaneAlabamaEastFIPS0101Feet = $000190E5;
  moProjCS_NAD1983StatePlaneAlabamaWestFIPS0102Feet = $000190E6;
  moProjCS_NAD1983StatePlaneAlaska10FIPS5010Feet = $000190F0;
  moProjCS_NAD1983StatePlaneAlaska1FIPS5001 = $00006933;
  moProjCS_NAD1983StatePlaneAlaska1FIPS5001Feet = $000190E7;
  moProjCS_NAD1983StatePlaneAlaska2FIPS5002Feet = $000190E8;
  moProjCS_NAD1983StatePlaneAlaska3FIPS5003Feet = $000190E9;
  moProjCS_NAD1983StatePlaneAlaska4FIPS5004Feet = $000190EA;
  moProjCS_NAD1983StatePlaneAlaska5FIPS5005Feet = $000190EB;
  moProjCS_NAD1983StatePlaneAlaska6FIPS5006Feet = $000190EC;
  moProjCS_NAD1983StatePlaneAlaska7FIPS5007Feet = $000190ED;
  moProjCS_NAD1983StatePlaneAlaska8FIPS5008Feet = $000190EE;
  moProjCS_NAD1983StatePlaneAlaska9FIPS5009Feet = $000190EF;
  moProjCS_NAD1983StatePlaneArizonaCentralFIPS0202Feet = $000190F9;
  moProjCS_NAD1983StatePlaneArizonaEastFIPS0201Feet = $000190F8;
  moProjCS_NAD1983StatePlaneArizonaWestFIPS0203Feet = $000190FA;
  moProjCS_NAD1983StatePlaneArkansasNorthFIPS0301Feet = $000190FB;
  moProjCS_NAD1983StatePlaneArkansasSouthFIPS0302Feet = $000190FC;
  moProjCS_NAD1983StatePlaneCaliforniaIIIFIPS0403Feet = $000190F3;
  moProjCS_NAD1983StatePlaneCaliforniaIIFIPS0402Feet = $000190F2;
  moProjCS_NAD1983StatePlaneCaliforniaIVFIPS0404Feet = $000190F4;
  moProjCS_NAD1983StatePlaneCaliforniaIFIPS0401Feet = $000190F1;
  moProjCS_NAD1983StatePlaneCaliforniaVIFIPS0406Feet = $000190F6;
  moProjCS_NAD1983StatePlaneCaliforniaVFIPS0405Feet = $000190F5;
  moProjCS_NAD1983StatePlaneColoradoCentralFIPS0502Feet = $000190FE;
  moProjCS_NAD1983StatePlaneColoradoNorthFIPS0501Feet = $000190FD;
  moProjCS_NAD1983StatePlaneColoradoSouthFIPS0503Feet = $000190FF;
  moProjCS_NAD1983StatePlaneConnecticutFIPS0600Feet = $00019100;
  moProjCS_NAD1983StatePlaneDelawareFIPS0700Feet = $00019101;
  moProjCS_NAD1983StatePlaneFloridaEastFIPS0901Feet = $00019102;
  moProjCS_NAD1983StatePlaneFloridaNorthFIPS0903Feet = $00019104;
  moProjCS_NAD1983StatePlaneFloridaWestFIPS0902Feet = $00019103;
  moProjCS_NAD1983StatePlaneGeorgiaEastFIPS1001Feet = $0001910A;
  moProjCS_NAD1983StatePlaneGeorgiaWestFIPS1002Feet = $0001910B;
  moProjCS_NAD1983StatePlaneGuamFIPS5400Feet = $0001916E;
  moProjCS_NAD1983StatePlaneHawaii1FIPS5101Feet = $00019105;
  moProjCS_NAD1983StatePlaneHawaii2FIPS5102Feet = $00019106;
  moProjCS_NAD1983StatePlaneHawaii3FIPS5103Feet = $00019107;
  moProjCS_NAD1983StatePlaneHawaii4FIPS5104Feet = $00019108;
  moProjCS_NAD1983StatePlaneHawaii5FIPS5105Feet = $00019109;
  moProjCS_NAD1983StatePlaneIdahoCentralFIPS1102Feet = $0001910D;
  moProjCS_NAD1983StatePlaneIdahoEastFIPS1101Feet = $0001910C;
  moProjCS_NAD1983StatePlaneIdahoWestFIPS1103Feet = $0001910E;
  moProjCS_NAD1983StatePlaneIllinoisEastFIPS1201Feet = $0001910F;
  moProjCS_NAD1983StatePlaneIllinoisWestFIPS1202Feet = $00019110;
  moProjCS_NAD1983StatePlaneIndianaEastFIPS1301Feet = $00019111;
  moProjCS_NAD1983StatePlaneIndianaWestFIPS1302Feet = $00019112;
  moProjCS_NAD1983StatePlaneIowaNorthFIPS1401Feet = $00019113;
  moProjCS_NAD1983StatePlaneIowaSouthFIPS1402Feet = $00019114;
  moProjCS_NAD1983StatePlaneKansasNorthFIPS1501Feet = $00019115;
  moProjCS_NAD1983StatePlaneKansasSouthFIPS1502Feet = $00019116;
  moProjCS_NAD1983StatePlaneKentuckyFIPS1600 = $0000FE8B;
  moProjCS_NAD1983StatePlaneKentuckyFIPS1600Feet = $0001916B;
  moProjCS_NAD1983StatePlaneKentuckyNorthFIPS1601Feet = $00019117;
  moProjCS_NAD1983StatePlaneKentuckySouthFIPS1602Feet = $00019118;
  moProjCS_NAD1983StatePlaneLouisianaNorthFIPS1701Feet = $00019119;
  moProjCS_NAD1983StatePlaneLouisianaSouthFIPS1702Feet = $0001911A;
  moProjCS_NAD1983StatePlaneMaineEastFIPS1801Feet = $0001911B;
  moProjCS_NAD1983StatePlaneMaineWestFIPS1802Feet = $0001911C;
  moProjCS_NAD1983StatePlaneMarylandFIPS1900Feet = $0001911D;
  moProjCS_NAD1983StatePlaneMassachusettsIslandFIPS2002Feet = $0001911F;
  moProjCS_NAD1983StatePlaneMassachusettsMainlandFIPS2001Feet = $0001911E;
  moProjCS_NAD1983StatePlaneMichiganCentralFIPS2112Feet = $00019121;
  moProjCS_NAD1983StatePlaneMichiganNorthFIPS2111Feet = $00019120;
  moProjCS_NAD1983StatePlaneMichiganSouthFIPS2113Feet = $00019122;
  moProjCS_NAD1983StatePlaneMinnesotaCentralFIPS2202Feet = $00019124;
  moProjCS_NAD1983StatePlaneMinnesotaNorthFIPS2201Feet = $00019123;
  moProjCS_NAD1983StatePlaneMinnesotaSouthFIPS2203Feet = $00019125;
  moProjCS_NAD1983StatePlaneMississippiEastFIPS2301Feet = $00019126;
  moProjCS_NAD1983StatePlaneMississippiWestFIPS2302Feet = $00019127;
  moProjCS_NAD1983StatePlaneMissouriCentralFIPS2402Feet = $00019129;
  moProjCS_NAD1983StatePlaneMissouriEastFIPS2401Feet = $00019128;
  moProjCS_NAD1983StatePlaneMissouriWestFIPS2403Feet = $0001912A;
  moProjCS_NAD1983StatePlaneMontanaFIPS2500Feet = $0001912C;
  moProjCS_NAD1983StatePlaneNebraskaFIPS2600Feet = $00019130;
  moProjCS_NAD1983StatePlaneNevadaCentralFIPS2702Feet = $00019134;
  moProjCS_NAD1983StatePlaneNevadaEastFIPS2701Feet = $00019133;
  moProjCS_NAD1983StatePlaneNevadaWestFIPS2703Feet = $00019135;
  moProjCS_NAD1983StatePlaneNewHampshireFIPS2800Feet = $00019136;
  moProjCS_NAD1983StatePlaneNewJerseyFIPS2900Feet = $00019137;
  moProjCS_NAD1983StatePlaneNewMexicoCentralFIPS3002Feet = $00019139;
  moProjCS_NAD1983StatePlaneNewMexicoEastFIPS3001Feet = $00019138;
  moProjCS_NAD1983StatePlaneNewMexicoWestFIPS3003Feet = $0001913A;
  moProjCS_NAD1983StatePlaneNewYorkCentralFIPS3102Feet = $0001913C;
  moProjCS_NAD1983StatePlaneNewYorkEastFIPS3101Feet = $0001913B;
  moProjCS_NAD1983StatePlaneNewYorkLongIslandFIPS3104Feet = $0001913E;
  moProjCS_NAD1983StatePlaneNewYorkWestFIPS3103Feet = $0001913D;
  moProjCS_NAD1983StatePlaneNorthCarolinaFIPS3200Feet = $0001913F;
  moProjCS_NAD1983StatePlaneNorthDakotaNorthFIPS3301Feet = $00019140;
  moProjCS_NAD1983StatePlaneNorthDakotaSouthFIPS3302Feet = $00019141;
  moProjCS_NAD1983StatePlaneOhioNorthFIPS3401Feet = $00019142;
  moProjCS_NAD1983StatePlaneOhioSouthFIPS3402Feet = $00019143;
  moProjCS_NAD1983StatePlaneOklahomaNorthFIPS3501Feet = $00019144;
  moProjCS_NAD1983StatePlaneOklahomaSouthFIPS3502Feet = $00019145;
  moProjCS_NAD1983StatePlaneOregonNorthFIPS3601Feet = $00019146;
  moProjCS_NAD1983StatePlaneOregonSouthFIPS3602Feet = $00019147;
  moProjCS_NAD1983StatePlanePennsylvaniaNorthFIPS3701Feet = $00019148;
  moProjCS_NAD1983StatePlanePennsylvaniaSouthFIPS3702Feet = $00019149;
  moProjCS_NAD1983StatePlanePuertoRicoVirginIslandsFIPS5200Feet = $00019169;
  moProjCS_NAD1983StatePlaneRhodeIslandFIPS3800Feet = $0001914A;
  moProjCS_NAD1983StatePlaneSouthCarolinaFIPS3900Feet = $0001914D;
  moProjCS_NAD1983StatePlaneSouthDakotaNorthFIPS4001Feet = $0001914E;
  moProjCS_NAD1983StatePlaneSouthDakotaSouthFIPS4002Feet = $0001914F;
  moProjCS_NAD1983StatePlaneTennesseeFIPS4100Feet = $00019150;
  moProjCS_NAD1983StatePlaneTexasCentralFIPS4203Feet = $00019153;
  moProjCS_NAD1983StatePlaneTexasNorthCentralFIPS4202Feet = $00019152;
  moProjCS_NAD1983StatePlaneTexasNorthFIPS4201Feet = $00019151;
  moProjCS_NAD1983StatePlaneTexasSouthCentralFIPS4204Feet = $00019154;
  moProjCS_NAD1983StatePlaneTexasSouthFIPS4205Feet = $00019155;
  moProjCS_NAD1983StatePlaneUtahCentralFIPS4302Feet = $00019157;
  moProjCS_NAD1983StatePlaneUtahNorthFIPS4301Feet = $00019156;
  moProjCS_NAD1983StatePlaneUtahSouthFIPS4303Feet = $00019158;
  moProjCS_NAD1983StatePlaneVermontFIPS4400Feet = $00019159;
  moProjCS_NAD1983StatePlaneVirginiaNorthFIPS4501Feet = $0001915A;
  moProjCS_NAD1983StatePlaneVirginiaSouthFIPS4502Feet = $0001915B;
  moProjCS_NAD1983StatePlaneWashingtonNorthFIPS4601Feet = $0001915C;
  moProjCS_NAD1983StatePlaneWashingtonSouthFIPS4602Feet = $0001915D;
  moProjCS_NAD1983StatePlaneWestVirginiaNorthFIPS4701Feet = $0001915E;
  moProjCS_NAD1983StatePlaneWestVirginiaSouthFIPS4702Feet = $0001915F;
  moProjCS_NAD1983StatePlaneWisconsinCentralFIPS4802Feet = $00019161;
  moProjCS_NAD1983StatePlaneWisconsinNorthFIPS4801Feet = $00019160;
  moProjCS_NAD1983StatePlaneWisconsinSouthFIPS4803Feet = $00019162;
  moProjCS_NAD1983StatePlaneWyomingEastCentralFIPS4902Feet = $00019164;
  moProjCS_NAD1983StatePlaneWyomingEastFIPS4901Feet = $00019163;
  moProjCS_NAD1983StatePlaneWyomingWestCentralFIPS4903Feet = $00019165;
  moProjCS_NAD1983StatePlaneWyomingWestFIPS4904Feet = $00019166;
  moProjCS_Naparima1955UTM_20N = $00000813;
  moProjCS_NGO1948BaerumKommune = $00018EF8;
  moProjCS_NGO1948Bergenhalvoen = $00018EF9;
  moProjCS_NGO1948Norway_1 = $00018ED5;
  moProjCS_NGO1948Norway_2 = $00018ED6;
  moProjCS_NGO1948Norway_3 = $00018ED7;
  moProjCS_NGO1948Norway_4 = $00018ED8;
  moProjCS_NGO1948Norway_5 = $00018ED9;
  moProjCS_NGO1948Norway_6 = $00018EDA;
  moProjCS_NGO1948Norway_7 = $00018EDB;
  moProjCS_NGO1948Norway_8 = $00018EDC;
  moProjCS_NGO1948OsloKommune = $00018EFA;
  moProjCS_NGO1948OsloNorway_1 = $00006AFF;
  moProjCS_NGO1948OsloNorway_2 = $00006B00;
  moProjCS_NGO1948OsloNorway_3 = $00006B01;
  moProjCS_NGO1948OsloNorway_4 = $00006B02;
  moProjCS_NGO1948OsloNorway_5 = $00006B03;
  moProjCS_NGO1948OsloNorway_6 = $00006B04;
  moProjCS_NGO1948OsloNorway_7 = $00006B05;
  moProjCS_NGO1948OsloNorway_8 = $00006B06;
  moProjCS_NGO1948UTM_32N = $00018EF4;
  moProjCS_NGO1948UTM_33N = $00018EF5;
  moProjCS_NGO1948UTM_34N = $00018EF6;
  moProjCS_NGO1948UTM_35N = $00018EF7;
  moProjCS_NordAlgerieAncienneDegree = $0001905B;
  moProjCS_NordAlgerieDegree = $000190BF;
  moProjCS_NordMarocDegree = $00018F2F;
  moProjCS_NorthAmericaAlbersEqualAreaConic = $00018E78;
  moProjCS_NorthAmericaEquidistantConic = $00018E7A;
  moProjCS_NorthAmericaLambertConformalConic = $00018E79;
  moProjCS_NorthPoleAzimuthalEquidistant = $00018E80;
  moProjCS_NorthPoleGnomonic = $00018E92;
  moProjCS_NorthPoleLambertAzimuthalEqualArea = $00018E81;
  moProjCS_NorthPoleOrthographic = $00018E93;
  moProjCS_NorthPoleStereographic = $00018E82;
  moProjCS_NTFFranceIIIdegrees = $000190B7;
  moProjCS_NTFFranceIIdegrees = $000190B6;
  moProjCS_NTFFranceIVdegrees = $000190B8;
  moProjCS_NTFFranceIdegrees = $000190B5;
  moProjCS_NZGD1949AmuriCircuit = $00006A53;
  moProjCS_NZGD1949BayofPlentyCircuit = $00006A46;
  moProjCS_NZGD1949BluffCircuit = $00006A60;
  moProjCS_NZGD1949BullerCircuit = $00006A51;
  moProjCS_NZGD1949CollingwoodCircuit = $00006A4E;
  moProjCS_NZGD1949GawlerCircuit = $00006A59;
  moProjCS_NZGD1949GreyCircuit = $00006A52;
  moProjCS_NZGD1949HawkesBayCircuit = $00006A48;
  moProjCS_NZGD1949HokitikaCircuit = $00006A55;
  moProjCS_NZGD1949JacksonsBayCircuit = $00006A57;
  moProjCS_NZGD1949KarameaCircuit = $00006A50;
  moProjCS_NZGD1949LindisPeakCircuit = $00006A5B;
  moProjCS_NZGD1949MarlboroughCircuit = $00006A54;
  moProjCS_NZGD1949MountEdenCircuit = $00006A45;
  moProjCS_NZGD1949MountNicholasCircuit = $00006A5C;
  moProjCS_NZGD1949MountPleasantCircuit = $00006A58;
  moProjCS_NZGD1949MountYorkCircuit = $00006A5D;
  moProjCS_NZGD1949NelsonCircuit = $00006A4F;
  moProjCS_NZGD1949NorthTaieriCircuit = $00006A5F;
  moProjCS_NZGD1949ObservationPointCircuit = $00006A5E;
  moProjCS_NZGD1949OkaritoCircuit = $00006A56;
  moProjCS_NZGD1949PovertyBayCircuit = $00006A47;
  moProjCS_NZGD1949TaranakiCircuit = $00006A49;
  moProjCS_NZGD1949TimaruCircuit = $00006A5A;
  moProjCS_NZGD1949TuhirangiCircuit = $00006A4A;
  moProjCS_NZGD1949UTM_58S = $00006A7A;
  moProjCS_NZGD1949UTM_59S = $00006A7B;
  moProjCS_NZGD1949UTM_60S = $00006A7C;
  moProjCS_NZGD1949WairarapaCircuit = $00006A4C;
  moProjCS_NZGD1949WanganuiCircuit = $00006A4B;
  moProjCS_NZGD1949WellingtonCircuit = $00006A4D;
  moProjCS_NZGD2000AmuriCircuit = $00000847;
  moProjCS_NZGD2000BayofPlentyCircuit = $0000083A;
  moProjCS_NZGD2000BluffCircuit = $00000854;
  moProjCS_NZGD2000BullerCircuit = $00000845;
  moProjCS_NZGD2000CollingwoodCircuit = $00000842;
  moProjCS_NZGD2000GawlerCircuit = $0000084D;
  moProjCS_NZGD2000GreyCircuit = $00000846;
  moProjCS_NZGD2000HawkesBayCircuit = $0000083C;
  moProjCS_NZGD2000HokitikaCircuit = $00000849;
  moProjCS_NZGD2000JacksonsBayCircuit = $0000084B;
  moProjCS_NZGD2000KarameaCircuit = $00000844;
  moProjCS_NZGD2000LindisPeakCircuit = $0000084F;
  moProjCS_NZGD2000MarlboroughCircuit = $00000848;
  moProjCS_NZGD2000MountEdenCircuit = $00000839;
  moProjCS_NZGD2000MountNicholasCircuit = $00000850;
  moProjCS_NZGD2000MountPleasantCircuit = $0000084C;
  moProjCS_NZGD2000MountYorkCircuit = $00000851;
  moProjCS_NZGD2000NelsonCircuit = $00000843;
  moProjCS_NZGD2000NorthTaieriCircuit = $00000853;
  moProjCS_NZGD2000ObservationPointCircuit = $00000852;
  moProjCS_NZGD2000OkaritoCircuit = $0000084A;
  moProjCS_NZGD2000PovertyBayCircuit = $0000083B;
  moProjCS_NZGD2000TaranakiCircuit = $0000083D;
  moProjCS_NZGD2000TimaruCircuit = $0000084E;
  moProjCS_NZGD2000TuhirangiCircuit = $0000083E;
  moProjCS_NZGD2000UTM_58S = $00000855;
  moProjCS_NZGD2000UTM_59S = $00000856;
  moProjCS_NZGD2000UTM_60S = $00000857;
  moProjCS_NZGD2000WairarapaCircuit = $00000840;
  moProjCS_NZGD2000WanganuiCircuit = $0000083F;
  moProjCS_NZGD2000WellingtonCircuit = $00000841;
  moProjCS_ObservMeteorologico1939UTM_25N = $00018F16;
  moProjCS_OldHawaiianStatePlaneHawaii1FIPS5101 = $00000DE9;
  moProjCS_OldHawaiianStatePlaneHawaii2FIPS5102 = $00000DEA;
  moProjCS_OldHawaiianStatePlaneHawaii3FIPS5103 = $00000DEB;
  moProjCS_OldHawaiianStatePlaneHawaii4FIPS5104 = $00000DEC;
  moProjCS_OldHawaiianStatePlaneHawaii5FIPS5105 = $00000DED;
  moProjCS_OldHawaiianUTM_4N = $00018EE2;
  moProjCS_OldHawaiianUTM_5N = $00018EE3;
  moProjCS_Palestine1923IsraelCSGrid = $00006E21;
  moProjCS_Palestine1923PalestineBelt = $00006E20;
  moProjCS_Palestine1923PalestineGrid = $00006E1F;
  moProjCS_PampadelCastilloArgentina2 = $00000822;
  moProjCS_PDO1993UTM_39N = $00000D6F;
  moProjCS_PDO1993UTM_40N = $00000D70;
  moProjCS_PortoSanto1936UTM_28N = $00018F17;
  moProjCS_PrinceEdwardIslandStereographic = $000008F2;
  moProjCS_PSAD1956UTM_22S = $00006132;
  moProjCS_PuertoRicoStatePlanePuertoRicoFIPS5201 = $00000F97;
  moProjCS_PuertoRicoStatePlaneVirginIslandsStCroixFIPS5202 = $00000F98;
  moProjCS_PuertoRicoUTM_20N = $00000F50;
  moProjCS_Pulkovo1942GK_2 = $00006EF2;
  moProjCS_Pulkovo1942GK_2N = $00006F2E;
  moProjCS_Pulkovo1942GK_3 = $00006EF3;
  moProjCS_Pulkovo1942GK_3N = $00006F2F;
  moProjCS_Pulkovo1995GK_2 = $00004E22;
  moProjCS_Pulkovo1995GK_2N = $00004E5E;
  moProjCS_Pulkovo1995GK_3 = $00004E23;
  moProjCS_Pulkovo1995GK_3N = $00004E5F;
  moProjCS_Qatar1948QatarGrid = $00000833;
  moProjCS_RDNew = $00007140;
  moProjCS_RDOld = $0000713F;
  moProjCS_RGF1993Lambert93 = $00018EDE;
  moProjCS_RT9025gonW = $00000960;
  moProjCS_SJTSKFerroKrovak = $00000811;
  moProjCS_SJTSKFerroKrovakEastNorth = $00018EB2;
  moProjCS_SJTSKKrovak = $00018EB1;
  moProjCS_SJTSKKrovakEastNorth = $00018EB3;
  moProjCS_SAD1969BrazilPolyconic = $000071AC;
  moProjCS_SaharaDegree = $00018F31;
  moProjCS_SambojaUTM_50S = $000009F6;
  moProjCS_Samoa1962SamoaLambert = $0000086B;
  moProjCS_SaoBrazUTM_26N = $00018F18;
  moProjCS_SelvagemGrande1938UTM_28N = $00018F19;
  moProjCS_SierraLeone1924NewColonyGrid = $0000086F;
  moProjCS_SierraLeone1924NewWarOfficeGrid = $00000870;
  moProjCS_SierraLeone1968UTM_28N = $00000871;
  moProjCS_SierraLeone1968UTM_29N = $00000872;
  moProjCS_SIRGASUTM_17N = $00007CAD;
  moProjCS_SIRGASUTM_17S = $00007CE9;
  moProjCS_SIRGASUTM_18N = $00007CAE;
  moProjCS_SIRGASUTM_18S = $00007CEA;
  moProjCS_SIRGASUTM_19N = $00007CAF;
  moProjCS_SIRGASUTM_19S = $00007CEB;
  moProjCS_SIRGASUTM_20N = $00007CB0;
  moProjCS_SIRGASUTM_20S = $00007CEC;
  moProjCS_SIRGASUTM_21N = $00007CB1;
  moProjCS_SIRGASUTM_21S = $00007CED;
  moProjCS_SIRGASUTM_22N = $00007CB2;
  moProjCS_SIRGASUTM_22S = $00007CEE;
  moProjCS_SIRGASUTM_23S = $00007CEF;
  moProjCS_SIRGASUTM_24S = $00007CF0;
  moProjCS_SIRGASUTM_25S = $00007CF1;
  moProjCS_SouthAmericaAlbersEqualAreaConic = $00018E91;
  moProjCS_SouthAmericaEquidistantConic = $00018E90;
  moProjCS_SouthAmericaLambertConformalConic = $00018E7F;
  moProjCS_SouthPoleAzimuthalEquidistant = $00018E83;
  moProjCS_SouthPoleGnomonic = $00018E94;
  moProjCS_SouthPoleLambertAzimuthalEqualArea = $00018E84;
  moProjCS_SouthPoleOrthographic = $00018E95;
  moProjCS_SouthPoleStereographic = $00018E85;
  moProjCS_SouthYemenGK_8 = $0000082B;
  moProjCS_SouthYemenGK_9 = $0000082C;
  moProjCS_Sphere_Aitoff = $0000CF33;
  moProjCS_Sphere_CrasterParabolic = $0000CF36;
  moProjCS_Sphere_CylindricalEqualArea = $0000CF2A;
  moProjCS_Sphere_FlatPolarQuartic = $0000CF35;
  moProjCS_Sphere_HammerAitoff = $0000CF34;
  moProjCS_Sphere_Times = $0000CF38;
  moProjCS_Sphere_VerticalPerspective = $0000CF39;
  moProjCS_Sphere_WinkelTripelNGS = $0000CF32;
  moProjCS_StKitts1955BritishWestIndiesGrid = $000007D5;
  moProjCS_StLucia1955BritishWestIndiesGrid = $000007D6;
  moProjCS_StVincent1945BritishWestIndiesGrid = $000007D7;
  moProjCS_SudAlgerieAncienneDegree = $0001905C;
  moProjCS_SudAlgerieDegree = $000190C0;
  moProjCS_SudMarocDegree = $00018F30;
  moProjCS_TeteUTM_36S = $00000AB0;
  moProjCS_TeteUTM_37S = $00000AB1;
  moProjCS_TheWorldFromSpace = $00018E96;
  moProjCS_TokyoUTM_51N = $00018F07;
  moProjCS_TokyoUTM_52N = $00018F08;
  moProjCS_TokyoUTM_53N = $00018F09;
  moProjCS_TokyoUTM_54N = $00018F0A;
  moProjCS_TokyoUTM_55N = $00018F0B;
  moProjCS_TokyoUTM_56N = $00018F0C;
  moProjCS_Trinidad1903TrinidadGrid = $000075F8;
  moProjCS_UPSNorth = $00007F95;
  moProjCS_UPSSouth = $00007FF9;
  moProjCS_USAContiguousAlbersEqualAreaConic = $00018E73;
  moProjCS_USAContiguousAlbersEqualAreaConicUSGSversion = $00018E97;
  moProjCS_USAContiguousEquidistantConic = $00018E75;
  moProjCS_USAContiguousLambertConformalConic = $00018E74;
  moProjCS_UWPP1992 = $00018F32;
  moProjCS_UWPP2000PAS5 = $00018F33;
  moProjCS_UWPP2000PAS6 = $00018F34;
  moProjCS_UWPP2000PAS7 = $00018F35;
  moProjCS_UWPP2000PAS8 = $00018F36;
  moProjCS_WGS1972BETM106NE = $0000082E;
  moProjCS_WGS1984TM36SE = $00007FFE;
  moProjCS_World_Aitoff = $0000D31B;
  moProjCS_World_CrasterParabolic = $0000D31E;
  moProjCS_World_CylindricalEqualArea = $0000D312;
  moProjCS_World_FlatPolarQuartic = $0000D31D;
  moProjCS_World_HammerAitoff = $0000D31C;
  moProjCS_World_Times = $0000D320;
  moProjCS_World_VerticalPerspective = $0000D321;
  moProjCS_World_WinkelTripelNGS = $0000D31A;
  moProjCS_YemenNGN1996UTM_38N = $00000829;
  moProjCS_YemenNGN1996UTM_39N = $0000082A;
  moProjCS_ZanderijSurinameOldTM = $000079C2;
  moProjCS_ZanderijSurinameTM = $000079C3;
  moProjCS_ZanderijTM54NW = $000079B2;

// Constants for enum GeographicCoordSysConstants
type
  GeographicCoordSysConstants = TOleEnum;
const
  moGeoCS_Adindan = $00001069;
  moGeoCS_Afgooye = $0000106D;
  moGeoCS_Agadez = $0000106E;
  moGeoCS_AinElAbd1970 = $0000106C;
  moGeoCS_Airy1830 = $00000FA1;
  moGeoCS_ModifiedAiry = $00000FA2;
  moGeoCS_AlaskanIslands = $0000918C;
  moGeoCS_Amersfoort = $000010C1;
  moGeoCS_Anna1_1965 = $0000916F;
  moGeoCS_AntiguaIsland1943 = $00009174;
  moGeoCS_Aratu = $00001070;
  moGeoCS_Arc1950 = $00001071;
  moGeoCS_Arc1960 = $00001072;
  moGeoCS_AscensionIsland1958 = $00009175;
  moGeoCS_Astro1952 = $0000915E;
  moGeoCS_ATFParis = $00001325;
  moGeoCS_ATS1977 = $0000101A;
  moGeoCS_Australian = $00000FA3;
  moGeoCS_AGD1966 = $0000106A;
  moGeoCS_AGD1984 = $0000106B;
  moGeoCS_Ayabelle = $00009158;
  moGeoCS_Barbados = $00001074;
  moGeoCS_Batavia = $00001073;
  moGeoCS_BataviaJakarta = $000012CD;
  moGeoCS_BeaconE1945 = $0000915C;
  moGeoCS_Beduaram = $00001075;
  moGeoCS_Beijing1954 = $00001076;
  moGeoCS_Belge1950 = $00001077;
  moGeoCS_Belge1950Brussels = $000012C9;
  moGeoCS_Belge1972 = $000010D9;
  moGeoCS_BellevueIGN = $0000915F;
  moGeoCS_Bermuda1957 = $00001078;
  moGeoCS_Bern1898 = $00001079;
  moGeoCS_Bern1898Bern = $000012C1;
  moGeoCS_Bern1938 = $000010D2;
  moGeoCS_Bessel1841 = $00000FA4;
  moGeoCS_ModifiedBessel = $00000FA5;
  moGeoCS_BesselNamibia = $00000FA6;
  moGeoCS_Bissau = $00009159;
  moGeoCS_Bogota = $0000107A;
  moGeoCS_BogotaBogota = $000012C2;
  moGeoCS_BukitRimpah = $0000107B;
  moGeoCS_Camacupa = $0000107C;
  moGeoCS_CampoInchauspe = $0000107D;
  moGeoCS_CampArea = $00009185;
  moGeoCS_Canton1966 = $00009160;
  moGeoCS_Cape = $0000107E;
  moGeoCS_CapeCanaveral = $00009177;
  moGeoCS_Carthage = $0000107F;
  moGeoCS_CarthageDegrees = $00009167;
  moGeoCS_ChathamIsland1971 = $00009161;
  moGeoCS_Chua = $00001080;
  moGeoCS_Clarke1858 = $00000FA7;
  moGeoCS_Clarke1866 = $00000FA8;
  moGeoCS_Clarke1866Michigan = $00000FA9;
  moGeoCS_Clarke1880 = $00000FC2;
  moGeoCS_Clarke1880Arc = $00000FAD;
  moGeoCS_Clarke1880Benoit = $00000FAA;
  moGeoCS_Clarke1880IGN = $00000FAB;
  moGeoCS_Clarke1880RGS = $00000FAC;
  moGeoCS_Clarke1880SGA = $00000FAE;
  moGeoCS_Conakry1905 = $000010DB;
  moGeoCS_CorregoAlegre = $00001081;
  moGeoCS_CoteDIvoire = $00001082;
  moGeoCS_Dabola = $0000915A;
  moGeoCS_Datum73 = $000010B2;
  moGeoCS_DealulPiscului1933 = $000010DC;
  moGeoCS_DealulPiscului1970 = $000010DD;
  moGeoCS_DeceptionIsland = $00009186;
  moGeoCS_DeirezZor = $00001083;
  moGeoCS_DHDN = $000010DA;
  moGeoCS_DOS1968 = $00009162;
  moGeoCS_DOS71_4 = $00009176;
  moGeoCS_Douala = $00001084;
  moGeoCS_EasterIsland1967 = $00009163;
  moGeoCS_Egypt1907 = $00001085;
  moGeoCS_ETRS1989 = $000010A2;
  moGeoCS_EuropeanDatum1950 = $00001086;
  moGeoCS_European1979 = $00009151;
  moGeoCS_EuropeanDatum1987 = $00001087;
  moGeoCS_Everest1830 = $00000FAF;
  moGeoCS_EverestBangladesh = $00009152;
  moGeoCS_Everest1967 = $00000FB0;
  moGeoCS_Everest1975 = $00000FB1;
  moGeoCS_EverestIndiaNepal = $00009153;
  moGeoCS_ModifiedEverest = $00000FB2;
  moGeoCS_ModifiedEverest1969 = $0000908E;
  moGeoCS_Fahud = $00001088;
  moGeoCS_Fischer1960 = $0000908A;
  moGeoCS_Fischer1968 = $0000908B;
  moGeoCS_ModifiedFischer = $0000908C;
  moGeoCS_FortThomas1955 = $00009178;
  moGeoCS_Gandajika1970 = $00001089;
  moGeoCS_Gan1970 = $00009170;
  moGeoCS_Garoua = $0000108A;
  moGeoCS_GDA1994 = $000010BB;
  moGeoCS_GEM10C = $00000FBF;
  moGeoCS_GGRS1987 = $00001019;
  moGeoCS_Graciosa1948 = $00009179;
  moGeoCS_Greek = $00001018;
  moGeoCS_GreekAthens = $000012CF;
  moGeoCS_GRS1967 = $00000FC4;
  moGeoCS_GRS1980 = $00000FB3;
  moGeoCS_Guam1963 = $00009164;
  moGeoCS_GunungSegara = $00009187;
  moGeoCS_GUX1 = $00009165;
  moGeoCS_GuyaneFrancaise = $0000108B;
  moGeoCS_Helmert1906 = $00000FB4;
  moGeoCS_HeratNorth = $0000109F;
  moGeoCS_HitoXVIII1963 = $0000109E;
  moGeoCS_Hjorsey1955 = $00009154;
  moGeoCS_HongKong1963 = $00009155;
  moGeoCS_Hough1960 = $0000908D;
  moGeoCS_Hungarian1972 = $0000108D;
  moGeoCS_HuTzuShan = $0000108C;
  moGeoCS_Indian1954 = $0000108F;
  moGeoCS_Indian1960 = $00009188;
  moGeoCS_Indian1975 = $00001090;
  moGeoCS_Indonesian = $00000FB5;
  moGeoCS_Indonesian1974 = $0000108E;
  moGeoCS_International1927 = $00000FB6;
  moGeoCS_International1967 = $00000FB7;
  moGeoCS_ISTS061_1968 = $0000917A;
  moGeoCS_ISTS073_1969 = $00009171;
  moGeoCS_Jamaica1875 = $00001091;
  moGeoCS_Jamaica1969 = $00001092;
  moGeoCS_JohnstonIsland1961 = $00009166;
  moGeoCS_Kalianpur = $00001093;
  moGeoCS_Kandawala = $00001094;
  moGeoCS_KerguelenIsland1949 = $00009172;
  moGeoCS_Kertau = $00001095;
  moGeoCS_KKJ = $0000101B;
  moGeoCS_Krasovsky1940 = $00000FB8;
  moGeoCS_KYDAMS = $000010DF;
  moGeoCS_Kusaie1951 = $0000918B;
  moGeoCS_KOC = $00001096;
  moGeoCS_Lake = $00001099;
  moGeoCS_LaCanoa = $00001097;
  moGeoCS_LC5_1961 = $0000917B;
  moGeoCS_Leigon = $0000109A;
  moGeoCS_Liberia1964 = $0000109B;
  moGeoCS_Lisbon = $0000106F;
  moGeoCS_LisbonLisbon = $000012C3;
  moGeoCS_LomaQuintana = $000010C0;
  moGeoCS_Lome = $0000109C;
  moGeoCS_Luzon1911 = $0000109D;
  moGeoCS_Mahe1971 = $000010A0;
  moGeoCS_Makassar = $000010A1;
  moGeoCS_MakassarJakarta = $000012C4;
  moGeoCS_Malongo1987 = $000010A3;
  moGeoCS_Manoca = $000010A4;
  moGeoCS_Massawa = $000010A6;
  moGeoCS_Merchich = $000010A5;
  moGeoCS_MGI = $000010D8;
  moGeoCS_MGIFerro = $000012C5;
  moGeoCS_Mhast = $000010A8;
  moGeoCS_Midway1961 = $00009168;
  moGeoCS_Minna = $000010A7;
  moGeoCS_MonteMario = $000010A9;
  moGeoCS_MonteMarioRome = $000012C6;
  moGeoCS_Montserrat1958 = $0000917C;
  moGeoCS_MPoraloko = $000010AA;
  moGeoCS_Nahrwan1967 = $000010AE;
  moGeoCS_Naparima1972 = $000010AF;
  moGeoCS_NZGD1949 = $000010B0;
  moGeoCS_NGN = $000010DE;
  moGeoCS_NGO1948 = $000010B1;
  moGeoCS_NorddeGuerreParis = $00001326;
  moGeoCS_NordSahara1959 = $000010D3;
  moGeoCS_NAD1927 = $000010AB;
  moGeoCS_NAD1983 = $000010AD;
  moGeoCS_NAD1983HARN = $0001974D;
  moGeoCS_NADMichigan = $000010AC;
  moGeoCS_NSWC9Z_2 = $000010B4;
  moGeoCS_NTF = $000010B3;
  moGeoCS_NTFParis = $000012C7;
  moGeoCS_NWL9D = $00000FB9;
  moGeoCS_ObservMeteor1939 = $0000917D;
  moGeoCS_OldHawaiian = $00009169;
  moGeoCS_Oman = $00009156;
  moGeoCS_OSGB1936 = $000010B5;
  moGeoCS_OSGB1970SN = $000010B6;
  moGeoCS_OSU1986F = $00000FC0;
  moGeoCS_OSU1991A = $00000FC1;
  moGeoCS_OSSN1980 = $000010B7;
  moGeoCS_Padang1884 = $000010B8;
  moGeoCS_Padang1884Jakarta = $000012C8;
  moGeoCS_Palestine1923 = $000010B9;
  moGeoCS_PicodeLasNieves = $0000917E;
  moGeoCS_Pitcairn1967 = $0000916A;
  moGeoCS_Plessis1817 = $00000FBB;
  moGeoCS_PointeNoire = $000010BA;
  moGeoCS_Point58 = $0000915B;
  moGeoCS_PortoSanto1936 = $0000917F;
  moGeoCS_PSAD1956 = $00001098;
  moGeoCS_PuertoRico = $00009180;
  moGeoCS_Pulkovo1942 = $000010BC;
  moGeoCS_Pulkovo1995 = $00001068;
  moGeoCS_Qatar = $000010BD;
  moGeoCS_Qatar1948 = $000010BE;
  moGeoCS_Qornoq = $000010BF;
  moGeoCS_Reunion = $00009173;
  moGeoCS_RT38 = $000010D4;
  moGeoCS_RT38Stockholm = $000012CE;
  moGeoCS_S_42Hungary = $00009189;
  moGeoCS_Samoa1962 = $00009184;
  moGeoCS_SantoDOS1965 = $0000916B;
  moGeoCS_SaoBraz = $00009181;
  moGeoCS_SapperHill1943 = $000010C4;
  moGeoCS_Schwarzeck = $000010C5;
  moGeoCS_Segora = $000010C6;
  moGeoCS_SelvagemGrande1938 = $00009182;
  moGeoCS_Serindung = $000010C7;
  moGeoCS_SAD1969 = $000010C3;
  moGeoCS_SouthAsiaSingapore = $00009157;
  moGeoCS_Authalicsphere = $00000FC3;
  moGeoCS_AuthalicsphereARCINFO = $00009090;
  moGeoCS_Struve1860 = $00000FBC;
  moGeoCS_Sudan = $000010C8;
  moGeoCS_S_JTSK = $0000918A;
  moGeoCS_Tananarive1925 = $000010C9;
  moGeoCS_Tananarive1925Paris = $000012CA;
  moGeoCS_TernIsland1961 = $0000915D;
  moGeoCS_Timbalai1948 = $000010CA;
  moGeoCS_TM65 = $000010CB;
  moGeoCS_TM75 = $000010CC;
  moGeoCS_Tokyo = $000010CD;
  moGeoCS_Trinidad1903 = $000010CE;
  moGeoCS_Tristan1968 = $00009183;
  moGeoCS_TrucialCoast1948 = $000010CF;
  moGeoCS_VitiLevu1916 = $0000916C;
  moGeoCS_Voirol1875 = $000010D0;
  moGeoCS_Voirol1875Paris = $000012CB;
  moGeoCS_VoirolUnifie1960 = $000010D1;
  moGeoCS_VoirolUnifie1960Paris = $000012CC;
  moGeoCS_WakeEniwetok1960 = $0000916D;
  moGeoCS_WakeIsland1952 = $0000916E;
  moGeoCS_Walbeck = $0000908F;
  moGeoCS_WarOffice = $00000FBD;
  moGeoCS_WGS1966 = $00009089;
  moGeoCS_WGS1972 = $000010E2;
  moGeoCS_WGS1972BE = $000010E4;
  moGeoCS_WGS1984 = $000010E6;
  moGeoCS_Yacare = $000010D5;
  moGeoCS_Yoff = $000010D6;
  moGeoCS_Zanderij = $000010D7;
  moGeoCS_Abidjan1987 = $0000102F;
  moGeoCS_Accra = $00001048;
  moGeoCS_Anguilla1957 = $000011F8;
  moGeoCS_AssumedGeographic1 = $00019640;
  moGeoCS_BabSouth = $000196B0;
  moGeoCS_CarthageParis = $000012D0;
  moGeoCS_CH1903 = $00001035;
  moGeoCS_CH1903Plus = $00001036;
  moGeoCS_ChosMalal1914 = $00001040;
  moGeoCS_DatumLisboaBessel = $000196A9;
  moGeoCS_DatumLisboaHayford = $000196AA;
  moGeoCS_Dominica1945 = $000011FA;
  moGeoCS_Estonia1937 = $000196A5;
  moGeoCS_Estonia1992 = $00001025;
  moGeoCS_European1950ED77 = $0000103A;
  moGeoCS_EuropeanLibyanDatum1979 = $0000103F;
  moGeoCS_Everestdef1962 = $00000FCC;
  moGeoCS_FD1958 = $00001024;
  moGeoCS_Grenada1953 = $000011FB;
  moGeoCS_Hanoi1972 = $00001033;
  moGeoCS_Hartebeesthoek1994 = $00001034;
  moGeoCS_Hermannskogel = $000196A6;
  moGeoCS_HongKong1980 = $000196A8;
  moGeoCS_IRENET95 = $0000104D;
  moGeoCS_Israel = $0000102D;
  moGeoCS_JGD2000 = $000196AF;
  moGeoCS_Kalianpur1937 = $00001030;
  moGeoCS_Kalianpur1962 = $00001031;
  moGeoCS_Kalianpur1975 = $00001032;
  moGeoCS_KoreanDatum1985 = $00001042;
  moGeoCS_KoreanDatum1995 = $00001046;
  moGeoCS_LKS1994 = $0000101E;
  moGeoCS_Locodjo1965 = $0000102E;
  moGeoCS_Madrid1870Madrid = $00001327;
  moGeoCS_Madzansua = $00001020;
  moGeoCS_Majuro = $000196B1;
  moGeoCS_MerchichDegree = $00019745;
  moGeoCS_MountDillon = $0000103D;
  moGeoCS_Moznet = $00001022;
  moGeoCS_NAD1927CGQ77 = $00001201;
  moGeoCS_NAD1927Definition1976 = $00001200;
  moGeoCS_Naparima1955 = $0000103E;
  moGeoCS_NGO1948Oslo = $000012D1;
  moGeoCS_NorthAmerican1983CSRS98 = $0000102C;
  moGeoCS_NZGD2000 = $000196AC;
  moGeoCS_Observatario = $00001021;
  moGeoCS_PampadelCastillo = $00001041;
  moGeoCS_PDO1993 = $00001026;
  moGeoCS_Pohnpei = $000196AD;
  moGeoCS_POSGAR = $0000104C;
  moGeoCS_Rassadiran = $00001039;
  moGeoCS_REGVEN = $000196AE;
  moGeoCS_RGF1993 = $000196AB;
  moGeoCS_RT1990 = $0000101C;
  moGeoCS_Samboja = $0000101D;
  moGeoCS_SierraLeone1924 = $0000104E;
  moGeoCS_SierraLeone1960 = $000196A7;
  moGeoCS_SierraLeone1968 = $0000104F;
  moGeoCS_SIRGAS = $0000104A;
  moGeoCS_SouthYemen = $00001044;
  moGeoCS_StGeorgeIsland = $0000102A;
  moGeoCS_StKitts1955 = $000011FD;
  moGeoCS_StLawrenceIsland = $00001028;
  moGeoCS_StLucia1955 = $000011FE;
  moGeoCS_StPaulIsland = $00001029;
  moGeoCS_StVincent1945 = $000011FF;
  moGeoCS_SwissTRF1995 = $00001037;
  moGeoCS_SJTSKFerro = $000012D2;
  moGeoCS_Tete = $0000101F;
  moGeoCS_Voirol1875Degree = $00019770;
  moGeoCS_VoirolUnifie1960Degree = $00019771;
  moGeoCS_YemenNGN1996 = $00001043;

// Constants for enum DatumConstants
type
  DatumConstants = TOleEnum;
const
  moDatum_Adindan = $00001839;
  moDatum_Afgooye = $0000183D;
  moDatum_Agadez = $0000183E;
  moDatum_AinElAbd1970 = $0000183C;
  moDatum_Airy1830 = $00001771;
  moDatum_ModifiedAiry = $00001772;
  moDatum_AlaskanIslands = $0000995C;
  moDatum_AmersFoort = $00001891;
  moDatum_Anna1_1965 = $0000993F;
  moDatum_AntiguaIsland1943 = $00009944;
  moDatum_Aratu = $00001840;
  moDatum_Arc1950 = $00001841;
  moDatum_Arc1960 = $00001842;
  moDatum_AscensionIsland1958 = $00009945;
  moDatum_Astro1952 = $0000992E;
  moDatum_ATF = $00001AF5;
  moDatum_ATS1977 = $000017EA;
  moDatum_Australian = $00001773;
  moDatum_AGD1966 = $0000183A;
  moDatum_AGD1984 = $0000183B;
  moDatum_AyabelleLighthouse = $00009928;
  moDatum_Barbados = $00001844;
  moDatum_Batavia = $00001843;
  moDatum_BeaconE1945 = $0000992C;
  moDatum_Beduaram = $00001845;
  moDatum_Beijing1954 = $00001846;
  moDatum_Belge1950 = $00001847;
  moDatum_Belge1972 = $000018A9;
  moDatum_Bellevue = $0000992F;
  moDatum_Bermuda1957 = $00001848;
  moDatum_Bern1898 = $00001849;
  moDatum_Bern1938 = $000018A2;
  moDatum_Bessel1841 = $00001774;
  moDatum_ModifiedBessel = $00001775;
  moDatum_BesselNamibia = $00001776;
  moDatum_Bissau = $00009929;
  moDatum_Bogota = $0000184A;
  moDatum_BukitRimpah = $0000184B;
  moDatum_Camacupa = $0000184C;
  moDatum_CampoInchauspe = $0000184D;
  moDatum_CampArea = $00009955;
  moDatum_Canton1966 = $00009930;
  moDatum_Cape = $0000184E;
  moDatum_CapeCanaveral = $00009947;
  moDatum_Carthage = $0000184F;
  moDatum_ChathamIsland1971 = $00009931;
  moDatum_Chua = $00001850;
  moDatum_Clarke1858 = $00001777;
  moDatum_Clarke1866 = $00001778;
  moDatum_Clarke1866Michigan = $00001779;
  moDatum_Clarke1880 = $00001792;
  moDatum_Clarke1880Arc = $0000177D;
  moDatum_Clarke1880Benoit = $0000177A;
  moDatum_Clarke1880IGN = $0000177B;
  moDatum_Clarke1880RGS = $0000177C;
  moDatum_Clarke1880SGA = $0000177E;
  moDatum_Conakry1905 = $000018AB;
  moDatum_CorregoAlegre = $00001851;
  moDatum_CoteDIvoire = $00001852;
  moDatum_Dabola = $0000992A;
  moDatum_Datum73 = $00001882;
  moDatum_DealulPiscului1933 = $000018AC;
  moDatum_DealulPiscului1970 = $000018AD;
  moDatum_DeceptionIsland = $00009956;
  moDatum_DeirEzZor = $00001853;
  moDatum_DHDN = $000018AA;
  moDatum_DOS1968 = $00009932;
  moDatum_DOS71_4 = $00009946;
  moDatum_Douala = $00001854;
  moDatum_EasterIsland1967 = $00009933;
  moDatum_Egpyt1907 = $00001855;
  moDatum_ETRS1989 = $00001872;
  moDatum_EuropeanDatum1950 = $00001856;
  moDatum_European1979 = $00009921;
  moDatum_EuropeanDatum1987 = $00001857;
  moDatum_Everest1830 = $0000177F;
  moDatum_EverestBangladesh = $00009922;
  moDatum_Everest1967 = $00001780;
  moDatum_Everest1975 = $00001781;
  moDatum_EverestIndiaNepal = $00009923;
  moDatum_ModifiedEverest = $00001782;
  moDatum_ModifiedEverest1969 = $0000985E;
  moDatum_Fahud = $00001858;
  moDatum_Fischer1960 = $0000985A;
  moDatum_Fischer1968 = $0000985B;
  moDatum_ModifiedFischer = $0000985C;
  moDatum_FortThomas1955 = $00009948;
  moDatum_Gandajika1970 = $00001859;
  moDatum_Gan1970 = $00009940;
  moDatum_Garoua = $0000185A;
  moDatum_GDA1994 = $0000188B;
  moDatum_GEM10C = $0000178F;
  moDatum_GGRS1987 = $000017E9;
  moDatum_Graciosa1948 = $00009949;
  moDatum_Greek = $000017E8;
  moDatum_GRS1967 = $00001794;
  moDatum_GRS1980 = $00001783;
  moDatum_Guam1963 = $00009934;
  moDatum_GunungSegara = $00009957;
  moDatum_GUX1 = $00009935;
  moDatum_GuyaneFrancaise = $0000185B;
  moDatum_Helmert1906 = $00001784;
  moDatum_HeratNorth = $0000186F;
  moDatum_HitoXVIII1963 = $0000186E;
  moDatum_Hjorsey1955 = $00009924;
  moDatum_HongKong1963 = $00009925;
  moDatum_Hough1960 = $0000985D;
  moDatum_Hungarian1972 = $0000185D;
  moDatum_HuTzuShan = $0000185C;
  moDatum_Indian1954 = $0000185F;
  moDatum_Indian1960 = $00009958;
  moDatum_Indian1975 = $00001860;
  moDatum_Indonesian = $00001785;
  moDatum_Indonesian1974 = $0000185E;
  moDatum_International1927 = $00001786;
  moDatum_International1967 = $00001787;
  moDatum_ISTS061_1968 = $0000994A;
  moDatum_ISTS073_1969 = $00009941;
  moDatum_Jamaica1875 = $00001861;
  moDatum_Jamaica1969 = $00001862;
  moDatum_JohnstonIsland1961 = $00009936;
  moDatum_Kalianpur = $00001863;
  moDatum_Kandawala = $00001864;
  moDatum_KerguelenIsland1949 = $00009942;
  moDatum_Kertau = $00001865;
  moDatum_KKJ = $000017EB;
  moDatum_Krasovksy1940 = $00001788;
  moDatum_Kusaie1951 = $0000995B;
  moDatum_KOC = $00001866;
  moDatum_KUDAMS = $000018AF;
  moDatum_Lake = $00001869;
  moDatum_LaCanoa = $00001867;
  moDatum_LC5_1961 = $0000994B;
  moDatum_Leigon = $0000186A;
  moDatum_Liberia1964 = $0000186B;
  moDatum_Lisbon = $0000183F;
  moDatum_LomaQuintana = $00001890;
  moDatum_Lome = $0000186C;
  moDatum_Luzon1911 = $0000186D;
  moDatum_Mahe1971 = $00001870;
  moDatum_Makassar = $00001871;
  moDatum_Malongo1987 = $00001873;
  moDatum_Manoca = $00001874;
  moDatum_Massawa = $00001876;
  moDatum_Merchich = $00001875;
  moDatum_MGI = $000018A8;
  moDatum_Mhast = $00001878;
  moDatum_Midway1961 = $00009938;
  moDatum_Minna = $00001877;
  moDatum_MonteMario = $00001879;
  moDatum_MontserratIsland1958 = $0000994C;
  moDatum_MPoraloko = $0000187A;
  moDatum_Nahrwan1967 = $0000187E;
  moDatum_Naparima1972 = $0000187F;
  moDatum_NZGD1949 = $00001880;
  moDatum_NGN = $000018AE;
  moDatum_NGO1948 = $00001881;
  moDatum_NordDeGuerre = $00001AF6;
  moDatum_NordSahara1959 = $000018A3;
  moDatum_NAD1927 = $0000187B;
  moDatum_NAD1983 = $0000187D;
  moDatum_NADMichigan = $0000187C;
  moDatum_NSWC9Z_2 = $00001884;
  moDatum_NTF = $00001883;
  moDatum_NWL9D = $00001789;
  moDatum_ObservMeteor1939 = $0000994D;
  moDatum_OldHawaiian = $00009939;
  moDatum_Oman = $00009926;
  moDatum_OSGB1936 = $00001885;
  moDatum_OSGB1970SN = $00001886;
  moDatum_OSU1986F = $00001790;
  moDatum_OSU1991A = $00001791;
  moDatum_OSSN1980 = $00001887;
  moDatum_Padang1884 = $00001888;
  moDatum_Palestine1923 = $00001889;
  moDatum_PicoDeLasNieves = $0000994E;
  moDatum_Pitcairn1967 = $0000993A;
  moDatum_Plessis1817 = $0000178B;
  moDatum_PointeNoire = $0000188A;
  moDatum_Point58 = $0000992B;
  moDatum_PortoSanto1936 = $0000994F;
  moDatum_PSAD1956 = $00001868;
  moDatum_PuertoRico = $00009950;
  moDatum_Pulkovo1942 = $0000188C;
  moDatum_Pulkovo1995 = $00001838;
  moDatum_Qatar = $0000188D;
  moDatum_Qatar1948 = $0000188E;
  moDatum_Qornoq = $0000188F;
  moDatum_Reunion = $00009943;
  moDatum_S42Hungary = $00009959;
  moDatum_Samoa1962 = $00009954;
  moDatum_SantoDOS1965 = $0000993B;
  moDatum_SaoBraz = $00009951;
  moDatum_SapperHill1943 = $00001894;
  moDatum_Schwarzeck = $00001895;
  moDatum_Segora = $00001896;
  moDatum_SelvagemGrande1938 = $00009952;
  moDatum_Serindung = $00001897;
  moDatum_SAD1969 = $00001893;
  moDatum_SouthAsiaSingapore = $00009927;
  moDatum_AuthalicSphere = $00001793;
  moDatum_AuthalicSphereArcInfo = $00009860;
  moDatum_Stockholm1938 = $000018A4;
  moDatum_Struve1860 = $0000178C;
  moDatum_Sudan = $00001898;
  moDatum_S_JTSK = $0000995A;
  moDatum_Tananarive1925 = $00001899;
  moDatum_TernIsland1961 = $0000992D;
  moDatum_Timbalai1948 = $0000189A;
  moDatum_TM65 = $0000189B;
  moDatum_TM75 = $0000189C;
  moDatum_Tokyo = $0000189D;
  moDatum_Trinidad1903 = $0000189E;
  moDatum_Tristan1968 = $00009953;
  moDatum_TrucialCoast1948 = $0000189F;
  moDatum_VitiLevu1916 = $0000993C;
  moDatum_Voirol1875 = $000018A0;
  moDatum_VoirolUnifie1960 = $000018A1;
  moDatum_WakeEniwetok1960 = $0000993D;
  moDatum_WakeIsland1952 = $0000993E;
  moDatum_Walbeck = $0000985F;
  moDatum_WarOffice = $0000178D;
  moDatum_WGS1966 = $00009859;
  moDatum_WGS1972 = $000018B2;
  moDatum_WGS1972BE = $000018B4;
  moDatum_WGS1984 = $000018B6;
  moDatum_Yacare = $000018A5;
  moDatum_Yoff = $000018A6;
  moDatum_Zanderij = $000018A7;
  moDatum_Abidjan1987 = $000017FF;
  moDatum_Accra = $00001818;
  moDatum_Anguilla1957 = $000019C8;
  moDatum_BabSouth = $00019F1D;
  moDatum_CH1903 = $00001805;
  moDatum_CH1903Plus = $00001806;
  moDatum_ChosMalal1914 = $00001810;
  moDatum_DatumLisboaBessel = $00019F16;
  moDatum_DatumLisboaHayford = $00019F17;
  moDatum_Dominica1945 = $000019CA;
  moDatum_Estonia1937 = $00019E75;
  moDatum_Estonia1992 = $000017F5;
  moDatum_European1950ED77 = $0000180A;
  moDatum_EuropeanLibyan1979 = $0000180F;
  moDatum_EverestDef1962 = $0000179C;
  moDatum_FD1958 = $000017F4;
  moDatum_Grenada1953 = $000019CB;
  moDatum_Hanoi1972 = $00001803;
  moDatum_Hartebeesthoek1994 = $00001804;
  moDatum_Hermannskogel = $00019E76;
  moDatum_HongKong1980 = $00019F15;
  moDatum_IRENET95 = $0000181D;
  moDatum_Israel = $000017FD;
  moDatum_JGD2000 = $00019F1C;
  moDatum_Kalianpur1937 = $00001800;
  moDatum_Kalianpur1962 = $00001801;
  moDatum_Kalianpur1975 = $00001802;
  moDatum_KoreanDatum1985 = $00001812;
  moDatum_KoreanDatum1995 = $00001816;
  moDatum_Lithuania1994 = $000017EE;
  moDatum_Locodjo1965 = $000017FE;
  moDatum_Madrid1870 = $00001AF7;
  moDatum_Madzansua = $000017F0;
  moDatum_Majuro = $00019F1E;
  moDatum_MountDillon = $0000180D;
  moDatum_Moznet = $000017F2;
  moDatum_NAD1927CGQ77 = $000019D1;
  moDatum_NAD1927Definition1976 = $000019D0;
  moDatum_Naparima1955 = $0000180E;
  moDatum_NorthAmerican1983CSRS98 = $000017FC;
  moDatum_NorthAmerican1983HARN = $00001808;
  moDatum_NZGD2000 = $00019F19;
  moDatum_Observatario = $000017F1;
  moDatum_PampadelCastillo = $00001811;
  moDatum_PDO1993 = $000017F6;
  moDatum_Pohnpei = $00019F1A;
  moDatum_POSGAR = $0000181C;
  moDatum_Rassadiran = $00001809;
  moDatum_REGVEN = $00019F1B;
  moDatum_RGF1993 = $00019F18;
  moDatum_RT1990 = $000017EC;
  moDatum_Samboja = $000017ED;
  moDatum_SierraLeone1924 = $0000181E;
  moDatum_SierraLeone1960 = $00019E77;
  moDatum_SierraLeone1968 = $0000181F;
  moDatum_SIRGAS = $0000181A;
  moDatum_SouthYemen = $00001814;
  moDatum_StGeorgeIsland = $000017FA;
  moDatum_StKitts1955 = $000019CD;
  moDatum_StLawrenceIsland = $000017F8;
  moDatum_StLucia1955 = $000019CE;
  moDatum_StPaulIsland = $000017F9;
  moDatum_StVincent1945 = $000019CF;
  moDatum_SwissTRF1995 = $00001807;
  moDatum_Tete = $000017EF;
  moDatum_YemenNGN1996 = $00001813;
  moDatum_EverestAdj1937 = $0007B89F;

// Constants for enum SpheroidConstants
type
  SpheroidConstants = TOleEnum;
const
  moSpheroid_Airy1830 = $00001B59;
  moSpheroid_ModifiedAiry = $00001B5A;
  moSpheroid_ATS1977 = $00001B81;
  moSpheroid_Australian = $00001B5B;
  moSpheroid_Bessel1841 = $00001B5C;
  moSpheroid_ModifiedBessel = $00001B5D;
  moSpheroid_BesselNamibia = $00001B5E;
  moSpheroid_Clarke1858 = $00001B5F;
  moSpheroid_Clarke1866 = $00001B60;
  moSpheroid_Clarke1866Michigan = $00001B61;
  moSpheroid_Clarke1880 = $00001B7A;
  moSpheroid_Clarke1880Arc = $00001B65;
  moSpheroid_Clarke1880Benoit = $00001B62;
  moSpheroid_Clarke1880IGN = $00001B63;
  moSpheroid_Clarke1880RGS = $00001B64;
  moSpheroid_Clarke1880SGA = $00001B66;
  moSpheroid_Everest1830 = $00001B67;
  moSpheroid_Everest1967 = $00001B68;
  moSpheroid_Everest1975 = $00001B69;
  moSpheroid_ModifiedEverest = $00001B6A;
  moSpheroid_ModifiedEverest1969 = $00009C46;
  moSpheroid_Fischer1960 = $00009C42;
  moSpheroid_Fischer1968 = $00009C43;
  moSpheroid_ModifiedFischer = $00009C44;
  moSpheroid_GEM10C = $00001B77;
  moSpheroid_GRS1967 = $00001B7C;
  moSpheroid_GRS1980 = $00001B6B;
  moSpheroid_Helmert1906 = $00001B6C;
  moSpheroid_Hough1960 = $00009C45;
  moSpheroid_Indonesian = $00001B6D;
  moSpheroid_International1924 = $00001B6E;
  moSpheroid_International1967 = $00001B6F;
  moSpheroid_Krasovsky1940 = $00001B70;
  moSpheroid_NWL10D = $00001B72;
  moSpheroid_NWL9D = $00001B71;
  moSpheroid_OSU1986F = $00001B78;
  moSpheroid_OSU1991A = $00001B79;
  moSpheroid_Plessis1817 = $00001B73;
  moSpheroid_AuthalicSphere = $00001B7B;
  moSpheroid_AuthoalicSphereArcInfo = $00009C48;
  moSpheroid_Struve1860 = $00001B74;
  moSpheroid_Walbeck = $00009C47;
  moSpheroid_WarOffice = $00001B75;
  moSpheroid_WGS1966 = $00009C41;
  moSpheroid_WGS1972 = $0001A212;
  moSpheroid_WGS1984 = $00001B76;
  moSpheroid_EverestDefinition1962 = $00001B84;
  moSpheroid_GRS1967Truncated = $0001A21C;
  moSpheroid_EverestAdjustment1937 = $0007BC87;

// Constants for enum UnitConstants
type
  UnitConstants = TOleEnum;
const
  moUnit_BenoitChain = $00002332;
  moUnit_SearsChain = $00002333;
  moUnit_Fathom = $00002336;
  moUnit_Foot = $0000232A;
  moUnit_ClarkeFoot = $0000232D;
  moUnit_IndianFoot = $0000232E;
  moUnit_AmericanFoot = $0000232C;
  moUnit_SearsFoot = $00002348;
  moUnit_SurveyFoot = $0000232B;
  moUnit_Link = $0000232F;
  moUnit_BenoitLink = $00002330;
  moUnit_SearsLink = $00002331;
  moUnit_Meter = $00002329;
  moUnit_GermanMeter = $00002347;
  moUnit_NauticalMile = $00002346;
  moUnit_IndianYard = $00002335;
  moUnit_SearsYard = $00002334;
  moUnit_Degree = $0000238E;
  moUnit_Gon = $00002392;
  moUnit_Grad = $00002391;
  moUnit_Microradian = $00002395;
  moUnit_ArcMinute = $0000238F;
  moUnit_Radian = $0000238D;
  moUnit_ArcSecond = $00002390;
  moUnit_ChainBenoit1895A = $0000235C;
  moUnit_ChainClarke = $0000234E;
  moUnit_ChainUS = $00002349;
  moUnit_Foot1865 = $0000236E;
  moUnit_FootBenoit1895A = $0000235B;
  moUnit_FootBenoit1895B = $00002365;
  moUnit_FootGoldCoast = $00002386;
  moUnit_FootIndian1937 = $00002379;
  moUnit_FootIndian1962 = $0000237A;
  moUnit_FootIndian1975 = $0000237B;
  moUnit_Kilometer = $0000234C;
  moUnit_LinkBenoit1895A = $0000235D;
  moUnit_LinkUS = $0000234A;
  moUnit_MileUS = $0000234B;
  moUnit_StatuteMile = $00002385;
  moUnit_YardBenoit1895A = $0000235A;
  moUnit_YardBenoit1895B = $00002364;
  moUnit_YardClarke = $0000234D;
  moUnit_YardIndian1937 = $0000237D;
  moUnit_YardIndian1962 = $0000237E;
  moUnit_YardIndian1975 = $0000237F;
  moUnit_Mil6400 = $0000239A;
  moUnit_MinuteCentesimal = $00002398;
  moUnit_SecondCentesimal = $00002399;

// Constants for enum PrimeMeridianConstants
type
  PrimeMeridianConstants = TOleEnum;
const
  moPrimeM_Athens = $000022D0;
  moPrimeM_Bern = $000022CB;
  moPrimeM_Bogota = $000022C8;
  moPrimeM_Brussels = $000022CE;
  moPrimeM_Ferro = $000022CD;
  moPrimeM_Greenwich = $000022C5;
  moPrimeM_Jakarta = $000022CC;
  moPrimeM_Lisbon = $000022C6;
  moPrimeM_Madrid = $000022C9;
  moPrimeM_Paris = $000022C7;
  moPrimeM_Rome = $000022CA;
  moPrimeM_Stockholm = $000022CF;
  moPrimeM_Oslo = $000022D1;

// Constants for enum ParameterTypeConstants
type
  ParameterTypeConstants = TOleEnum;
const
  moParm_Azimuth = $00000C16;
  moParm_CentralMeridian = $00000C10;
  moParm_CentralParallel = $00000C11;
  moParm_Dataset = $000192A6;
  moParm_FalseEasting = $00000C0A;
  moParm_FalseNorthing = $00000C0B;
  moParm_FirstPointLatitude = $00008CF1;
  moParm_SecondPointLatitude = $00008CF2;
  moParm_OriginLatitude = $00000C09;
  moParm_FirstPointLongitude = $00008CF3;
  moParm_SecondPointLongitude = $00008CF4;
  moParm_OriginLongitude = $00000C08;
  moParm_DeltaScale = $00008CED;
  moParm_ScaleFactor = $00000C15;
  moParm_StandardParallel1 = $00000C06;
  moParm_StandardParallel2 = $00000C07;
  moParm_RotationX = $00008CEA;
  moParm_DeltaX = $00008CE7;
  moParm_RotationY = $00008CEB;
  moParm_DeltaY = $00008CE8;
  moParm_RotationZ = $00008CEC;
  moParm_DeltaZ = $00008CE9;
  moParm_Height = $000186A5;
  moParm_LatitudeOfCenter = $000186B6;
  moParm_LongitudeOfCenter = $000186AC;
  moParm_PseudoStandardParallel1 = $000186BB;
  moParm_XYPlaneRotation = $000186C7;
  moParm_XScale = $000186C5;
  moParm_YScale = $000186C6;

// Constants for enum GeographicTransformationConstants
type
  GeographicTransformationConstants = TOleEnum;
const
  moGeoTransformation_Adindan_To_WGS1984_1 = $00001F40;
  moGeoTransformation_Adindan_To_WGS1984_2 = $00001F41;
  moGeoTransformation_Adindan_To_WGS1984_3 = $00001F42;
  moGeoTransformation_Adindan_To_WGS1984_4 = $00001F43;
  moGeoTransformation_Adindan_To_WGS1984_5 = $00001F44;
  moGeoTransformation_Adindan_To_WGS1984_6 = $00001F45;
  moGeoTransformation_Adindan_To_WGS1984_7 = $00001F46;
  moGeoTransformation_Afgooye_To_WGS1984 = $00001F47;
  moGeoTransformation_AGD1966_To_WGS1984 = $00001F48;
  moGeoTransformation_AGD1984_To_WGS1984_1 = $00001F49;
  moGeoTransformation_AGD1984_To_WGS1984_2 = $00001FCB;
  moGeoTransformation_AinElAbd_To_WGS1984_1 = $00001F4A;
  moGeoTransformation_AinElAbd_To_WGS1984_2 = $00001F4B;
  moGeoTransformation_Amersfoort_To_WGS1984 = $00001F4C;
  moGeoTransformation_Arc1950_To_WGS1984_1 = $00001F4D;
  moGeoTransformation_Arc1950_To_WGS1984_2 = $00001F4E;
  moGeoTransformation_Arc1950_To_WGS1984_3 = $00001F4F;
  moGeoTransformation_Arc1950_To_WGS1984_4 = $00001F50;
  moGeoTransformation_Arc1950_To_WGS1984_5 = $00001F51;
  moGeoTransformation_Arc1950_To_WGS1984_6 = $00001F52;
  moGeoTransformation_Arc1950_To_WGS1984_7 = $00001F53;
  moGeoTransformation_Arc1950_To_WGS1984_8 = $00001F54;
  moGeoTransformation_Arc1950_To_WGS1984_9 = $00001F55;
  moGeoTransformation_Arc1960_To_WGS1984 = $00001F56;
  moGeoTransformation_BataviaJakarta_To_Batavia = $00001FEC;
  moGeoTransformation_Batavia_To_WGS1984 = $00001F57;
  moGeoTransformation_Belge1950Brussels_To_Belge1950 = $00001FE8;
  moGeoTransformation_Bermuda1957_To_WGS1984 = $00001F58;
  moGeoTransformation_Bern1898Bern_To_Bern1898 = $00001FE1;
  moGeoTransformation_BogotaBogota_To_Bogota = $00001FE2;
  moGeoTransformation_Bogota_to_WGS1984 = $00001F59;
  moGeoTransformation_BukitRimpah_To_WGS1984 = $00001F5A;
  moGeoTransformation_CampoInchauspe_To_WGS1984 = $00001F5B;
  moGeoTransformation_Cape_To_WGS1984_1 = $00001F5C;
  moGeoTransformation_Cape_To_WGS1984_2 = $00001F5D;
  moGeoTransformation_Carthage_To_WGS1984 = $00001F5E;
  moGeoTransformation_Chua_To_WGS1984 = $00001F5F;
  moGeoTransformation_CorregoAlegre_To_WGS1984 = $00001F60;
  moGeoTransformation_ED1950_To_ED1987_2 = $00001FCA;
  moGeoTransformation_ED1950_To_WGS1984_1 = $00001F61;
  moGeoTransformation_ED1950_To_WGS1984_10 = $00001F6A;
  moGeoTransformation_ED1950_To_WGS1984_11 = $00001F6B;
  moGeoTransformation_ED1950_To_WGS1984_12 = $00001F6C;
  moGeoTransformation_ED1950_To_WGS1984_13 = $00001F6D;
  moGeoTransformation_ED1950_To_WGS1984_14 = $00001FD4;
  moGeoTransformation_ED1950_To_WGS1984_2 = $00001F62;
  moGeoTransformation_ED1950_To_WGS1984_3 = $00001F63;
  moGeoTransformation_ED1950_To_WGS1984_4 = $00001F64;
  moGeoTransformation_ED1950_To_WGS1984_5 = $00001F65;
  moGeoTransformation_ED1950_To_WGS1984_6 = $00001F66;
  moGeoTransformation_ED1950_To_WGS1984_7 = $00001F67;
  moGeoTransformation_ED1950_To_WGS1984_8 = $00001F68;
  moGeoTransformation_ED1950_To_WGS1984_9 = $00001F69;
  moGeoTransformation_ED1987_To_WGS1984_1 = $00001FC9;
  moGeoTransformation_Egypt1907_To_WGS1984 = $00001F70;
  moGeoTransformation_ETRS1989_To_WGS1984 = $00001F71;
  moGeoTransformation_Fahud_To_WGS1984 = $00001FDF;
  moGeoTransformation_GDA1994_To_WGS1984 = $00001F72;
  moGeoTransformation_GGRS1987_To_WGS1984 = $00001FF5;
  moGeoTransformation_GreekAthens_To_Greek = $00001FF3;
  moGeoTransformation_HeratNorth_To_WGS1984 = $00001FD5;
  moGeoTransformation_Hungarian1972_To_ETRS1989_1 = $00001FF6;
  moGeoTransformation_HuTzuShan_To_WGS1984 = $00001F74;
  moGeoTransformation_Indian1954_To_WGS1984 = $00001F75;
  moGeoTransformation_Indian1975_To_WGS1984 = $00001F76;
  moGeoTransformation_Indonesian1974_To_WGS1984 = $00001FD7;
  moGeoTransformation_Kalianpur_To_WGS1984_1 = $00001F77;
  moGeoTransformation_Kalianpur_To_WGS1984_2 = $00001F78;
  moGeoTransformation_Kalianpur_To_WGS1984_3 = $00001FD6;
  moGeoTransformation_Kandawala_To_WGS1984 = $00001F79;
  moGeoTransformation_Kertau_To_WGS1984 = $00001F7A;
  moGeoTransformation_Leigon_To_WGS1984 = $00001F7B;
  moGeoTransformation_Liberia1964_To_WGS1984 = $00001F7C;
  moGeoTransformation_LisbonLisbon_To_Lisbon = $00001FE3;
  moGeoTransformation_Luzon1911_To_WGS1984_1 = $00001F7D;
  moGeoTransformation_Luzon1911_To_WGS1984_2 = $00001F7E;
  moGeoTransformation_Mahe1971_To_WGS1984 = $00001F80;
  moGeoTransformation_MakassarJakarta_To_Makassar = $00001FE4;
  moGeoTransformation_Massawa_To_WGS1984 = $00001F81;
  moGeoTransformation_Merchich_To_WGS1984 = $00001F82;
  moGeoTransformation_Ferro_To_MGI = $00001FE5;
  moGeoTransformation_Minna_To_WGS1984_1 = $00001F83;
  moGeoTransformation_Minna_To_WGS1984_2 = $00001F84;
  moGeoTransformation_MonteMarioRome_To_MonteMario = $00001FE6;
  moGeoTransformation_MonteMario_To_WGS1984 = $00001F85;
  moGeoTransformation_MPoraloko_To_WGS1984 = $00001F7F;
  moGeoTransformation_NAD27_To_NAD83_AK = $0001A5E2;
  moGeoTransformation_NAD27_To_NAD83_CONUS = $0001A5E1;
  moGeoTransformation_NAD27_To_NAD83_PRVI = $0001A5E3;
  moGeoTransformation_NAD1927_To_WGS1984_1 = $00001F86;
  moGeoTransformation_NAD1927_To_WGS1984_10 = $00001F8F;
  moGeoTransformation_NAD1927_To_WGS1984_11 = $00001F90;
  moGeoTransformation_NAD1927_To_WGS1984_12 = $00001F91;
  moGeoTransformation_NAD1927_To_WGS1984_13 = $00001F92;
  moGeoTransformation_NAD1927_To_WGS1984_14 = $00001F93;
  moGeoTransformation_NAD1927_To_WGS1984_15 = $00001F94;
  moGeoTransformation_NAD1927_To_WGS1984_16 = $00001F95;
  moGeoTransformation_NAD1927_To_WGS1984_17 = $00001F96;
  moGeoTransformation_NAD1927_To_WGS1984_18 = $00001F97;
  moGeoTransformation_NAD1927_To_WGS1984_2 = $00001F87;
  moGeoTransformation_NAD1927_To_WGS1984_21 = $00001FD8;
  moGeoTransformation_NAD1927_To_WGS1984_22 = $00001FD9;
  moGeoTransformation_NAD1927_To_WGS1984_3 = $00001F88;
  moGeoTransformation_NAD1927_To_WGS1984_4 = $00001F89;
  moGeoTransformation_NAD1927_To_WGS1984_5 = $00001F8A;
  moGeoTransformation_NAD1927_To_WGS1984_6 = $00001F8B;
  moGeoTransformation_NAD1927_To_WGS1984_7 = $00001F8C;
  moGeoTransformation_NAD1927_To_WGS1984_8 = $00001F8D;
  moGeoTransformation_NAD1927_To_WGS1984_9 = $00001F8E;
  moGeoTransformation_NAD83_To_HARN_AL = $0001A645;
  moGeoTransformation_NAD83_To_HARN_AZ = $0001A646;
  moGeoTransformation_NAD83_To_HARN_CN = $0001A647;
  moGeoTransformation_NAD83_To_HARN_CS = $0001A648;
  moGeoTransformation_NAD83_To_HARN_CO = $0001A649;
  moGeoTransformation_NAD83_To_HARN_EM = $0001A653;
  moGeoTransformation_NAD83_To_HARN_ET = $0001A65D;
  moGeoTransformation_NAD83_To_HARN_FL = $0001A64B;
  moGeoTransformation_NAD83_To_HARN_GA = $0001A64A;
  moGeoTransformation_NAD1983_To_HARNHawaii = $0001A665;
  moGeoTransformation_NAD83_To_HARN_KS = $0001A64C;
  moGeoTransformation_NAD83_To_HARN_KY = $0001A64D;
  moGeoTransformation_NAD83_To_HARN_LA = $0001A64E;
  moGeoTransformation_NAD83_To_HARN_ME = $0001A650;
  moGeoTransformation_NAD83_To_HARN_MD = $0001A64F;
  moGeoTransformation_NAD83_To_HARN_MI = $0001A651;
  moGeoTransformation_NAD83_To_HARN_MS = $0001A652;
  moGeoTransformation_NAD83_To_HARN_NB = $0001A655;
  moGeoTransformation_NAD83_To_HARN_NV = $0001A656;
  moGeoTransformation_NAD83_To_HARN_NE = $0001A657;
  moGeoTransformation_NAD83_To_HARN_NM = $0001A658;
  moGeoTransformation_NAD83_To_HARN_OH = $0001A659;
  moGeoTransformation_NAD83_To_HARN_OK = $0001A65A;
  moGeoTransformation_NAD83_To_HARN_PR = $0001A65B;
  moGeoTransformation_NAD83_To_HARN_TN = $0001A65C;
  moGeoTransformation_NAD83_To_HARN_UT = $0001A660;
  moGeoTransformation_NAD83_To_HARN_VA = $0001A65F;
  moGeoTransformation_NAD83_To_HARN_WO = $0001A661;
  moGeoTransformation_NAD83_To_HARN_WM = $0001A654;
  moGeoTransformation_NAD83_To_HARN_WT = $0001A65E;
  moGeoTransformation_NAD83_To_HARN_WV = $0001A662;
  moGeoTransformation_NAD83_To_HARN_WI = $0001A663;
  moGeoTransformation_NAD83_To_HARN_WY = $0001A664;
  moGeoTransformation_NAD1983_To_WGS1984_1 = $00001F98;
  moGeoTransformation_NAD1983_To_WGS1984_2 = $00001FDA;
  moGeoTransformation_NAD1983_To_WGS1984_3 = $00001FDB;
  moGeoTransformation_Nahrwan1967_To_WGS1984_1 = $00001F99;
  moGeoTransformation_Nahrwan1967_To_WGS1984_2 = $00001F9A;
  moGeoTransformation_Nahrwan1967_To_WGS1984_3 = $00001F9B;
  moGeoTransformation_Naparima1972_To_WGS1984 = $00001F9C;
  moGeoTransformation_NordSahara1959_To_WGS1984 = $00001FDC;
  moGeoTransformation_NTFParis_To_NTF = $00001FE0;
  moGeoTransformation_NTF_To_WGS1984 = $00001F9D;
  moGeoTransformation_NZGD1949_To_WGS1984 = $00001F73;
  moGeoTransformation_OldHawaiian_To_NAD83 = $0001A5E4;
  moGeoTransformation_OSGB1936_To_WGS1984_1 = $00001F9F;
  moGeoTransformation_OSGB1936_To_WGS1984_2 = $00001FA0;
  moGeoTransformation_OSGB1936_To_WGS1984_3 = $00001FA1;
  moGeoTransformation_OSGB1936_To_WGS1984_4 = $00001FA2;
  moGeoTransformation_OSGB1936_To_WGS1984_5 = $00001FA3;
  moGeoTransformation_Padang1884Jakarta_To_Padang1884 = $00001FE7;
  moGeoTransformation_PointeNoire_To_WGS1984 = $00001FA4;
  moGeoTransformation_PSAD1956_To_WGS1984_1 = $00001FA5;
  moGeoTransformation_PSAD1956_To_WGS1984_2 = $00001FA6;
  moGeoTransformation_PSAD1956_To_WGS1984_3 = $00001FA7;
  moGeoTransformation_PSAD1956_To_WGS1984_4 = $00001FA8;
  moGeoTransformation_PSAD1956_To_WGS1984_5 = $00001FA9;
  moGeoTransformation_PSAD1956_To_WGS1984_6 = $00001FAA;
  moGeoTransformation_PSAD1956_To_WGS1984_7 = $00001FAB;
  moGeoTransformation_PSAD1956_To_WGS1984_8 = $00001FAC;
  moGeoTransformation_PSAD1956_To_WGS1984_9 = $00001FAD;
  moGeoTransformation_Pulkovo1942_To_WGS1984 = $00001FDD;
  moGeoTransformation_Qatar_To_WGS1984 = $00001FAE;
  moGeoTransformation_QORNOQ_To_WGS1984 = $00001FAF;
  moGeoTransformation_RT38Stockholm_To_RT38 = $00001FED;
  moGeoTransformation_SAD1969_To_WGS1984_1 = $00001FB0;
  moGeoTransformation_SAD1969_To_WGS1984_10 = $00001FB9;
  moGeoTransformation_SAD1969_To_WGS1984_11 = $00001FBA;
  moGeoTransformation_SAD1969_To_WGS1984_12 = $00001FBB;
  moGeoTransformation_SAD1969_To_WGS1984_13 = $00001FBC;
  moGeoTransformation_SAD1969_To_WGS1984_2 = $00001FB1;
  moGeoTransformation_SAD1969_To_WGS1984_3 = $00001FB2;
  moGeoTransformation_SAD1969_To_WGS1984_4 = $00001FB3;
  moGeoTransformation_SAD1969_To_WGS1984_5 = $00001FB4;
  moGeoTransformation_SAD1969_To_WGS1984_6 = $00001FB5;
  moGeoTransformation_SAD1969_To_WGS1984_7 = $00001FB6;
  moGeoTransformation_SAD1969_To_WGS1984_8 = $00001FB7;
  moGeoTransformation_SAD1969_To_WGS1984_9 = $00001FB8;
  moGeoTransformation_SapperHill1943_To_WGS1984 = $00001FBD;
  moGeoTransformation_Schwarzeck_To_WGS1984 = $00001FBE;
  moGeoTransformation_Schwarzeck_To_WGS1984_2 = $00001FF4;
  moGeoTransformation_StGeorge_To_NAD83 = $0001A5E5;
  moGeoTransformation_StLawrence_To_NAD83 = $0001A5E6;
  moGeoTransformation_StPaul_To_NAD83 = $0001A5E7;
  moGeoTransformation_Tananarive1925Paris_To_Tananarive1925 = $00001FE9;
  moGeoTransformation_Tananarive1925_To_WGS1984 = $00001FBF;
  moGeoTransformation_Timbalai1948_To_WGS1984 = $00001FC0;
  moGeoTransformation_TM65_To_WGS1984 = $00001FC1;
  moGeoTransformation_Tokyo_To_WGS1984_1 = $00001FC2;
  moGeoTransformation_Tokyo_To_WGS1984_2 = $00001FC3;
  moGeoTransformation_Tokyo_To_WGS1984_3 = $00001FC4;
  moGeoTransformation_Tokyo_To_WGS1984_4 = $00001FC5;
  moGeoTransformation_Voirol1975Paris_To_Voirol1875 = $00001FEA;
  moGeoTransformation_VoirolUnifie1960Paris_To_VoirolUnifie1960 = $00001FEB;
  moGeoTransformation_VoirolUnifie1960_To_WGS1984 = $00001FDE;
  moGeoTransformation_WGS1972_To_WGS1984_1 = $00001FCC;
  moGeoTransformation_WGS1972_To_WGS1984_2 = $00001FCD;
  moGeoTransformation_Yacare_To_WGS1984 = $00001FC6;
  moGeoTransformation_Zanderij_To_WGS1984 = $00001FC7;
  moGeoTransformation_Abidjan1987_To_WGS1984 = $000020DE;
  moGeoTransformation_Accra_To_WGS1972BE = $00000622;
  moGeoTransformation_Accra_To_WGS1984 = $00000621;
  moGeoTransformation_AGD1966_To_GDA1994 = $00001FFD;
  moGeoTransformation_AGD1966_To_GDA1994_2 = $000020CB;
  moGeoTransformation_AGD1966_To_GDA1994_3 = $000020CD;
  moGeoTransformation_AGD1966_To_GDA1994_4 = $000020CF;
  moGeoTransformation_AGD1966_To_GDA1994NTv2NewSouthWalesAndVictoria = $0001A7A7;
  moGeoTransformation_AGD1966_To_GDA1994_8 = $0000063A;
  moGeoTransformation_AGD1966_To_GDA1994_9 = $0000063B;
  moGeoTransformation_AGD1966_To_GDA1994NTv2NorthernTerritory = $00002104;
  moGeoTransformation_AGD1966_To_GDA1994NTv2Tasmania = $00002103;
  moGeoTransformation_AGD1966_To_GDA1994NTv2Victoria = $000020D7;
  moGeoTransformation_AGD1984_To_GDA1994 = $00001FFF;
  moGeoTransformation_AGD1984_To_GDA1994_2 = $00002001;
  moGeoTransformation_AGD1984_To_GDA1994_3 = $00000617;
  moGeoTransformation_AGD1984_To_GDA1994NTv2Queensland = $0001A7A5;
  moGeoTransformation_AGD1984_To_GDA1994NTv2WesternAustralia = $0001A7A6;
  moGeoTransformation_AmericanSamoa1962_To_HARNAmericanSamoaEast = $0000062B;
  moGeoTransformation_AmericanSamoa1962_To_HARNAmericanSamoaWest = $0000062A;
  moGeoTransformation_AmericanSamoa1962_To_WGS1984 = $00000629;
  moGeoTransformation_Amersfoort_To_ETRF1989 = $00000623;
  moGeoTransformation_Antigua1943_To_WGS1984 = $000020B5;
  moGeoTransformation_Aratu_To_WGS1984_1 = $0000060D;
  moGeoTransformation_Aratu_To_WGS1984_2 = $0000060E;
  moGeoTransformation_Aratu_To_WGS1984_3 = $0000060F;
  moGeoTransformation_Aratu_To_WGS1984_4 = $00000610;
  moGeoTransformation_Arc1960_To_WGS1984_2 = $0000200F;
  moGeoTransformation_Arc1960_To_WGS1984_3 = $00002010;
  moGeoTransformation_ATS1977_To_NAD1983CSRS982NTv2PrinceEdwardIs = $0000063F;
  moGeoTransformation_ATS1977_To_NAD1983CSRS98NTv2Maritimes = $0001A70E;
  moGeoTransformation_ATS1977_To_NAD1983CSRS98NTv2NewBrunswick = $000005C0;
  moGeoTransformation_ATS1977_To_NAD1983CSRS98NTv2NovaScotia = $0001A70D;
  moGeoTransformation_BabSouth_To_NAD1983 = $0001A666;
  moGeoTransformation_BataviaJakarta_To_WGS1984 = $00001FF2;
  moGeoTransformation_Belge1972_To_WGS1984_1 = $00000649;
  moGeoTransformation_Belge1972_To_WGS1984_2 = $0000064A;
  moGeoTransformation_Bern1898Bern_To_CH1903 = $000005EF;
  moGeoTransformation_Bissau_To_WGS1984 = $0000060B;
  moGeoTransformation_BogotaBogota_To_WGS1984 = $00001FEE;
  moGeoTransformation_Bogota_To_WGS1984_2 = $0000063D;
  moGeoTransformation_Camacupa_To_WGS1972BE_1 = $00002039;
  moGeoTransformation_Camacupa_To_WGS1984_1 = $0000203A;
  moGeoTransformation_Camacupa_To_WGS1984_10 = $00002043;
  moGeoTransformation_Camacupa_To_WGS1984_2 = $0000203B;
  moGeoTransformation_Camacupa_To_WGS1984_3 = $0000203C;
  moGeoTransformation_Camacupa_To_WGS1984_4 = $0000203D;
  moGeoTransformation_Camacupa_To_WGS1984_5 = $0000203E;
  moGeoTransformation_Camacupa_To_WGS1984_6 = $0000203F;
  moGeoTransformation_Camacupa_To_WGS1984_7 = $00002040;
  moGeoTransformation_Camacupa_To_WGS1984_8 = $00002041;
  moGeoTransformation_Camacupa_To_WGS1984_9 = $00002042;
  moGeoTransformation_CampoInchauspe_To_WGS1984_2 = $000005F7;
  moGeoTransformation_Cape_To_Hartebeesthoek94 = $00002101;
  moGeoTransformation_Carthage_To_WGS1984_2 = $00000602;
  moGeoTransformation_CH1903Plus_To_CHTRF1995 = $00002108;
  moGeoTransformation_CH1903_To_WGS1984_1 = $00002107;
  moGeoTransformation_CH1903_To_WGS1984_2 = $0000210A;
  moGeoTransformation_ChosMalal1914_To_CampoInchauspe = $000005F8;
  moGeoTransformation_ChosMalal1914_To_WGS1984 = $00002145;
  moGeoTransformation_CHTRF1995_To_WGS1984 = $0000210B;
  moGeoTransformation_Conakry1905_To_WGS1984 = $000005ED;
  moGeoTransformation_Dabola_To_WGS1984 = $000005EE;
  moGeoTransformation_DeirezZor_To_WGS1972BE = $00000630;
  moGeoTransformation_DeirezZor_To_WGS1984_2 = $00000631;
  moGeoTransformation_DeirezZor_To_WGS1984_3 = $00000632;
  moGeoTransformation_DeirezZor_To_WGS1984_4 = $00000633;
  moGeoTransformation_DHDN_To_ETRF1989 = $00002029;
  moGeoTransformation_Dominica1945_To_WGS1984 = $000020B6;
  moGeoTransformation_ED1950ED77_To_WGS1984 = $0000212C;
  moGeoTransformation_ED1950_To_ETRF1989_1 = $00000634;
  moGeoTransformation_ED1950_To_WGS1984_17 = $00001FF8;
  moGeoTransformation_ED1950_To_WGS1984_18 = $0000202D;
  moGeoTransformation_ED1950_To_WGS1984_19 = $000020B4;
  moGeoTransformation_ED1950_To_WGS1984_23 = $0000064C;
  moGeoTransformation_ED1950_To_WGS1984_24 = $0000064D;
  moGeoTransformation_Egypt1907_To_WGS1972 = $00000609;
  moGeoTransformation_Egypt1907_To_WGS1984_3 = $0000060A;
  moGeoTransformation_Estonia1992_To_ETRF1989 = $00002048;
  moGeoTransformation_Estonia1992_To_WGS1984 = $0000204A;
  moGeoTransformation_Fahud_To_WGS1984_2 = $000020B2;
  moGeoTransformation_FD1958_To_WGS1984 = $0000212B;
  moGeoTransformation_Grenada1953_To_WGS1984 = $000020B7;
  moGeoTransformation_Guam1963_To_HARNGuam = $0001A66F;
  moGeoTransformation_Guam1963_To_HARNMarianasRota = $0001A669;
  moGeoTransformation_Guam1963_To_HARNMarianasSaipan = $0001A66A;
  moGeoTransformation_Guam1963_To_HARNMarianasTinianAguijan = $0001A66B;
  moGeoTransformation_Hanoi1972_To_WGS1984 = $00000608;
  moGeoTransformation_Hartebeesthoek94_To_WGS1984 = $00002102;
  moGeoTransformation_HitoXVIII1963_To_WGS1984 = $000005F9;
  moGeoTransformation_Indian1960_To_WGS1972BE = $00000605;
  moGeoTransformation_Indian1960_To_WGS1984_1 = $00002154;
  moGeoTransformation_Indian1960_To_WGS1984_2 = $00000606;
  moGeoTransformation_Indian1960_To_WGS1984_3 = $00000607;
  moGeoTransformation_Indian1975_To_WGS1984_2 = $00002022;
  moGeoTransformation_Indian1975_To_WGS1984_3 = $00000601;
  moGeoTransformation_IRENET95_To_ETRF1989 = $0000064B;
  moGeoTransformation_Kalianpur1937_To_WGS1984_2 = $000005FD;
  moGeoTransformation_Korean1995_To_WGS1984_1 = $00000616;
  moGeoTransformation_LaCanoa_To_WGS1984 = $0000212F;
  moGeoTransformation_LKS1994_To_WGS1984 = $00002006;
  moGeoTransformation_Locodjo1965_To_WGS1984 = $000020DD;
  moGeoTransformation_Majuro_To_NAD1983 = $0001A667;
  moGeoTransformation_Malongo1987_To_WGS1984_1 = $00002046;
  moGeoTransformation_Malongo1987_To_WGS1984_2 = $00000615;
  moGeoTransformation_Malongo_To_Mhast_1 = $00002044;
  moGeoTransformation_Manoca_To_WGS1984_1 = $00002038;
  moGeoTransformation_MGIFerro_To_WGS1984 = $00002047;
  moGeoTransformation_MGI_To_WGS1984 = $00002024;
  moGeoTransformation_MGI_To_WGS1984_2 = $000020DF;
  moGeoTransformation_MGI_To_WGS1984_3 = $00000652;
  moGeoTransformation_Mhast_To_WGS1984_1 = $00002045;
  moGeoTransformation_Minna_To_WGS1984_3 = $000005FE;
  moGeoTransformation_MonteMarioRome_To_WGS1984 = $00001FEF;
  moGeoTransformation_Montserrat1958_To_WGS1984 = $000020B8;
  moGeoTransformation_Moznet_To_WGS1984 = $00002020;
  moGeoTransformation_Mporaloko_To_WGS1984_2 = $000005FC;
  moGeoTransformation_NAD1927CGQ77_To_NAD1983_2 = $00000627;
  moGeoTransformation_NAD1927CGQ77_To_NAD1983CSRS98 = $00000628;
  moGeoTransformation_NAD1927DEF1976_To_NAD1983NTv2Ontario = $000020D5;
  moGeoTransformation_NAD1927_To_NAD1983_6 = $00000625;
  moGeoTransformation_NAD1927_To_NAD1983CSRS98_1 = $00000626;
  moGeoTransformation_NAD1927_To_NAD1983CSRS98_2 = $00000640;
  moGeoTransformation_NAD1927_To_NAD1983NTv2Canada = $00002034;
  moGeoTransformation_NAD1927_To_WGS1984_30 = $000005FA;
  moGeoTransformation_NAD1983CSRS98_To_WGS1984 = $000020E1;
  moGeoTransformation_NAD1983HARN_To_WGS1984 = $0000062C;
  moGeoTransformation_NAD1983_To_HARNArkansas = $0001A66C;
  moGeoTransformation_NAD1983_To_HARNIllinois = $00002167;
  moGeoTransformation_NAD1983_To_HARNIndiana = $00002136;
  moGeoTransformation_NAD1983_To_HARNIowa = $0001A670;
  moGeoTransformation_NAD1983_To_HARNMinnesota = $0001A66D;
  moGeoTransformation_NAD1983_To_HARNMissouri = $0001A66E;
  moGeoTransformation_NAD1983_To_HARNNewJersey = $00002168;
  moGeoTransformation_NAD1983_To_HARNNewYork = $000020F5;
  moGeoTransformation_NAD1983_To_HARNNorthDakota = $000020F6;
  moGeoTransformation_NAD1983_To_HARNSouthDakota = $000020F9;
  moGeoTransformation_NAD1983_To_NAD1983CSRS98_1 = $00000624;
  moGeoTransformation_NAD1983_To_NAD1983CSRS98_2 = $00000641;
  moGeoTransformation_NAD1983_To_NAD1983CSRS98_3 = $00000642;
  moGeoTransformation_NAD1983_To_WGS1984_4 = $00002028;
  moGeoTransformation_NAD1983_To_WGS1984_5 = $0000212E;
  moGeoTransformation_Nahrwan1967_To_WGS1984_4 = $000005FB;
  moGeoTransformation_Nahrwan1967_To_WGS1984_5 = $00000600;
  moGeoTransformation_Naparima1955_To_WGS1984_2 = $00000613;
  moGeoTransformation_Naparima1955_To_WGS1984_3 = $00000614;
  moGeoTransformation_Naparima1972_To_WGS1984_2 = $00002014;
  moGeoTransformation_Naparima1972_To_WGS1984_3 = $00002025;
  moGeoTransformation_NewZealand1949_To_NZGD2000NTv2 = $0001A7AC;
  moGeoTransformation_NGO1948Oslo_To_NGO1948 = $000020DB;
  moGeoTransformation_NGO1948_To_WGS1984 = $0001A6A9;
  moGeoTransformation_NordSahara1959_To_WGS1972BE = $00000618;
  moGeoTransformation_NordSahara1959_To_WGS1984_3 = $00002172;
  moGeoTransformation_NTFParis_To_ED1950 = $00001FFA;
  moGeoTransformation_NTFParis_To_WGS1972 = $00001FFC;
  moGeoTransformation_NTFParis_To_WGS1984 = $00001F9E;
  moGeoTransformation_NTF_To_ED1950 = $00001FF9;
  moGeoTransformation_NTF_To_WGS1972 = $00001FFB;
  moGeoTransformation_NZGD1949_To_WGS1984_2 = $0000061C;
  moGeoTransformation_NZGD2000_To_WGS1984_1 = $0000061D;
  moGeoTransformation_OldHawaiian_To_WGS1984_1 = $0001A5E8;
  moGeoTransformation_OldHawaiian_To_WGS1984_2 = $0001A5E9;
  moGeoTransformation_OldHawaiian_To_WGS1984_3 = $0001A5EA;
  moGeoTransformation_OldHawaiian_To_WGS1984_4 = $0001A5EB;
  moGeoTransformation_OldHawaiian_To_WGS1984_5 = $0001A5EC;
  moGeoTransformation_OSGB1936_To_ED1950UKOOA = $00002037;
  moGeoTransformation_OSGB1936_To_WGS1984Petroleum = $00002036;
  moGeoTransformation_PDO1993_To_WGS1972 = $00000650;
  moGeoTransformation_PDO1993_To_WGS1984 = $000020B3;
  moGeoTransformation_PDO1993_To_WGS1984_3 = $00000651;
  moGeoTransformation_POSGAR_To_WGS1984_1 = $0000063E;
  moGeoTransformation_PSAD1956_To_WGS1984_10 = $0000062E;
  moGeoTransformation_PSAD1956_To_WGS1984_11 = $0000062F;
  moGeoTransformation_Pulkovo1942_To_Estonia1992 = $00002049;
  moGeoTransformation_Pulkovo1942_To_ETRF1989 = $0000202B;
  moGeoTransformation_Pulkovo1942_To_LKS1994 = $00002005;
  moGeoTransformation_Pulkovo1942_To_WGS1984_10 = $00002021;
  moGeoTransformation_Pulkovo1942_To_WGS1984_12 = $0000204B;
  moGeoTransformation_Pulkovo1942_To_WGS1984_3 = $00002008;
  moGeoTransformation_Pulkovo1942_To_WGS1984_4 = $00002009;
  moGeoTransformation_Pulkovo1942_To_WGS1984_5 = $0000200A;
  moGeoTransformation_Pulkovo1942_To_WGS1984_6 = $0000200B;
  moGeoTransformation_Pulkovo1942_To_WGS1984_7 = $0000200C;
  moGeoTransformation_Pulkovo1942_To_WGS1984_8 = $0000200D;
  moGeoTransformation_Pulkovo1942_To_WGS1984_9 = $0000200E;
  moGeoTransformation_Qatar1974_To_WGS1984_2 = $0000061A;
  moGeoTransformation_Qatar1974_To_WGS1984_3 = $0000061B;
  moGeoTransformation_Rassadiran_To_WGS1984 = $0000212A;
  moGeoTransformation_RGF1993_To_ETRF1989_1 = $00000637;
  moGeoTransformation_RT90_To_WGS1984 = $00002003;
  moGeoTransformation_SAD1969_To_WGS1984_14 = $0000060C;
  moGeoTransformation_Samboja_To_WGS1984 = $00002004;
  moGeoTransformation_Segora_To_WGS1984 = $00002011;
  moGeoTransformation_SierraLeone1968_To_WGS1984 = $0000064E;
  moGeoTransformation_SIRGAS_To_WGS1984_1 = $0000062D;
  moGeoTransformation_SouthYemen_To_YemenNGN1996 = $00000603;
  moGeoTransformation_StKitts1955_To_WGS1984 = $000020B9;
  moGeoTransformation_StLucia1955_To_WGS1984 = $00002056;
  moGeoTransformation_Tananarive1925Paris_To_WGS1984 = $00001FF0;
  moGeoTransformation_Tete_To_Moznet_1 = $00002016;
  moGeoTransformation_Tete_To_Moznet_2 = $00002018;
  moGeoTransformation_Tete_To_Moznet_3 = $0000201A;
  moGeoTransformation_Tete_To_Moznet_4 = $0000201C;
  moGeoTransformation_Tete_To_Moznet_5 = $0000201E;
  moGeoTransformation_Timbalai1948_To_WGS1984_2 = $00000638;
  moGeoTransformation_Timbalai1948_To_WGS1984_3 = $0000064F;
  moGeoTransformation_Tokyo_To_WGS1984_5 = $00002023;
  moGeoTransformation_Trinidad1903_To_WGS1984 = $00002015;
  moGeoTransformation_Voirol1875Paris_To_WGS1984 = $00002013;
  moGeoTransformation_Voirol1875_To_WGS1984 = $00002012;
  moGeoTransformation_VoirolUnifie1960Paris_To_WGS1984 = $00001FF1;
  moGeoTransformation_YemenNGN1996_To_WGS1984 = $00000604;
  moGeoTransformation_Jamaica1969_To_WGS1984_1 = $0007C0C5;
  moGeoTransformation_Datum73_To_WGS1984_1 = $0007C0CE;
  moGeoTransformation_ED1950_To_WGS1984PT3 = $0007C0CF;
  moGeoTransformation_GraciosaBaseSW1948_To_WGS1984_1 = $0007C0D0;
  moGeoTransformation_DatumLisboaBessel_To_WGS1984_1 = $0007C0D1;
  moGeoTransformation_DatumLisboaHayford_To_WGS1984_1 = $0007C0D2;
  moGeoTransformation_PortoSanto1936_To_WGS1984_1 = $0007C0D3;
  moGeoTransformation_ObservMeteorologico1939_To_WGS1984_1 = $0007C0D4;
  moGeoTransformation_SaoBraz_To_WGS1984_1 = $0007C0D5;
  moGeoTransformation_Datum73_To_WGS1984_2 = $0007C0D8;
  moGeoTransformation_ED1950_To_WGS1984PT7 = $0007C0D9;
  moGeoTransformation_GraciosaBaseSW1948_To_WGS1984_2 = $0007C0DA;
  moGeoTransformation_DatumLisboaBessel_To_WGS1984_2 = $0007C0DB;
  moGeoTransformation_DatumLisboaHayford_To_WGS1984_2 = $0007C0DC;
  moGeoTransformation_PortoSanto1936_To_WGS1984_2 = $0007C0DD;
  moGeoTransformation_SaoBraz_To_WGS1984_2 = $0007C0DF;
  moGeoTransformation_NTF_To_RGF1993_1 = $0007C0E2;
  moGeoTransformation_NewZealand1949_To_NZGD2000_3PAR = $0007C0E3;
  moGeoTransformation_NewZealand1949_To_NZGD2000_7PAR = $0007C0E4;
  moGeoTransformation_Pohnpei_To_NAD1983 = $0007C0E5;
  moGeoTransformation_NTFParis_To_RGF1993_1 = $0007C0C6;
  moGeoTransformation_Tokyo_To_JGD2000_1 = $0007C0C7;
  moGeoTransformation_REGVEN_To_SIRGAS_1 = $0007C0C8;
  moGeoTransformation_Hjorsey1955_To_WGS1984 = $0007C0C9;
  moGeoTransformation_Tokyo_To_WGS19842001 = $0007C0CA;

// Constants for enum MethodConstants
type
  MethodConstants = TOleEnum;
const
  moMethod_BursaWolf = $0000A66F;
  moMethod_CoordinateFrame = $00002587;
  moMethod_Geocentric = $00002583;
  moMethod_HARN = $0001AC2D;
  moMethod_LongitudeRotation = $00002581;
  moMethod_Molodensky = $00002584;
  moMethod_MolodenskyAbridged = $00002585;
  moMethod_NADCON = $0000258D;
  moMethod_PositionVector = $00002586;
  moMethod_NTv2 = $0000258F;

// Constants for enum DirectionConstants
type
  DirectionConstants = TOleEnum;
const
  moDirection_Forward = $00000001;
  moDirection_Reverse = $00000000;

// Constants for enum EnhancedGeocodingErrorConstants
type
  EnhancedGeocodingErrorConstants = TOleEnum;
const
  mgErrorNone = $00000000;
  mgErrorUnknown = $00000001;
  mgErrorInternal = $00000002;
  mgErrorMatchRulesUnspecified = $00000003;
  mgErrorIntersectionMatchRulesUnspecified = $00000004;
  mgErrorStandardizerUnspecified = $00000005;
  mgErrorStreetTableUnspecified = $00000006;
  mgErrorStandardizationRulesUnspecified = $00000007;
  mgErrorStandardizerInvalid = $00000008;
  mgErrorCannotOpenMatchRules = $00000009;
  mgErrorNoMatchVariables = $0000000A;
  mgErrorOutOfMemory = $0000000B;
  mgErrorMatchRulesSyntax = $0000000C;
  mgErrorMatchRulesWarningsTriggered = $0000000D;
  mgErrorNoCandidates = $0000000E;
  mgErrorTooManyHandlesAllocated = $0000000F;
  mgErrorNoAddressStandardized = $00000010;
  mgErrorCannotAccessDatabase = $00000011;
  mgErrorCannotOpenStandardizationRules = $00000012;
  mgErrorStandardizationRulesProcessing = $00000013;
  mgErrorCannotReadStandardizationRules = $00000014;
  mgErrorCannotAccessAddressFile = $00000015;
  mgErrorCannotWriteOutputDatabase = $00000016;
  mgErrorMatchVariableKeyFieldUnspecified = $00000017;
  mgErrorStreetTableIndexMissing = $00000018;
  mgErrorRecordCountMismatch = $00000019;
  mgErrorNoIndicesSpecified = $0000001A;
  mgErrorTooManyIndicesSpecified = $0000001B;
  mgErrorCorruptMetadataInformation = $0000001C;
  mgErrorMetadataTooLong = $0000001D;
  mgErrorKeyFieldNotFoundInDatabase = $0000001E;
  mgErrorQueryTooComplex = $0000001F;
  mgErrorNoQueries = $00000020;
  mgErrorOutOfDiskSpace = $00000021;

// Constants for enum LinkGroupConstants
type
  LinkGroupConstants = TOleEnum;
const
  mgLinkPrimary = $00000000;
  mgLinkSecondary = $00000001;

// Constants for enum IndexStatusConstants
type
  IndexStatusConstants = TOleEnum;
const
  mgIndexNonexistant = $00000000;
  mgIndexInvalid = $00000001;
  mgIndexUnreadable = $00000002;
  mgIndexExists = $00000003;

// Constants for enum IndexTypeConstants
type
  IndexTypeConstants = TOleEnum;
const
  mgIndexTypeSoundex = $00000000;
  mgIndexTypeNormal = $00000001;

// Constants for enum GeocodeSuccessConstants
type
  GeocodeSuccessConstants = TOleEnum;
const
  mgGeocodeFailed = $00000000;
  mgGeocodeSuccessSingleBest = $00000001;
  mgGeocodeSuccessMultipleBest = $00000002;
  mgGeocodeSuccessPartial = $00000003;

// Constants for enum ZValueCalcConstants
type
  ZValueCalcConstants = TOleEnum;
const
  moMaxZValue = $00000000;
  moMinZValue = $00000001;
  moMeanZValue = $00000002;

// Constants for enum ChartTypeConstants
type
  ChartTypeConstants = TOleEnum;
const
  moPie = $00000000;
  moBar = $00000001;
  moCustom = $00000002;

// Constants for enum DrawFlags
type
  DrawFlags = TOleEnum;
const
  moNoBackground = $00000001;
  moClipToExtent = $00000002;

// Constants for enum AppearanceConstants
type
  AppearanceConstants = TOleEnum;
const
  moFlat = $00000000;
  mo3D = $00000001;

// Constants for enum DragStateConstants
type
  DragStateConstants = TOleEnum;
const
  moDragEnter = $00000000;
  moDragLeave = $00000001;
  moDragOver = $00000002;

// Constants for enum MousePointerConstants
type
  MousePointerConstants = TOleEnum;
const
  moDefault = $00000000;
  moArrow = $00000001;
  moCross = $00000002;
  moIBeam = $00000003;
  moIconPointer = $00000004;
  moSizePointer = $00000005;
  moSizeNESW = $00000006;
  moSizeNS = $00000007;
  moSizeNWSE = $00000008;
  moSizeWE = $00000009;
  moUpArrow = $0000000A;
  moHourglass = $0000000B;
  moNoDrop = $0000000C;
  moArrowHourglass = $0000000D;
  moArrowQuestion = $0000000E;
  moSizeAll = $0000000F;
  moZoom = $00000032;
  moZoomIn = $00000033;
  moZoomOut = $00000034;
  moPan = $00000035;
  moPanning = $00000036;
  moIdentify = $00000037;
  moLabel = $00000038;
  moHotLink = $00000039;
  moPencil = $0000003A;

// Constants for enum CancelActionConstants
type
  CancelActionConstants = TOleEnum;
const
  moCancelNone = $00000000;
  moCancelMap = $00000001;
  moCancelLayer = $00000002;

// Constants for enum WindowModeConstants
type
  WindowModeConstants = TOleEnum;
const
  moWindowed = $00000000;
  moOpaque = $00000001;
  moTransparent = $00000002;

// Constants for enum ExportMapConstants
type
  ExportMapConstants = TOleEnum;
const
  moExportEMF = $00000000;
  moExportBMP = $00000001;
  moExportClipboardEMF = $00000002;
  moExportClipboardBMP = $00000003;

// Constants for enum ExportSymbologyScaleConstants
type
  ExportSymbologyScaleConstants = TOleEnum;
const
  moNoSymbologyScaled = $00000000;
  moLineSymbolsNotScaled = $00000001;
  moAllSymbologyScaled = $00000002;

// Constants for enum ExportDepthConstants
type
  ExportDepthConstants = TOleEnum;
const
  moExport8BitDepth = $00000000;
  moExportSourceDepth = $00000001;
  moExport24BitDepth = $00000002;

// Constants for enum ExportPaletteConstants
type
  ExportPaletteConstants = TOleEnum;
const
  moDefaultPalette = $00000000;
  moHalfTonePalette = $00000001;
  moWebSafePalette = $00000002;
  moGraysWithSystemColorsPalette = $00000003;

// Constants for enum GeometryEnvironmentConstants
type
  GeometryEnvironmentConstants = TOleEnum;
const
  moGeometryUseZForDistanceAndSearching = $00000000;
  moGeometryIgnoreZ = $00000001;

// Constants for enum DisplayUnitConstants
type
  DisplayUnitConstants = TOleEnum;
const
  moUseContainer = $00000000;
  moUsePixels = $00000001;

// Constants for enum TrackingLayerDrawConstants
type
  TrackingLayerDrawConstants = TOleEnum;
const
  moDrawDirect = $00000000;
  moDrawSmooth = $00000001;

// Constants for enum FillStyleConstants
type
  FillStyleConstants = TOleEnum;
const
  moSolidFill = $00000000;
  moTransparentFill = $00000001;
  moHorizontalFill = $00000002;
  moVerticalFill = $00000003;
  moUpwardDiagonalFill = $00000004;
  moDownwardDiagonalFill = $00000005;
  moCrossFill = $00000006;
  moDiagonalCrossFill = $00000007;
  moLightGrayFill = $00000008;
  moGrayFill = $00000009;
  moDarkGrayFill = $0000000A;

// Constants for enum MarkerStyleConstants
type
  MarkerStyleConstants = TOleEnum;
const
  moCircleMarker = $00000000;
  moSquareMarker = $00000001;
  moTriangleMarker = $00000002;
  moCrossMarker = $00000003;
  moTrueTypeMarker = $00000004;

// Constants for enum LineStyleConstants
type
  LineStyleConstants = TOleEnum;
const
  moSolidLine = $00000000;
  moDashLine = $00000001;
  moDotLine = $00000002;
  moDashDotLine = $00000003;
  moDashDotDotLine = $00000004;

// Constants for enum ColorConstants
type
  ColorConstants = TOleEnum;
const
  moBlack = $00000000;
  moRed = $000000FF;
  moGreen = $0000FF00;
  moBlue = $00FF0000;
  moMagenta = $00FF00FF;
  moCyan = $00FFFF00;
  moWhite = $00FFFFFF;
  moLightGray = $00C0C0C0;
  moDarkGray = $00404040;
  moGray = $00808080;
  moPaleYellow = $00D0FFFF;
  moLightYellow = $0080FFFF;
  moYellow = $0000FFFF;
  moLimeGreen = $00C0DCC0;
  moTeal = $00808040;
  moDarkGreen = $00008000;
  moMaroon = $00000080;
  moPurple = $00800080;
  moOrange = $000080FF;
  moKhaki = $006B97A7;
  moOlive = $00008080;
  moBrown = $00404080;
  moNavy = $00804000;

// Constants for enum ParameterIndexConstants
type
  ParameterIndexConstants = TOleEnum;
const
  moParm_iFalseEasting = $00000000;
  moParm_iFalseNorthing = $00000001;
  moParm_iCentralMeridian = $00000002;
  moParm_iCentralParallel = $00000006;
  moParm_iFirstParallel = $00000003;
  moParm_iFirstLongitude = $00000008;
  moParm_iSecondParallel = $00000004;
  moParm_iSecondLongitude = $00000009;
  moParm_iScale = $00000005;
  moParm_iAzimuth = $00000007;

type

// *********************************************************************//
// Forward declaration of types defined in TypeLibrary                    
// *********************************************************************//
  IMoGeoDatasets = dispinterface;
  IMoDataConnection = dispinterface;
  IMoGeoDataset = dispinterface;
  IMoTableDesc = dispinterface;
  IMoStrings = dispinterface;
  IMoLayers = dispinterface;
  IMoMapLayer = dispinterface;
  IMoRectangle = dispinterface;
  IMoPoint = dispinterface;
  IMoPoints = dispinterface;
  IMoRecordset = dispinterface;
  IMoFields = dispinterface;
  IMoField = dispinterface;
  IMoStatistics = dispinterface;
  IMoSymbol = dispinterface;
  IMoTable = dispinterface;
  IMoPolygon = dispinterface;
  IMoParts = dispinterface;
  IMoLine = dispinterface;
  IMoValueMapRenderer = dispinterface;
  IMoClassBreaksRenderer = dispinterface;
  IMoDotDensityRenderer = dispinterface;
  IMoLabelRenderer = dispinterface;
  IMoTextSymbol = dispinterface;
  IMoTrackingLayer = dispinterface;
  IMoGeoEvent = dispinterface;
  IMoEllipse = dispinterface;
  IMoImageLayer = dispinterface;
  IMoAddressLocation = dispinterface;
  IMoPlaceLocator = dispinterface;
  IMoProjection = dispinterface;
  IMoProjCoordSys = dispinterface;
  IMoGeoCoordSys = dispinterface;
  IMoDatum = dispinterface;
  IMoSpheroid = dispinterface;
  IMoUnit = dispinterface;
  IMoPrimeMeridian = dispinterface;
  IMoGeoTransformation = dispinterface;
  IMoStandardizer = dispinterface;
  IMoGeocoder = dispinterface;
  IMoZRenderer = dispinterface;
  IMoGroupRenderer = dispinterface;
  IMoChartRenderer = dispinterface;
  IMoLabelPlacer = dispinterface;
  IMoEventRenderer = dispinterface;
  _DMap = dispinterface;
  _DMapEvents = dispinterface;

// *********************************************************************//
// Declaration of CoClasses defined in Type Library                       
// (NOTE: Here we map each CoClass to its Default Interface)              
// *********************************************************************//
  TableDesc = IMoTableDesc;
  Rectangle = IMoRectangle;
  Point = IMoPoint;
  Points = IMoPoints;
  Symbol = IMoSymbol;
  Strings = IMoStrings;
  Table = IMoTable;
  TextSymbol = IMoTextSymbol;
  Standardizer = IMoStandardizer;
  GeoDataset = IMoGeoDataset;
  AddressLocation = IMoAddressLocation;
  DataConnection = IMoDataConnection;
  Ellipse = IMoEllipse;
  Line = IMoLine;
  Polygon = IMoPolygon;
  Map = _DMap;
  GeoDatasets = IMoGeoDatasets;
  Layers = IMoLayers;
  MapLayer = IMoMapLayer;
  Recordset = IMoRecordset;
  Fields = IMoFields;
  Field = IMoField;
  ValueMapRenderer = IMoValueMapRenderer;
  Statistics = IMoStatistics;
  ClassBreaksRenderer = IMoClassBreaksRenderer;
  DotDensityRenderer = IMoDotDensityRenderer;
  LabelRenderer = IMoLabelRenderer;
  TrackingLayer = IMoTrackingLayer;
  GeoEvent = IMoGeoEvent;
  ImageLayer = IMoImageLayer;
  PlaceLocator = IMoPlaceLocator;
  Parts = IMoParts;
  Projection = IMoProjection;
  ProjCoordSys = IMoProjCoordSys;
  GeoCoordSys = IMoGeoCoordSys;
  Unit_ = IMoUnit;
  Datum = IMoDatum;
  Spheroid = IMoSpheroid;
  PrimeMeridian = IMoPrimeMeridian;
  GeoTransformation = IMoGeoTransformation;
  Geocoder = IMoGeocoder;
  ZRenderer = IMoZRenderer;
  GroupRenderer = IMoGroupRenderer;
  ChartRenderer = IMoChartRenderer;
  LabelPlacer = IMoLabelPlacer;
  EventRenderer = IMoEventRenderer;


// *********************************************************************//
// Declaration of structures, unions and aliases.                         
// *********************************************************************//
  PSingle1 = ^Single; {*}
  PWordBool1 = ^WordBool; {*}


// *********************************************************************//
// DispIntf:  IMoGeoDatasets
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A64C-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoGeoDatasets = dispinterface
    ['{9BD6A64C-CE75-11D1-AF04-204C4F4F5020}']
    function _Item(Item: OleVariant): IDispatch; dispid 0;
    function Item(Item: OleVariant): IDispatch; dispid 2;
    property Count: Smallint dispid 1;
    property _NewEnum: IUnknown dispid -4;
  end;

// *********************************************************************//
// DispIntf:  IMoDataConnection
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A64E-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoDataConnection = dispinterface
    ['{9BD6A64E-CE75-11D1-AF04-204C4F4F5020}']
    property Version: WideString dispid 20;
    function ReturnVersions: IMoStrings; dispid 19;
    function FindArcInfoCoordinateSystem(const Name: WideString): IDispatch; dispid 18;
    procedure ClearConnectError; dispid 17;
    function FindCoordinateSystem(const Name: WideString): IDispatch; dispid 16;
    function DeleteGeoDataset(const Name: WideString): WordBool; dispid 15;
    function AddGeoDataset(const Name: WideString; shapeType: ShapeTypeConstants; 
                           const TableDesc: TableDesc; HasZ: OleVariant; HasMeasure: OleVariant): IMoGeoDataset; dispid 14;
    function FindGeoDataset(const Name: WideString): IMoGeoDataset; dispid 13;
    procedure Disconnect; dispid 12;
    function Connect: WordBool; dispid 11;
    property ExtendedErrorString: WideString dispid 10;
    property ExtendedError: Integer dispid 9;
    property ConnectError: ConnectionErrorConstants dispid 8;
    property Connection: Integer dispid 7;
    property GeoDatasets: IDispatch dispid 6;
    property Password: WideString dispid 5;
    property User: WideString dispid 4;
    property Server: WideString dispid 3;
    property Database: WideString dispid 2;
    property Connected: WordBool dispid 1;
    property _Database: WideString dispid 0;
  end;

// *********************************************************************//
// DispIntf:  IMoGeoDataset
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A650-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoGeoDataset = dispinterface
    ['{9BD6A650-CE75-11D1-AF04-204C4F4F5020}']
    property Name: WideString dispid 1;
    property AllowSharing: WordBool dispid 4;
    property HasZ: WordBool dispid 2;
    property HasMeasure: WordBool dispid 3;
  end;

// *********************************************************************//
// DispIntf:  IMoTableDesc
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A68A-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoTableDesc = dispinterface
    ['{9BD6A68A-CE75-11D1-AF04-204C4F4F5020}']
    property FieldName[index: Smallint]: WideString dispid 3;
    property FieldLength[index: Smallint]: Smallint dispid 6;
    property FieldType[index: Smallint]: FieldTypeConstants dispid 4;
    property FieldPrecision[index: Smallint]: Smallint dispid 5;
    property FieldScale[index: Smallint]: Smallint dispid 7;
    property CodePage: CodePageConstants dispid 2;
    property FieldCount: Smallint dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoStrings
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A672-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoStrings = dispinterface
    ['{9BD6A672-CE75-11D1-AF04-204C4F4F5020}']
    procedure Clear; dispid 5;
    function Add(const string_: WideString): WordBool; dispid 4;
    procedure PopulateWithParameters(Projection: ProjectionConstants); dispid 15;
    procedure PopulateWithMunros; dispid 16;
    procedure PopulateWithUnits; dispid 7;
    function Find(const itemName: WideString; startPos: OleVariant): Integer; dispid 6;
    function Item(Item: OleVariant): WideString; dispid 3;
    procedure PopulateWithSpheroids; dispid 8;
    procedure PopulateWithMethods; dispid 17;
    procedure PopulateWithProjections; dispid 11;
    procedure PopulateWithDatums; dispid 9;
    procedure PopulateWithProjectedCoordSys; dispid 12;
    procedure PopulateWithGeographicCoordSys; dispid 13;
    procedure Sort(sortOrder: StringsSortOrderConstants); dispid 18;
    function _Item(Item: OleVariant): WideString; dispid 0;
    procedure PopulateWithMeridians; dispid 10;
    procedure PopulateWithGeoTransformations; dispid 14;
    property PopulateUsingNewConstants: WordBool dispid 20;
    property Count2: Integer dispid 19;
    property Unique: WordBool dispid 2;
    property Count: Smallint dispid 1;
    property _NewEnum: IUnknown dispid -4;
  end;

// *********************************************************************//
// DispIntf:  IMoLayers
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A652-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoLayers = dispinterface
    ['{9BD6A652-CE75-11D1-AF04-204C4F4F5020}']
    function Item(index: OleVariant): IDispatch; dispid 2;
    procedure MoveToBottom(index: Smallint); dispid 8;
    procedure Remove(index: Smallint); dispid 4;
    function Add(const layer: IDispatch): WordBool; dispid 3;
    procedure Clear; dispid 5;
    procedure MoveTo(fromIndex: Smallint; toIndex: Smallint); dispid 6;
    function _Item(Item: OleVariant): IDispatch; dispid 0;
    procedure MoveToTop(index: Smallint); dispid 7;
    property Count: Smallint dispid 1;
    property _NewEnum: IUnknown dispid -4;
  end;

// *********************************************************************//
// DispIntf:  IMoMapLayer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A655-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoMapLayer = dispinterface
    ['{9BD6A655-CE75-11D1-AF04-204C4F4F5020}']
    function BuildIndex(force: WordBool): WordBool; dispid 27;
    function SearchShape(const shape: IDispatch; searchMethod: SearchMethodConstants; 
                         const expression: WideString): IMoRecordset; dispid 26;
    function SearchByDistance(const shape: IDispatch; distance: Double; const expression: WideString): IMoRecordset; dispid 25;
    procedure RemoveRelates; dispid 24;
    function AddRelate(const toField: WideString; const Table: Table; const fromField: WideString; 
                       CheckFields: OleVariant): WordBool; dispid 23;
    function SearchExpression(const expression: WideString): IMoRecordset; dispid 22;
    property Visible: WordBool dispid 3;
    property Valid: WordBool dispid 12;
    property Extent: Rectangle dispid 4;
    property Records: IMoRecordset dispid 5;
    property Name: WideString dispid 1;
    property Indexed: WordBool dispid 13;
    property Renderer: IDispatch dispid 10;
    property Tag: WideString dispid 2;
    property AreaOfInterest: Rectangle dispid 9;
    property CoordinateSystem: OleVariant dispid 14;
    property shapeType: ShapeTypeConstants dispid 11;
    property DensificationTolerance: Double dispid 16;
    property FilterOrder: FilterOrderConstants dispid 21;
    property GeographicTransformation: OleVariant dispid 15;
    property FilterShape: OleVariant dispid 17;
    property FilterOperator: SearchMethodConstants dispid 18;
    property FilterTables: Strings dispid 28;
    property GeoDataset: IMoGeoDataset dispid 7;
    property LayerType: LayerTypeConstants dispid 8;
    property Symbol: Symbol dispid 6;
    property FilterExpression: WideString dispid 19;
    property FilterFields: Strings dispid 20;
  end;

// *********************************************************************//
// DispIntf:  IMoRectangle
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A657-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoRectangle = dispinterface
    ['{9BD6A657-CE75-11D1-AF04-204C4F4F5020}']
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 19;
    property Extent: Rectangle readonly dispid 24;
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 23;
    procedure ScaleRectangle(scaleFactor: Double); dispid 12;
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 21;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 20;
    function Union(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 22;
    function GetCrossings(const shape: IDispatch): Points; dispid 18;
    function DistanceTo(const shape: IDispatch): Double; dispid 17;
    function Intersects(const Rectangle: Rectangle): WordBool; dispid 16;
    function IsPointIn(const Point: Point): WordBool; dispid 15;
    procedure Inset(deltaX: Double; deltaY: Double); dispid 14;
    procedure Offset(deltaX: Double; deltaY: Double); dispid 13;
    property shapeType: ShapeTypeConstants dispid 11;
    property Depth: Double dispid 10;
    property Ceiling: Double dispid 9;
    property Floor: Double dispid 8;
    property Center: Point dispid 7;
    property Height: Double dispid 6;
    property Width: Double dispid 5;
    property Bottom: Double dispid 4;
    property Top: Double dispid 3;
    property Right: Double dispid 2;
    property Left: Double dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoPoint
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A65B-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoPoint = dispinterface
    ['{9BD6A65B-CE75-11D1-AF04-204C4F4F5020}']
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 13;
    procedure Set_(X: Double; Y: Double; Z: Double; Measure: Double); dispid 14;
    function GetCrossings(const shape: IDispatch): Points; dispid 8;
    function DistanceToSegment(const point1: Point; const point2: Point): Double; dispid 7;
    function DistanceTo(const shape: IDispatch): Double; dispid 6;
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 10;
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 11;
    function Union(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 9;
    procedure Get(out X: Double; out Y: Double; out Z: Double; out Measure: Double); dispid 15;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 12;
    property shapeType: ShapeTypeConstants dispid 5;
    property Measure: Double dispid 4;
    property Z: Double dispid 3;
    property X: Double dispid 2;
    property Y: Double dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoPoints
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A665-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoPoints = dispinterface
    ['{9BD6A665-CE75-11D1-AF04-204C4F4F5020}']
    procedure Set_(index: Integer; const Point: Point); dispid 6;
    procedure Add(const Point: Point); dispid 5;
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 17;
    procedure Offset(deltaX: Double; deltaY: Double); dispid 10;
    procedure Insert(index: Integer; const Point: Point); dispid 8;
    procedure Remove(index: Integer); dispid 7;
    function Item(Item: OleVariant): Point; dispid 4;
    procedure Reverse; dispid 9;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 16;
    function Union(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 13;
    function DistanceTo(const shape: IDispatch): Double; dispid 11;
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 14;
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 15;
    function _Item(Item: OleVariant): Point; dispid 0;
    procedure SetPoints(var xArray: {??PSafeArray}OleVariant; var yArray: {??PSafeArray}OleVariant; 
                        var zArray: {??PSafeArray}OleVariant; 
                        var measureArray: {??PSafeArray}OleVariant); dispid 18;
    function GetCrossings(const shape: IDispatch): Points; dispid 12;
    procedure GetPoints(var xArray: {??PSafeArray}OleVariant; var yArray: {??PSafeArray}OleVariant; 
                        var zArray: {??PSafeArray}OleVariant; 
                        var measureArray: {??PSafeArray}OleVariant); dispid 19;
    property Extent: Rectangle dispid 3;
    property shapeType: ShapeTypeConstants dispid 2;
    property Count: Integer dispid 1;
    property _NewEnum: IUnknown dispid -4;
  end;

// *********************************************************************//
// DispIntf:  IMoRecordset
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A659-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoRecordset = dispinterface
    ['{9BD6A659-CE75-11D1-AF04-204C4F4F5020}']
    procedure StopEditing; dispid 18;
    procedure StartTransaction; dispid 20;
    procedure CommitTransaction; dispid 22;
    function Export(const OutName: WideString; OutCoordSys: OleVariant): IMoGeoDataset; dispid 19;
    procedure MoveNext; dispid 10;
    procedure MoveFirst; dispid 9;
    procedure MovePrevious; dispid 11;
    procedure Edit; dispid 14;
    procedure Update; dispid 16;
    procedure AddNew; dispid 15;
    function CalculateStatistics(const FieldName: WideString): IMoStatistics; dispid 12;
    procedure RollbackTransaction; dispid 21;
    procedure CancelUpdate; dispid 17;
    procedure Delete; dispid 13;
    property SupportsTransactions: WordBool dispid 8;
    property AutoFlush: WordBool dispid 7;
    property TableDesc: TableDesc dispid 6;
    property Updatable: WordBool dispid 5;
    property EditMode: EditModeConstants dispid 4;
    property Count: Integer dispid 3;
    property EOF: WordBool dispid 2;
    property IMoFields: IMoFields dispid 0;
    property Fields: IMoFields dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoFields
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A65D-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoFields = dispinterface
    ['{9BD6A65D-CE75-11D1-AF04-204C4F4F5020}']
    function _Item(Item: OleVariant): IMoField; dispid 0;
    function Item(Item: OleVariant): IMoField; dispid 2;
    property Count: Smallint dispid 1;
    property _NewEnum: IUnknown dispid -4;
  end;

// *********************************************************************//
// DispIntf:  IMoField
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A65F-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoField = dispinterface
    ['{9BD6A65F-CE75-11D1-AF04-204C4F4F5020}']
    property Name: WideString dispid 1;
    property type_: FieldTypeConstants dispid 2;
    property ValueAsString: WideString dispid 3;
    property Value: OleVariant dispid 4;
    property _Value: OleVariant dispid 0;
  end;

// *********************************************************************//
// DispIntf:  IMoStatistics
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A674-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoStatistics = dispinterface
    ['{9BD6A674-CE75-11D1-AF04-204C4F4F5020}']
    property Max: Double dispid 1;
    property Min: Double dispid 2;
    property Mean: Double dispid 3;
    property StdDev: Double dispid 4;
    property Sum: Double dispid 5;
    property Count: Integer dispid 6;
  end;

// *********************************************************************//
// DispIntf:  IMoSymbol
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A66E-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoSymbol = dispinterface
    ['{9BD6A66E-CE75-11D1-AF04-204C4F4F5020}']
    property Size: Smallint dispid 6;
    property Style: Smallint dispid 7;
    property Color: OLE_COLOR dispid 1;
    property CharacterIndex: Smallint dispid 2;
    property Font: IFontDisp dispid 8;
    property OutlineColor: OLE_COLOR dispid 3;
    property SymbolType: SymbolTypeConstants dispid 9;
    property Outline: WordBool dispid 4;
    property CenterOnAscent: WordBool dispid 5;
    property Custom: IUnknown dispid 10;
    property Rotation: Double dispid 11;
  end;

// *********************************************************************//
// DispIntf:  IMoTable
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A685-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoTable = dispinterface
    ['{9BD6A685-CE75-11D1-AF04-204C4F4F5020}']
    property MaxCachedRelateRecords: Integer dispid 10;
    property Command: IDispatch dispid 9;
    function SearchExpression(const expression: WideString): IMoRecordset; dispid 7;
    property Version: WideString dispid 8;
    property Server: WideString dispid 5;
    property Records: IMoRecordset dispid 6;
    property Name: WideString dispid 4;
    property Database: WideString dispid 3;
    property Password: WideString dispid 2;
    property User: WideString dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoPolygon
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A661-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoPolygon = dispinterface
    ['{9BD6A661-CE75-11D1-AF04-204C4F4F5020}']
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 12;
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 15;
    function IsPointIn(const Point: Point): WordBool; dispid 7;
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 13;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 14;
    function Union(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 11;
    function GetCrossings(const shape: IDispatch): Points; dispid 10;
    function DistanceTo(const shape: IDispatch): Double; dispid 9;
    procedure Offset(deltaX: Double; deltaY: Double); dispid 8;
    property shapeType: ShapeTypeConstants dispid 6;
    property _Parts: IDispatch dispid 0;
    property Perimeter: Double dispid 5;
    property Area: Double dispid 4;
    property Centroid: Point dispid 3;
    property Parts: IMoParts dispid 2;
    property Extent: Rectangle dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoParts
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A696-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoParts = dispinterface
    ['{9BD6A696-CE75-11D1-AF04-204C4F4F5020}']
    procedure Remove(index: Smallint); dispid 4;
    procedure Add(const Points: IDispatch); dispid 2;
    procedure Set_(index: Smallint; const Points: IDispatch); dispid 3;
    procedure Insert(index: Smallint; const Points: IDispatch); dispid 5;
    function Item(Item: OleVariant): IDispatch; dispid 6;
    function _Item(Item: OleVariant): IDispatch; dispid 0;
    property Count: Smallint dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoLine
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A663-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoLine = dispinterface
    ['{9BD6A663-CE75-11D1-AF04-204C4F4F5020}']
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 18;
    function DistanceTo(const shape: IDispatch): Double; dispid 7;
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 19;
    function Union(const anotherLine: IDispatch; Extent: OleVariant): IDispatch; dispid 17;
    function ReturnLineEvent(start: Double; end_: Double): IMoLine; dispid 10;
    function ReturnPointEvents(Measure: Double): IMoPoints; dispid 9;
    procedure Offset(deltaX: Double; deltaY: Double); dispid 6;
    function GetCrossings(const shape: IDispatch): IMoPoints; dispid 8;
    procedure SetMeasures(start: Double; end_: Double); dispid 13;
    function ReturnMeasure(const location: IMoPoint): Double; dispid 11;
    procedure SetMeasuresAsLength; dispid 14;
    procedure OffsetMeasures(Offset: Double); dispid 15;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 20;
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 21;
    procedure UpdateMeasures; dispid 12;
    procedure MultiplyMeasures(factor: Double); dispid 16;
    property IsFullyMeasured: WordBool dispid 5;
    property shapeType: ShapeTypeConstants dispid 4;
    property _Parts: IDispatch dispid 0;
    property Length: Double dispid 3;
    property Parts: IMoParts dispid 2;
    property Extent: Rectangle dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoValueMapRenderer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A670-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoValueMapRenderer = dispinterface
    ['{9BD6A670-CE75-11D1-AF04-204C4F4F5020}']
    property Symbol[index: Smallint]: Symbol readonly dispid 10;
    property Value[index: Smallint]: WideString dispid 9;
    property UseDefault: WordBool dispid 2;
    property Field: WideString dispid 1;
    property ValueCount: Smallint dispid 7;
    property Tag: WideString dispid 3;
    property ScalingField: WideString dispid 5;
    property RotationField: WideString dispid 4;
    property DefaultSymbol: Symbol dispid 6;
    property SymbolType: SymbolTypeConstants dispid 8;
  end;

// *********************************************************************//
// DispIntf:  IMoClassBreaksRenderer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A676-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoClassBreaksRenderer = dispinterface
    ['{9BD6A676-CE75-11D1-AF04-204C4F4F5020}']
    procedure SizeSymbols(startSize: Smallint; endSize: Smallint); dispid 6;
    procedure RampColors(startColor: OLE_COLOR; endColor: OLE_COLOR); dispid 5;
    property Break[index: Smallint]: Double dispid 7;
    property Symbol[index: Smallint]: Symbol dispid 8;
    property DrawBackground: WordBool dispid 9;
    property SymbolType: SymbolTypeConstants dispid 4;
    property Tag: WideString dispid 2;
    property BreakCount: Smallint dispid 3;
    property Field: WideString dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoDotDensityRenderer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A678-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoDotDensityRenderer = dispinterface
    ['{9BD6A678-CE75-11D1-AF04-204C4F4F5020}']
    property Field: WideString dispid 1;
    property DotValue: Double dispid 2;
    property DotSize: Smallint dispid 6;
    property DotColor: OLE_COLOR dispid 3;
    property DrawBackground: WordBool dispid 4;
    property Tag: WideString dispid 5;
  end;

// *********************************************************************//
// DispIntf:  IMoLabelRenderer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A67A-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoLabelRenderer = dispinterface
    ['{9BD6A67A-CE75-11D1-AF04-204C4F4F5020}']
    property Symbol[index: Smallint]: TextSymbol readonly dispid 17;
    property Field: WideString dispid 1;
    property DrawBackground: WordBool dispid 2;
    property SymbolField: WideString dispid 3;
    property LevelField: WideString dispid 4;
    property MinLevel: Smallint dispid 5;
    property MaxLevel: Smallint dispid 6;
    property RotationField: WideString dispid 7;
    property HeightField: WideString dispid 8;
    property AllowDuplicates: WordBool dispid 10;
    property XOffsetField: WideString dispid 13;
    property Flip: WordBool dispid 12;
    property Tag: WideString dispid 11;
    property YOffsetField: WideString dispid 14;
    property SplinedText: WordBool dispid 9;
    property SymbolCount: Smallint dispid 16;
    property FittedField: WideString dispid 15;
  end;

// *********************************************************************//
// DispIntf:  IMoTextSymbol
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A687-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoTextSymbol = dispinterface
    ['{9BD6A687-CE75-11D1-AF04-204C4F4F5020}']
    property HorizontalAlignment: AlignmentConstants dispid 5;
    property VerticalAlignment: AlignmentConstants dispid 6;
    property Color: OLE_COLOR dispid 1;
    property Font: IFontDisp dispid 7;
    property Rotation: Double dispid 2;
    property Height: Double dispid 3;
    property Fitted: WordBool dispid 4;
  end;

// *********************************************************************//
// DispIntf:  IMoTrackingLayer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A67D-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoTrackingLayer = dispinterface
    ['{9BD6A67D-CE75-11D1-AF04-204C4F4F5020}']
    procedure Refresh(erase: WordBool; rect: OleVariant); dispid 7;
    property Symbol[index: Integer]: Symbol readonly dispid 9;
    property Event[index: Integer]: IMoGeoEvent readonly dispid 10;
    function FindEvent(const Tag: WideString): IMoGeoEvent; dispid 8;
    function AddEvent(const shape: IDispatch; SymbolIndex: Integer): IMoGeoEvent; dispid 5;
    procedure RemoveEvent(index: Integer); dispid 4;
    procedure ClearEvents; dispid 6;
    property Visible: WordBool dispid 1;
    property SymbolCount: Integer dispid 3;
    property EventCount: Integer dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoGeoEvent
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A67F-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoGeoEvent = dispinterface
    ['{9BD6A67F-CE75-11D1-AF04-204C4F4F5020}']
    procedure Move(X: Double; Y: Double); dispid 8;
    procedure MoveTo(X: Double; Y: Double); dispid 7;
    property Tag: WideString dispid 1;
    property Y: Double dispid 4;
    property X: Double dispid 3;
    property index: Integer dispid 5;
    property shape: IDispatch dispid 6;
    property SymbolIndex: Integer dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoEllipse
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A681-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoEllipse = dispinterface
    ['{9BD6A681-CE75-11D1-AF04-204C4F4F5020}']
    function Buffer(distance: Double; Extent: OleVariant): IDispatch; dispid 17;
    function Intersect(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 16;
    function Difference(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 15;
    function Xor_(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 14;
    function Union(const anotherShape: IDispatch; Extent: OleVariant): IDispatch; dispid 13;
    procedure Inset(deltaX: Double; deltaY: Double); dispid 12;
    procedure Offset(deltaX: Double; deltaY: Double); dispid 11;
    function IsPointIn(const Point: Point): WordBool; dispid 10;
    property Height: Double dispid 8;
    property Width: Double dispid 7;
    property Center: Point dispid 6;
    property Bottom: Double dispid 5;
    property Left: Double dispid 2;
    property Right: Double dispid 3;
    property shapeType: ShapeTypeConstants dispid 9;
    property Extent: Rectangle dispid 1;
    property Top: Double dispid 4;
  end;

// *********************************************************************//
// DispIntf:  IMoImageLayer
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A683-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoImageLayer = dispinterface
    ['{9BD6A683-CE75-11D1-AF04-204C4F4F5020}']
    property ClipExtent: IMoRectangle dispid 14;
    property Rows: Integer readonly dispid 13;
    property Columns: Integer readonly dispid 12;
    procedure OpenCatalog(const pTable: IMoTable; const ImageDirPath: WideString; 
                          OpenOptions: ImageCatalogConstants); dispid 11;
    property File_: WideString dispid 6;
    property Visible: WordBool dispid 1;
    property Valid: WordBool dispid 8;
    property LayerType: LayerTypeConstants dispid 7;
    property Tag: WideString dispid 3;
    property TransparentColor: OLE_COLOR dispid 10;
    property Transparent: WordBool dispid 9;
    property UpdateWhileDrawing: WordBool dispid 4;
    property Name: WideString dispid 2;
    property Extent: Rectangle dispid 5;
  end;

// *********************************************************************//
// DispIntf:  IMoAddressLocation
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A68E-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoAddressLocation = dispinterface
    ['{9BD6A68E-CE75-11D1-AF04-204C4F4F5020}']
    property location: Point dispid 1;
    property _Location: Point dispid 0;
    property MatchScore: Smallint dispid 2;
    property StreetSide: StreetSideConstants dispid 3;
  end;

// *********************************************************************//
// DispIntf:  IMoPlaceLocator
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A694-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  IMoPlaceLocator = dispinterface
    ['{9BD6A694-CE75-11D1-AF04-204C4F4F5020}']
    function FindAllPlaceNames(const prefix: WideString): Strings; dispid 6;
    function BuildIndex(const Field: WideString; force: WordBool): WordBool; dispid 3;
    function Locate(const placeName: WideString): Points; dispid 4;
    function FindApproximateMatches(const placeName: WideString): Strings; dispid 5;
    property PlaceNameTable: IMoGeoDataset dispid 2;
    property Indexed: WordBool dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoProjection
// Flags:     (4096) Dispatchable
// GUID:      {43FD9771-D8FF-11D1-AF14-006097DA3688}
// *********************************************************************//
  IMoProjection = dispinterface
    ['{43FD9771-D8FF-11D1-AF14-006097DA3688}']
    property type_: ProjectionConstants dispid 1;
    property Name: WideString dispid 2;
    property Custom: IUnknown dispid 3;
    property IsCustom: WordBool dispid 4;
  end;

// *********************************************************************//
// DispIntf:  IMoProjCoordSys
// Flags:     (4096) Dispatchable
// GUID:      {F9C06023-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoProjCoordSys = dispinterface
    ['{F9C06023-DA8D-11D1-AF16-006097DA3688}']
    function ReturnDescription: WideString; dispid 11;
    procedure Export(const OutName: WideString); dispid 10;
    function Transform(const FromCoordSys: IDispatch; const FromShape: IDispatch; 
                       DensificationTolerance: OleVariant; GeoTransformation: OleVariant): IDispatch; dispid 9;
    function GetParameter(ParameterType: ParameterTypeConstants): Double; dispid 8;
    procedure SetParameter(ParameterType: ParameterTypeConstants; ParameterValue: Double); dispid 7;
    property GeoCoordSys: IMoGeoCoordSys dispid 3;
    property Projection: IMoProjection dispid 5;
    property Unit_: IMoUnit dispid 4;
    property IsProjected: WordBool dispid 6;
    property Name: WideString dispid 2;
    property type_: ProjectedCoordSysConstants dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoGeoCoordSys
// Flags:     (4096) Dispatchable
// GUID:      {F9C06026-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoGeoCoordSys = dispinterface
    ['{F9C06026-DA8D-11D1-AF16-006097DA3688}']
    function ReturnDescription: WideString; dispid 9;
    procedure Export(const OutName: WideString); dispid 8;
    function Transform(const FromCoordSys: IDispatch; const FromShape: IDispatch; 
                       DensificationTolerance: OleVariant; GeoTransformation: OleVariant): IDispatch; dispid 7;
    property type_: GeographicCoordSysConstants dispid 1;
    property Unit_: IMoUnit dispid 4;
    property Datum: IMoDatum dispid 3;
    property IsProjected: WordBool dispid 6;
    property PrimeMeridian: IMoPrimeMeridian dispid 5;
    property Name: WideString dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoDatum
// Flags:     (4096) Dispatchable
// GUID:      {F9C0602C-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoDatum = dispinterface
    ['{F9C0602C-DA8D-11D1-AF16-006097DA3688}']
    property type_: DatumConstants dispid 1;
    property Name: WideString dispid 2;
    property Spheroid: IMoSpheroid dispid 3;
  end;

// *********************************************************************//
// DispIntf:  IMoSpheroid
// Flags:     (4096) Dispatchable
// GUID:      {F9C0602F-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoSpheroid = dispinterface
    ['{F9C0602F-DA8D-11D1-AF16-006097DA3688}']
    property type_: SpheroidConstants dispid 1;
    property Axis: Double dispid 2;
    property Flattening: Double dispid 3;
    property Name: WideString dispid 4;
  end;

// *********************************************************************//
// DispIntf:  IMoUnit
// Flags:     (4096) Dispatchable
// GUID:      {F9C06029-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoUnit = dispinterface
    ['{F9C06029-DA8D-11D1-AF16-006097DA3688}']
    property type_: UnitConstants dispid 1;
    property Name: WideString dispid 2;
    property factor: Double dispid 3;
  end;

// *********************************************************************//
// DispIntf:  IMoPrimeMeridian
// Flags:     (4096) Dispatchable
// GUID:      {F9C06032-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoPrimeMeridian = dispinterface
    ['{F9C06032-DA8D-11D1-AF16-006097DA3688}']
    property type_: PrimeMeridianConstants dispid 1;
    property Name: WideString dispid 2;
    property Longitude: Double dispid 3;
  end;

// *********************************************************************//
// DispIntf:  IMoGeoTransformation
// Flags:     (4096) Dispatchable
// GUID:      {F9C06035-DA8D-11D1-AF16-006097DA3688}
// *********************************************************************//
  IMoGeoTransformation = dispinterface
    ['{F9C06035-DA8D-11D1-AF16-006097DA3688}']
    function GetParameter(ParameterType: ParameterTypeConstants): Double; dispid 11;
    procedure SetParameter(ParameterType: ParameterTypeConstants; ParameterValue: Double); dispid 10;
    property FromGeoCoordSys: IMoGeoCoordSys dispid 3;
    property type_: GeographicTransformationConstants dispid 1;
    property ToGeoCoordSys: IMoGeoCoordSys dispid 4;
    property Method: MethodConstants dispid 5;
    property Name: WideString dispid 2;
    property SecondName: WideString dispid 8;
    property SecondType: GeographicTransformationConstants dispid 7;
    property Direction: DirectionConstants dispid 6;
    property SecondDirection: DirectionConstants dispid 9;
  end;

// *********************************************************************//
// DispIntf:  IMoStandardizer
// Flags:     (4096) Dispatchable
// GUID:      {2637C6F3-0472-11D2-909C-00600826393D}
// *********************************************************************//
  IMoStandardizer = dispinterface
    ['{2637C6F3-0472-11D2-909C-00600826393D}']
    property FieldValue[const FieldName: WideString]: WideString dispid 8;
    property FieldName[index: Smallint]: WideString readonly dispid 7;
    function StandardizeAddress(const address: WideString): WordBool; dispid 6;
    property LastError: EnhancedGeocodingErrorConstants dispid 4;
    property StandardizingRules: WideString dispid 3;
    property Valid: WordBool dispid 1;
    property IntersectionStandardizingRules: WideString dispid 5;
    property FieldCount: Smallint dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoGeocoder
// Flags:     (4096) Dispatchable
// GUID:      {2637C6F5-0472-11D2-909C-00600826393D}
// *********************************************************************//
  IMoGeocoder = dispinterface
    ['{2637C6F5-0472-11D2-909C-00600826393D}']
    function GenerateCandidates: GeocodeSuccessConstants; dispid 22;
    function ListIndices: Strings; dispid 17;
    function AddIndex(const FieldName: WideString; const secondaryFieldName: WideString; 
                      indexType: IndexTypeConstants): WordBool; dispid 20;
    function BatchMatch(const addressTable: Table; const addressField: WideString; 
                        const DataConnection: DataConnection; const outputTableName: WideString; 
                        const outputFields: Strings): Integer; dispid 23;
    function IndexStatus: IndexStatusConstants; dispid 18;
    property Candidate[index: Smallint]: WideString readonly dispid 24;
    property BatchMatchVariableField[const variable: WideString]: WideString dispid 29;
    function EraseIndices: WordBool; dispid 19;
    function BuildIndices(force: WordBool): WordBool; dispid 21;
    property MatchVariableIntersectionLink[const variable: WideString; linkGroup: LinkGroupConstants]: WideString dispid 28;
    property IntersectionMatchVariable[index: Smallint]: WideString readonly dispid 27;
    function LocateCandidate(index: Smallint): AddressLocation; dispid 16;
    property MatchVariableField[const variable: WideString]: WideString dispid 26;
    property MatchVariable[index: Smallint]: WideString readonly dispid 25;
    property SearchQueries: Strings dispid 15;
    property MatchWhenAmbiguous: WordBool dispid 14;
    property SpellingSensitivity: Single dispid 13;
    property MinimumMatchScore: Smallint dispid 12;
    property IntersectionMatchVariableCount: Smallint dispid 11;
    property IntersectionMatchRules: WideString dispid 10;
    property LastError: EnhancedGeocodingErrorConstants dispid 9;
    property StreetTable: GeoDataset dispid 8;
    property Standardizer: Standardizer dispid 7;
    property MatchVariableCount: Smallint dispid 6;
    property MatchRules: WideString dispid 5;
    property Offset: Double dispid 4;
    property SqueezeFactor: Double dispid 3;
    property CandidateCount: Smallint dispid 2;
    property Valid: WordBool dispid 1;
  end;

// *********************************************************************//
// DispIntf:  IMoZRenderer
// Flags:     (4096) Dispatchable
// GUID:      {0C8392E4-3CC4-11D2-8AF6-0060082D41FB}
// *********************************************************************//
  IMoZRenderer = dispinterface
    ['{0C8392E4-3CC4-11D2-8AF6-0060082D41FB}']
    procedure RampColors(startColor: OLE_COLOR; endColor: OLE_COLOR); dispid 5;
    property Symbol[index: Smallint]: IDispatch readonly dispid 7;
    property Break[index: Smallint]: Double dispid 6;
    property ValueCalculation: ZValueCalcConstants dispid 4;
    property BreakCount: Smallint dispid 3;
    property Tag: WideString dispid 1;
    property DrawBackground: WordBool dispid 8;
    property SymbolType: SymbolTypeConstants dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoGroupRenderer
// Flags:     (4096) Dispatchable
// GUID:      {83259D40-4A42-11D2-AF7A-006097DA3688}
// *********************************************************************//
  IMoGroupRenderer = dispinterface
    ['{83259D40-4A42-11D2-AF7A-006097DA3688}']
    procedure Remove(index: Smallint); dispid 4;
    property Renderer[index: Smallint]: IDispatch dispid 5;
    function Add(const Renderer: IDispatch): Smallint; dispid 3;
    property Tag: WideString dispid 6;
    property DrawBackground: WordBool dispid 1;
    property Count: Smallint dispid 2;
  end;

// *********************************************************************//
// DispIntf:  IMoChartRenderer
// Flags:     (4096) Dispatchable
// GUID:      {83259D42-4A42-11D2-AF7A-006097DA3688}
// *********************************************************************//
  IMoChartRenderer = dispinterface
    ['{83259D42-4A42-11D2-AF7A-006097DA3688}']
    procedure NoNullValue; dispid 11;
    property Color[index: Smallint]: OLE_COLOR dispid 13;
    property Field[index: Smallint]: WideString dispid 12;
    property MinPieSize: Smallint dispid 3;
    property BarWidth: Smallint dispid 9;
    property FieldCount: Smallint dispid 6;
    property NormalizationField: WideString dispid 2;
    property BarHeight: Smallint dispid 10;
    property MaxPieSize: Smallint dispid 4;
    property SizeField: WideString dispid 1;
    property DrawBackground: WordBool dispid 16;
    property ShowOutline: WordBool dispid 5;
    property Tag: WideString dispid 14;
    property ChartType: ChartTypeConstants dispid 8;
    property NullValue: Double dispid 7;
    property CustomChart: IUnknown dispid 15;
  end;

// *********************************************************************//
// DispIntf:  IMoLabelPlacer
// Flags:     (4096) Dispatchable
// GUID:      {83259D44-4A42-11D2-AF7A-006097DA3688}
// *********************************************************************//
  IMoLabelPlacer = dispinterface
    ['{83259D44-4A42-11D2-AF7A-006097DA3688}']
    property Value[index: Smallint]: WideString dispid 17;
    property Symbol[index: Smallint]: TextSymbol readonly dispid 16;
    property DrawBackground: WordBool dispid 2;
    property PlaceBelow: WordBool dispid 11;
    property PlaceAbove: WordBool dispid 10;
    property Field: WideString dispid 1;
    property PlaceOn: WordBool dispid 12;
    property DefaultSymbol: TextSymbol dispid 13;
    property UseDefault: WordBool dispid 4;
    property ValueCount: Smallint dispid 14;
    property BackgroundRenderer: IDispatch dispid 15;
    property Tag: WideString dispid 18;
    property MaskColor: OLE_COLOR dispid 7;
    property MaskLabels: WordBool dispid 6;
    property ValueField: WideString dispid 5;
    property AllowDuplicates: WordBool dispid 3;
    property SymbolHeight: Smallint dispid 9;
    property SymbolWidth: Smallint dispid 8;
  end;

// *********************************************************************//
// DispIntf:  IMoEventRenderer
// Flags:     (4096) Dispatchable
// GUID:      {356EF6C6-73E3-11D2-BF0D-0060082D41FB}
// *********************************************************************//
  IMoEventRenderer = dispinterface
    ['{356EF6C6-73E3-11D2-BF0D-0060082D41FB}']
    function InvalidateIndex(const key: WideString): WordBool; dispid 15;
    property Value[index: Smallint]: WideString dispid 17;
    property Symbol[index: Smallint]: Symbol readonly dispid 16;
    property ValueCount: Smallint dispid 11;
    property UseDefault: WordBool dispid 2;
    property Tag: WideString dispid 1;
    property StartMeasureField: WideString dispid 5;
    property EventRouteIDField: WideString dispid 4;
    property FeatureRouteIDField: WideString dispid 3;
    property EndMeasureField: WideString dispid 6;
    property EventTable: Table dispid 12;
    property SymbolField: WideString dispid 7;
    property DrawBackground: WordBool dispid 8;
    property IndexExtent: Rectangle dispid 14;
    property SymbolType: SymbolTypeConstants dispid 10;
    property DefaultSymbol: Symbol dispid 9;
    property IndexEvents: WordBool dispid 13;
  end;

// *********************************************************************//
// DispIntf:  _DMap
// Flags:     (4112) Hidden Dispatchable
// GUID:      {9BD6A649-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  _DMap = dispinterface
    ['{9BD6A649-CE75-11D1-AF04-204C4F4F5020}']
    function Wrapper36: IMoDatum; dispid 170;
    function TrackLine: Line; dispid 23;
    function Wrapper34: IMoGeoCoordSys; dispid 168;
    function Wrapper35: IMoUnit; dispid 169;
    function TrackCircle: Ellipse; dispid 22;
    procedure FromMapPoint(const Point: Point; var X: Single; var Y: Single); dispid 25;
    function TrackRectangle: Rectangle; dispid 24;
    procedure DrawText(const text: WideString; const shape: IDispatch; const Symbol: TextSymbol); dispid 21;
    function ToMapDistance(distance: Single): Double; dispid 26;
    function Wrapper33: IMoProjCoordSys; dispid 167;
    function Wrapper28: IMoTableDesc; dispid 162;
    function Wrapper31: IMoParts; dispid 165;
    function Wrapper32: IMoProjection; dispid 166;
    function Wrapper29: IMoAddressLocation; dispid 163;
    function Wrapper38: IMoPrimeMeridian; dispid 172;
    function Wrapper39: IMoGeoTransformation; dispid 173;
    function Wrapper30: IMoPlaceLocator; dispid 164;
    function Wrapper37: IMoSpheroid; dispid 171;
    procedure OutputMap2(hDC: OLE_HANDLE; X: Integer; Y: Integer; Width: Integer; Height: Integer; 
                         DrawFlags: OleVariant); dispid 36;
    procedure OutputMap(hDC: OLE_HANDLE); dispid 29;
    function Wrapper2: IMoGeoDatasets; dispid 136;
    procedure RefreshRect(const rect: IMoRectangle); dispid 37;
    function TrackPolygon: Polygon; dispid 28;
    procedure ExportMap(exportType: ExportMapConstants; const outputFile: WideString; 
                        scaleFactor: Double); dispid 31;
    procedure PrintMap(const docName: WideString; const outputFile: WideString; 
                       landscapeOrientation: WordBool); dispid 30;
    function FromMapDistance(distance: Double): Single; dispid 27;
    procedure CopyMap(scaleFactor: Double); dispid 32;
    procedure AboutBox; dispid -552;
    procedure DrawShape(const shape: IDispatch; const Symbol: Symbol); dispid 20;
    function ToMapPoint(X: Single; Y: Single): Point; dispid 18;
    procedure Pan; dispid 17;
    procedure Refresh; dispid -550;
    procedure RefreshLayer(index: Smallint; rect: OleVariant); dispid 34;
    procedure CenterAt(X: Double; Y: Double); dispid 33;
    procedure FlashShape(const shape: IDispatch; nTimes: Smallint); dispid 19;
    procedure ExportMap2(exportType: ExportMapConstants; const outputFile: WideString; 
                         scaleFactor: Double; useSourceDepth: OleVariant); dispid 35;
    procedure EnableGIF(const licenseCode: WideString); dispid 39;
    function Wrapper23: IMoGeoEvent; dispid 157;
    function Wrapper6: IMoMapLayer; dispid 140;
    function Wrapper21: IMoLabelRenderer; dispid 155;
    function Wrapper22: IMoTrackingLayer; dispid 156;
    function Wrapper7: IMoRectangle; dispid 141;
    function Wrapper4: IMoGeoDataset; dispid 138;
    function Wrapper5: IMoLayers; dispid 139;
    function Wrapper8: IMoRecordset; dispid 142;
    function Wrapper3: IMoDataConnection; dispid 137;
    function Wrapper20: IMoDotDensityRenderer; dispid 154;
    function Wrapper15: IMoSymbol; dispid 149;
    function Wrapper18: IMoStatistics; dispid 152;
    function Wrapper19: IMoClassBreaksRenderer; dispid 153;
    function Wrapper16: IMoValueMapRenderer; dispid 150;
    function Wrapper25: IMoImageLayer; dispid 159;
    function Wrapper26: IMoTable; dispid 160;
    function Wrapper17: IMoStrings; dispid 151;
    function Wrapper24: IMoEllipse; dispid 158;
    function Wrapper41: IMoGeocoder; dispid 175;
    function Wrapper42: IMoZRenderer; dispid 176;
    function Wrapper45: IMoLabelPlacer; dispid 179;
    function Wrapper40: IMoStandardizer; dispid 174;
    procedure EnableStreetMap(const licenseCode: WideString); dispid 40;
    function Wrapper46: IMoEventRenderer; dispid 180;
    procedure EnableTIFFLZW(const licenseCode: WideString); dispid 38;
    procedure ExportMapToJpeg(const outputFile: WideString; percentQuality: Integer; 
                              isProgressive: WordBool; scaleFactor: Double; 
                              scaleSymbology: ExportSymbologyScaleConstants); dispid 41;
    procedure ExportMap3(formatType: ExportMapConstants; formatData: OleVariant; 
                         scaleFactor: Double; scaleSymbology: ExportSymbologyScaleConstants; 
                         exportDepth: ExportDepthConstants; palette: ExportPaletteConstants); dispid 42;
    function Wrapper14: IMoPoints; dispid 148;
    function Wrapper9: IMoPoint; dispid 143;
    function Wrapper12: IMoPolygon; dispid 146;
    function Wrapper13: IMoLine; dispid 147;
    function Wrapper10: IMoFields; dispid 144;
    function Wrapper43: IMoGroupRenderer; dispid 177;
    function Wrapper44: IMoChartRenderer; dispid 178;
    function Wrapper11: IMoField; dispid 145;
    function Wrapper27: IMoTextSymbol; dispid 161;
    property TrackingLayerDrawing: TrackingLayerDrawConstants dispid 45;
    property DisplayUnit: DisplayUnitConstants dispid 44;
    property GeometryEnvironment: GeometryEnvironmentConstants dispid 43;
    property VisibleRegion: IDispatch dispid 16;
    property RotationAngle: Double dispid 15;
    property WindowMode: WindowModeConstants dispid 14;
    property MaxFileBuffer: Integer dispid 13;
    property CoordinateSystem: OleVariant dispid 12;
    property FullRedrawOnPan: WordBool dispid 3;
    property MousePointer: MousePointerConstants dispid 11;
    property MinWidth: Double dispid 1;
    property Appearance: AppearanceConstants dispid -520;
    property hWnd: OLE_HANDLE dispid -515;
    property Enabled: WordBool dispid -514;
    property RefreshCount: Integer dispid 10;
    property _Layers: IMoLayers dispid 0;
    property TrackingLayer: IMoTrackingLayer dispid 9;
    property CancelAction: CancelActionConstants dispid 8;
    property SecretIdentity: Integer dispid 7;
    property ScrollBars: WordBool dispid 2;
    property BorderStyle: Smallint dispid -504;
    property BackColor: OLE_COLOR dispid -501;
    property FullExtent: Rectangle dispid 6;
    property Extent: Rectangle dispid 5;
    property Layers: IMoLayers dispid 4;
  end;

// *********************************************************************//
// DispIntf:  _DMapEvents
// Flags:     (4096) Dispatchable
// GUID:      {9BD6A64A-CE75-11D1-AF04-204C4F4F5020}
// *********************************************************************//
  _DMapEvents = dispinterface
    ['{9BD6A64A-CE75-11D1-AF04-204C4F4F5020}']
    procedure MouseDown(Button: Smallint; Shift: Smallint; X: OLE_XPOS_PIXELS; Y: OLE_YPOS_PIXELS); dispid -605;
    procedure MouseUp(Button: Smallint; Shift: Smallint; X: OLE_XPOS_PIXELS; Y: OLE_YPOS_PIXELS); dispid -607;
    procedure MouseMove(Button: Smallint; Shift: Smallint; X: OLE_XPOS_PIXELS; Y: OLE_YPOS_PIXELS); dispid -606;
    procedure KeyDown(KeyCode: Smallint; Shift: Smallint); dispid -602;
    procedure KeyPress(KeyAscii: Smallint); dispid -603;
    procedure DrawingCanceled; dispid 1;
    procedure BeforeLayerDraw(index: Smallint; hDC: OLE_HANDLE); dispid 2;
    procedure AfterLayerDraw(index: Smallint; canceled: WordBool; hDC: OLE_HANDLE); dispid 3;
    procedure AfterTrackingLayerDraw(hDC: OLE_HANDLE); dispid 4;
    procedure BeforeTrackingLayerDraw(hDC: OLE_HANDLE); dispid 5;
    procedure Click; dispid -600;
    procedure DblClick; dispid -601;
    procedure DropFiles(const fileNames: IDispatch; X: OLE_XPOS_PIXELS; Y: OLE_YPOS_PIXELS); dispid 6;
    procedure DragFiles(const fileNames: IDispatch; X: OLE_XPOS_PIXELS; Y: OLE_YPOS_PIXELS; 
                        state: Smallint; var dropValid: WordBool); dispid 7;
    procedure DrawError(index: Smallint); dispid 8;
  end;

// *********************************************************************//
// The Class CoTableDesc provides a Create and CreateRemote method to          
// create instances of the default interface IMoTableDesc exposed by              
// the CoClass TableDesc. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTableDesc = class
    class function Create: IMoTableDesc;
    class function CreateRemote(const MachineName: string): IMoTableDesc;
  end;

// *********************************************************************//
// The Class CoRectangle provides a Create and CreateRemote method to          
// create instances of the default interface IMoRectangle exposed by              
// the CoClass Rectangle. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRectangle = class
    class function Create: IMoRectangle;
    class function CreateRemote(const MachineName: string): IMoRectangle;
  end;

// *********************************************************************//
// The Class CoPoint provides a Create and CreateRemote method to          
// create instances of the default interface IMoPoint exposed by              
// the CoClass Point. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPoint = class
    class function Create: IMoPoint;
    class function CreateRemote(const MachineName: string): IMoPoint;
  end;

// *********************************************************************//
// The Class CoPoints provides a Create and CreateRemote method to          
// create instances of the default interface IMoPoints exposed by              
// the CoClass Points. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPoints = class
    class function Create: IMoPoints;
    class function CreateRemote(const MachineName: string): IMoPoints;
  end;

// *********************************************************************//
// The Class CoSymbol provides a Create and CreateRemote method to          
// create instances of the default interface IMoSymbol exposed by              
// the CoClass Symbol. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSymbol = class
    class function Create: IMoSymbol;
    class function CreateRemote(const MachineName: string): IMoSymbol;
  end;

// *********************************************************************//
// The Class CoStrings provides a Create and CreateRemote method to          
// create instances of the default interface IMoStrings exposed by              
// the CoClass Strings. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoStrings = class
    class function Create: IMoStrings;
    class function CreateRemote(const MachineName: string): IMoStrings;
  end;

// *********************************************************************//
// The Class CoTable provides a Create and CreateRemote method to          
// create instances of the default interface IMoTable exposed by              
// the CoClass Table. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTable = class
    class function Create: IMoTable;
    class function CreateRemote(const MachineName: string): IMoTable;
  end;

// *********************************************************************//
// The Class CoTextSymbol provides a Create and CreateRemote method to          
// create instances of the default interface IMoTextSymbol exposed by              
// the CoClass TextSymbol. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTextSymbol = class
    class function Create: IMoTextSymbol;
    class function CreateRemote(const MachineName: string): IMoTextSymbol;
  end;

// *********************************************************************//
// The Class CoStandardizer provides a Create and CreateRemote method to          
// create instances of the default interface IMoStandardizer exposed by              
// the CoClass Standardizer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoStandardizer = class
    class function Create: IMoStandardizer;
    class function CreateRemote(const MachineName: string): IMoStandardizer;
  end;

// *********************************************************************//
// The Class CoGeoDataset provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeoDataset exposed by              
// the CoClass GeoDataset. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeoDataset = class
    class function Create: IMoGeoDataset;
    class function CreateRemote(const MachineName: string): IMoGeoDataset;
  end;

// *********************************************************************//
// The Class CoAddressLocation provides a Create and CreateRemote method to          
// create instances of the default interface IMoAddressLocation exposed by              
// the CoClass AddressLocation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoAddressLocation = class
    class function Create: IMoAddressLocation;
    class function CreateRemote(const MachineName: string): IMoAddressLocation;
  end;

// *********************************************************************//
// The Class CoDataConnection provides a Create and CreateRemote method to          
// create instances of the default interface IMoDataConnection exposed by              
// the CoClass DataConnection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDataConnection = class
    class function Create: IMoDataConnection;
    class function CreateRemote(const MachineName: string): IMoDataConnection;
  end;

// *********************************************************************//
// The Class CoEllipse provides a Create and CreateRemote method to          
// create instances of the default interface IMoEllipse exposed by              
// the CoClass Ellipse. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEllipse = class
    class function Create: IMoEllipse;
    class function CreateRemote(const MachineName: string): IMoEllipse;
  end;

// *********************************************************************//
// The Class CoLine provides a Create and CreateRemote method to          
// create instances of the default interface IMoLine exposed by              
// the CoClass Line. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLine = class
    class function Create: IMoLine;
    class function CreateRemote(const MachineName: string): IMoLine;
  end;

// *********************************************************************//
// The Class CoPolygon provides a Create and CreateRemote method to          
// create instances of the default interface IMoPolygon exposed by              
// the CoClass Polygon. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPolygon = class
    class function Create: IMoPolygon;
    class function CreateRemote(const MachineName: string): IMoPolygon;
  end;


// *********************************************************************//
// OLE Control Proxy class declaration
// Control Name     : TMap
// Help String      : Map Control
// Default Interface: _DMap
// Def. Intf. DISP? : Yes
// Event   Interface: _DMapEvents
// TypeFlags        : (34) CanCreate Control
// *********************************************************************//
  TMapBeforeLayerDraw = procedure(ASender: TObject; index: Smallint; hDC: OLE_HANDLE) of object;
  TMapAfterLayerDraw = procedure(ASender: TObject; index: Smallint; canceled: WordBool; 
                                                   hDC: OLE_HANDLE) of object;
  TMapAfterTrackingLayerDraw = procedure(ASender: TObject; hDC: OLE_HANDLE) of object;
  TMapBeforeTrackingLayerDraw = procedure(ASender: TObject; hDC: OLE_HANDLE) of object;
  TMapDropFiles = procedure(ASender: TObject; const fileNames: IDispatch; X: OLE_XPOS_PIXELS; 
                                              Y: OLE_YPOS_PIXELS) of object;
  TMapDragFiles = procedure(ASender: TObject; const fileNames: IDispatch; X: OLE_XPOS_PIXELS; 
                                              Y: OLE_YPOS_PIXELS; state: Smallint; 
                                              var dropValid: WordBool) of object;
  TMapDrawError = procedure(ASender: TObject; index: Smallint) of object;

  TMap = class(TOleControl)
  private
    FOnDrawingCanceled: TNotifyEvent;
    FOnBeforeLayerDraw: TMapBeforeLayerDraw;
    FOnAfterLayerDraw: TMapAfterLayerDraw;
    FOnAfterTrackingLayerDraw: TMapAfterTrackingLayerDraw;
    FOnBeforeTrackingLayerDraw: TMapBeforeTrackingLayerDraw;
    FOnDropFiles: TMapDropFiles;
    FOnDragFiles: TMapDragFiles;
    FOnDrawError: TMapDrawError;
    FIntf: _DMap;
    function  GetControlInterface: _DMap;
  protected
    procedure CreateControl;
    procedure InitControlData; override;
    function Get_VisibleRegion: IDispatch;
    procedure Set_VisibleRegion(const Value: IDispatch);
    function Get_CoordinateSystem: OleVariant;
    procedure Set_CoordinateSystem(Value: OleVariant);
    function Get__Layers: IMoLayers;
    procedure Set__Layers(const Value: IMoLayers);
    function Get_TrackingLayer: IMoTrackingLayer;
    procedure Set_TrackingLayer(const Value: IMoTrackingLayer);
    function Get_FullExtent: Rectangle;
    procedure Set_FullExtent(const Value: Rectangle);
    function Get_Extent: Rectangle;
    procedure Set_Extent(const Value: Rectangle);
    function Get_Layers: IMoLayers;
    procedure Set_Layers(const Value: IMoLayers);
  public
    function Wrapper36: IMoDatum;
    function TrackLine: Line;
    function Wrapper34: IMoGeoCoordSys;
    function Wrapper35: IMoUnit;
    function TrackCircle: Ellipse;
    procedure FromMapPoint(const Point: Point; var X: Single; var Y: Single);
    function TrackRectangle: Rectangle;
    procedure DrawText(const text: WideString; const shape: IDispatch; const Symbol: TextSymbol);
    function ToMapDistance(distance: Single): Double;
    function Wrapper33: IMoProjCoordSys;
    function Wrapper28: IMoTableDesc;
    function Wrapper31: IMoParts;
    function Wrapper32: IMoProjection;
    function Wrapper29: IMoAddressLocation;
    function Wrapper38: IMoPrimeMeridian;
    function Wrapper39: IMoGeoTransformation;
    function Wrapper30: IMoPlaceLocator;
    function Wrapper37: IMoSpheroid;
    procedure OutputMap2(hDC: OLE_HANDLE; X: Integer; Y: Integer; Width: Integer; Height: Integer); overload;
    procedure OutputMap2(hDC: OLE_HANDLE; X: Integer; Y: Integer; Width: Integer; Height: Integer; 
                         DrawFlags: OleVariant); overload;
    procedure OutputMap(hDC: OLE_HANDLE);
    function Wrapper2: IMoGeoDatasets;
    procedure RefreshRect(const rect: IMoRectangle);
    function TrackPolygon: Polygon;
    procedure ExportMap(exportType: ExportMapConstants; const outputFile: WideString; 
                        scaleFactor: Double);
    procedure PrintMap(const docName: WideString; const outputFile: WideString; 
                       landscapeOrientation: WordBool);
    function FromMapDistance(distance: Double): Single;
    procedure CopyMap(scaleFactor: Double);
    procedure AboutBox;
    procedure DrawShape(const shape: IDispatch; const Symbol: Symbol);
    function ToMapPoint(X: Single; Y: Single): Point;
    procedure Pan;
    procedure Refresh;
    procedure RefreshLayer(index: Smallint); overload;
    procedure RefreshLayer(index: Smallint; rect: OleVariant); overload;
    procedure CenterAt(X: Double; Y: Double);
    procedure FlashShape(const shape: IDispatch; nTimes: Smallint);
    procedure ExportMap2(exportType: ExportMapConstants; const outputFile: WideString; 
                         scaleFactor: Double); overload;
    procedure ExportMap2(exportType: ExportMapConstants; const outputFile: WideString; 
                         scaleFactor: Double; useSourceDepth: OleVariant); overload;
    procedure EnableGIF(const licenseCode: WideString);
    function Wrapper23: IMoGeoEvent;
    function Wrapper6: IMoMapLayer;
    function Wrapper21: IMoLabelRenderer;
    function Wrapper22: IMoTrackingLayer;
    function Wrapper7: IMoRectangle;
    function Wrapper4: IMoGeoDataset;
    function Wrapper5: IMoLayers;
    function Wrapper8: IMoRecordset;
    function Wrapper3: IMoDataConnection;
    function Wrapper20: IMoDotDensityRenderer;
    function Wrapper15: IMoSymbol;
    function Wrapper18: IMoStatistics;
    function Wrapper19: IMoClassBreaksRenderer;
    function Wrapper16: IMoValueMapRenderer;
    function Wrapper25: IMoImageLayer;
    function Wrapper26: IMoTable;
    function Wrapper17: IMoStrings;
    function Wrapper24: IMoEllipse;
    function Wrapper41: IMoGeocoder;
    function Wrapper42: IMoZRenderer;
    function Wrapper45: IMoLabelPlacer;
    function Wrapper40: IMoStandardizer;
    procedure EnableStreetMap(const licenseCode: WideString);
    function Wrapper46: IMoEventRenderer;
    procedure EnableTIFFLZW(const licenseCode: WideString);
    procedure ExportMapToJpeg(const outputFile: WideString; percentQuality: Integer; 
                              isProgressive: WordBool; scaleFactor: Double; 
                              scaleSymbology: ExportSymbologyScaleConstants);
    procedure ExportMap3(formatType: ExportMapConstants; formatData: OleVariant; 
                         scaleFactor: Double; scaleSymbology: ExportSymbologyScaleConstants; 
                         exportDepth: ExportDepthConstants; palette: ExportPaletteConstants);
    function Wrapper14: IMoPoints;
    function Wrapper9: IMoPoint;
    function Wrapper12: IMoPolygon;
    function Wrapper13: IMoLine;
    function Wrapper10: IMoFields;
    function Wrapper43: IMoGroupRenderer;
    function Wrapper44: IMoChartRenderer;
    function Wrapper11: IMoField;
    function Wrapper27: IMoTextSymbol;
    property  ControlInterface: _DMap read GetControlInterface;
    property  DefaultInterface: _DMap read GetControlInterface;
    property VisibleRegion: IDispatch index 16 read GetIDispatchProp write SetIDispatchProp;
    property CoordinateSystem: OleVariant index 12 read GetOleVariantProp write SetOleVariantProp;
    property _Layers: IMoLayers read Get__Layers write Set__Layers;
    property SecretIdentity: Integer index 7 read GetIntegerProp write SetIntegerProp;
  published
    property Anchors;
    property  ParentColor;
    property  TabStop;
    property  Align;
    property  DragCursor;
    property  DragMode;
    property  ParentShowHint;
    property  PopupMenu;
    property  ShowHint;
    property  TabOrder;
    property  Visible;
    property  OnDragDrop;
    property  OnDragOver;
    property  OnEndDrag;
    property  OnEnter;
    property  OnExit;
    property  OnStartDrag;
    property  OnMouseUp;
    property  OnMouseMove;
    property  OnMouseDown;
    property  OnKeyPress;
    property  OnKeyDown;
    property  OnDblClick;
    property  OnClick;
    property TrackingLayerDrawing: TOleEnum index 45 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property DisplayUnit: TOleEnum index 44 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property GeometryEnvironment: TOleEnum index 43 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property RotationAngle: Double index 15 read GetDoubleProp write SetDoubleProp stored False;
    property WindowMode: TOleEnum index 14 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property MaxFileBuffer: Integer index 13 read GetIntegerProp write SetIntegerProp stored False;
    property FullRedrawOnPan: WordBool index 3 read GetWordBoolProp write SetWordBoolProp stored False;
    property MousePointer: TOleEnum index 11 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property MinWidth: Double index 1 read GetDoubleProp write SetDoubleProp stored False;
    property Appearance: TOleEnum index -520 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property hWnd: Integer index -515 read GetIntegerProp write SetIntegerProp stored False;
    property Enabled: WordBool index -514 read GetWordBoolProp write SetWordBoolProp stored False;
    property RefreshCount: Integer index 10 read GetIntegerProp write SetIntegerProp stored False;
    property TrackingLayer: IMoTrackingLayer read Get_TrackingLayer write Set_TrackingLayer stored False;
    property CancelAction: TOleEnum index 8 read GetTOleEnumProp write SetTOleEnumProp stored False;
    property ScrollBars: WordBool index 2 read GetWordBoolProp write SetWordBoolProp stored False;
    property BorderStyle: Smallint index -504 read GetSmallintProp write SetSmallintProp stored False;
    property BackColor: TColor index -501 read GetTColorProp write SetTColorProp stored False;
    property FullExtent: Rectangle read Get_FullExtent write Set_FullExtent stored False;
    property Extent: Rectangle read Get_Extent write Set_Extent stored False;
    property Layers: IMoLayers read Get_Layers write Set_Layers stored False;
    property OnDrawingCanceled: TNotifyEvent read FOnDrawingCanceled write FOnDrawingCanceled;
    property OnBeforeLayerDraw: TMapBeforeLayerDraw read FOnBeforeLayerDraw write FOnBeforeLayerDraw;
    property OnAfterLayerDraw: TMapAfterLayerDraw read FOnAfterLayerDraw write FOnAfterLayerDraw;
    property OnAfterTrackingLayerDraw: TMapAfterTrackingLayerDraw read FOnAfterTrackingLayerDraw write FOnAfterTrackingLayerDraw;
    property OnBeforeTrackingLayerDraw: TMapBeforeTrackingLayerDraw read FOnBeforeTrackingLayerDraw write FOnBeforeTrackingLayerDraw;
    property OnDropFiles: TMapDropFiles read FOnDropFiles write FOnDropFiles;
    property OnDragFiles: TMapDragFiles read FOnDragFiles write FOnDragFiles;
    property OnDrawError: TMapDrawError read FOnDrawError write FOnDrawError;
  end;

// *********************************************************************//
// The Class CoGeoDatasets provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeoDatasets exposed by              
// the CoClass GeoDatasets. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeoDatasets = class
    class function Create: IMoGeoDatasets;
    class function CreateRemote(const MachineName: string): IMoGeoDatasets;
  end;

// *********************************************************************//
// The Class CoLayers provides a Create and CreateRemote method to          
// create instances of the default interface IMoLayers exposed by              
// the CoClass Layers. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLayers = class
    class function Create: IMoLayers;
    class function CreateRemote(const MachineName: string): IMoLayers;
  end;

// *********************************************************************//
// The Class CoMapLayer provides a Create and CreateRemote method to          
// create instances of the default interface IMoMapLayer exposed by              
// the CoClass MapLayer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoMapLayer = class
    class function Create: IMoMapLayer;
    class function CreateRemote(const MachineName: string): IMoMapLayer;
  end;

// *********************************************************************//
// The Class CoRecordset provides a Create and CreateRemote method to          
// create instances of the default interface IMoRecordset exposed by              
// the CoClass Recordset. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoRecordset = class
    class function Create: IMoRecordset;
    class function CreateRemote(const MachineName: string): IMoRecordset;
  end;

// *********************************************************************//
// The Class CoFields provides a Create and CreateRemote method to          
// create instances of the default interface IMoFields exposed by              
// the CoClass Fields. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoFields = class
    class function Create: IMoFields;
    class function CreateRemote(const MachineName: string): IMoFields;
  end;

// *********************************************************************//
// The Class CoField provides a Create and CreateRemote method to          
// create instances of the default interface IMoField exposed by              
// the CoClass Field. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoField = class
    class function Create: IMoField;
    class function CreateRemote(const MachineName: string): IMoField;
  end;

// *********************************************************************//
// The Class CoValueMapRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoValueMapRenderer exposed by              
// the CoClass ValueMapRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoValueMapRenderer = class
    class function Create: IMoValueMapRenderer;
    class function CreateRemote(const MachineName: string): IMoValueMapRenderer;
  end;

// *********************************************************************//
// The Class CoStatistics provides a Create and CreateRemote method to          
// create instances of the default interface IMoStatistics exposed by              
// the CoClass Statistics. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoStatistics = class
    class function Create: IMoStatistics;
    class function CreateRemote(const MachineName: string): IMoStatistics;
  end;

// *********************************************************************//
// The Class CoClassBreaksRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoClassBreaksRenderer exposed by              
// the CoClass ClassBreaksRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoClassBreaksRenderer = class
    class function Create: IMoClassBreaksRenderer;
    class function CreateRemote(const MachineName: string): IMoClassBreaksRenderer;
  end;

// *********************************************************************//
// The Class CoDotDensityRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoDotDensityRenderer exposed by              
// the CoClass DotDensityRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDotDensityRenderer = class
    class function Create: IMoDotDensityRenderer;
    class function CreateRemote(const MachineName: string): IMoDotDensityRenderer;
  end;

// *********************************************************************//
// The Class CoLabelRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoLabelRenderer exposed by              
// the CoClass LabelRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLabelRenderer = class
    class function Create: IMoLabelRenderer;
    class function CreateRemote(const MachineName: string): IMoLabelRenderer;
  end;

// *********************************************************************//
// The Class CoTrackingLayer provides a Create and CreateRemote method to          
// create instances of the default interface IMoTrackingLayer exposed by              
// the CoClass TrackingLayer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoTrackingLayer = class
    class function Create: IMoTrackingLayer;
    class function CreateRemote(const MachineName: string): IMoTrackingLayer;
  end;

// *********************************************************************//
// The Class CoGeoEvent provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeoEvent exposed by              
// the CoClass GeoEvent. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeoEvent = class
    class function Create: IMoGeoEvent;
    class function CreateRemote(const MachineName: string): IMoGeoEvent;
  end;

// *********************************************************************//
// The Class CoImageLayer provides a Create and CreateRemote method to          
// create instances of the default interface IMoImageLayer exposed by              
// the CoClass ImageLayer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoImageLayer = class
    class function Create: IMoImageLayer;
    class function CreateRemote(const MachineName: string): IMoImageLayer;
  end;

// *********************************************************************//
// The Class CoPlaceLocator provides a Create and CreateRemote method to          
// create instances of the default interface IMoPlaceLocator exposed by              
// the CoClass PlaceLocator. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPlaceLocator = class
    class function Create: IMoPlaceLocator;
    class function CreateRemote(const MachineName: string): IMoPlaceLocator;
  end;

// *********************************************************************//
// The Class CoParts provides a Create and CreateRemote method to          
// create instances of the default interface IMoParts exposed by              
// the CoClass Parts. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoParts = class
    class function Create: IMoParts;
    class function CreateRemote(const MachineName: string): IMoParts;
  end;

// *********************************************************************//
// The Class CoProjection provides a Create and CreateRemote method to          
// create instances of the default interface IMoProjection exposed by              
// the CoClass Projection. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoProjection = class
    class function Create: IMoProjection;
    class function CreateRemote(const MachineName: string): IMoProjection;
  end;

// *********************************************************************//
// The Class CoProjCoordSys provides a Create and CreateRemote method to          
// create instances of the default interface IMoProjCoordSys exposed by              
// the CoClass ProjCoordSys. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoProjCoordSys = class
    class function Create: IMoProjCoordSys;
    class function CreateRemote(const MachineName: string): IMoProjCoordSys;
  end;

// *********************************************************************//
// The Class CoGeoCoordSys provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeoCoordSys exposed by              
// the CoClass GeoCoordSys. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeoCoordSys = class
    class function Create: IMoGeoCoordSys;
    class function CreateRemote(const MachineName: string): IMoGeoCoordSys;
  end;

// *********************************************************************//
// The Class CoUnit_ provides a Create and CreateRemote method to          
// create instances of the default interface IMoUnit exposed by              
// the CoClass Unit_. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoUnit_ = class
    class function Create: IMoUnit;
    class function CreateRemote(const MachineName: string): IMoUnit;
  end;

// *********************************************************************//
// The Class CoDatum provides a Create and CreateRemote method to          
// create instances of the default interface IMoDatum exposed by              
// the CoClass Datum. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoDatum = class
    class function Create: IMoDatum;
    class function CreateRemote(const MachineName: string): IMoDatum;
  end;

// *********************************************************************//
// The Class CoSpheroid provides a Create and CreateRemote method to          
// create instances of the default interface IMoSpheroid exposed by              
// the CoClass Spheroid. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoSpheroid = class
    class function Create: IMoSpheroid;
    class function CreateRemote(const MachineName: string): IMoSpheroid;
  end;

// *********************************************************************//
// The Class CoPrimeMeridian provides a Create and CreateRemote method to          
// create instances of the default interface IMoPrimeMeridian exposed by              
// the CoClass PrimeMeridian. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoPrimeMeridian = class
    class function Create: IMoPrimeMeridian;
    class function CreateRemote(const MachineName: string): IMoPrimeMeridian;
  end;

// *********************************************************************//
// The Class CoGeoTransformation provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeoTransformation exposed by              
// the CoClass GeoTransformation. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeoTransformation = class
    class function Create: IMoGeoTransformation;
    class function CreateRemote(const MachineName: string): IMoGeoTransformation;
  end;

// *********************************************************************//
// The Class CoGeocoder provides a Create and CreateRemote method to          
// create instances of the default interface IMoGeocoder exposed by              
// the CoClass Geocoder. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGeocoder = class
    class function Create: IMoGeocoder;
    class function CreateRemote(const MachineName: string): IMoGeocoder;
  end;

// *********************************************************************//
// The Class CoZRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoZRenderer exposed by              
// the CoClass ZRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoZRenderer = class
    class function Create: IMoZRenderer;
    class function CreateRemote(const MachineName: string): IMoZRenderer;
  end;

// *********************************************************************//
// The Class CoGroupRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoGroupRenderer exposed by              
// the CoClass GroupRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoGroupRenderer = class
    class function Create: IMoGroupRenderer;
    class function CreateRemote(const MachineName: string): IMoGroupRenderer;
  end;

// *********************************************************************//
// The Class CoChartRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoChartRenderer exposed by              
// the CoClass ChartRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoChartRenderer = class
    class function Create: IMoChartRenderer;
    class function CreateRemote(const MachineName: string): IMoChartRenderer;
  end;

// *********************************************************************//
// The Class CoLabelPlacer provides a Create and CreateRemote method to          
// create instances of the default interface IMoLabelPlacer exposed by              
// the CoClass LabelPlacer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoLabelPlacer = class
    class function Create: IMoLabelPlacer;
    class function CreateRemote(const MachineName: string): IMoLabelPlacer;
  end;

// *********************************************************************//
// The Class CoEventRenderer provides a Create and CreateRemote method to          
// create instances of the default interface IMoEventRenderer exposed by              
// the CoClass EventRenderer. The functions are intended to be used by             
// clients wishing to automate the CoClass objects exposed by the         
// server of this typelibrary.                                            
// *********************************************************************//
  CoEventRenderer = class
    class function Create: IMoEventRenderer;
    class function CreateRemote(const MachineName: string): IMoEventRenderer;
  end;

procedure Register;

resourcestring
  dtlServerPage = 'ActiveX';

  dtlOcxPage = 'ActiveX';

implementation

uses ComObj;

class function CoTableDesc.Create: IMoTableDesc;
begin
  Result := CreateComObject(CLASS_TableDesc) as IMoTableDesc;
end;

class function CoTableDesc.CreateRemote(const MachineName: string): IMoTableDesc;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TableDesc) as IMoTableDesc;
end;

class function CoRectangle.Create: IMoRectangle;
begin
  Result := CreateComObject(CLASS_Rectangle) as IMoRectangle;
end;

class function CoRectangle.CreateRemote(const MachineName: string): IMoRectangle;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Rectangle) as IMoRectangle;
end;

class function CoPoint.Create: IMoPoint;
begin
  Result := CreateComObject(CLASS_Point) as IMoPoint;
end;

class function CoPoint.CreateRemote(const MachineName: string): IMoPoint;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Point) as IMoPoint;
end;

class function CoPoints.Create: IMoPoints;
begin
  Result := CreateComObject(CLASS_Points) as IMoPoints;
end;

class function CoPoints.CreateRemote(const MachineName: string): IMoPoints;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Points) as IMoPoints;
end;

class function CoSymbol.Create: IMoSymbol;
begin
  Result := CreateComObject(CLASS_Symbol) as IMoSymbol;
end;

class function CoSymbol.CreateRemote(const MachineName: string): IMoSymbol;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Symbol) as IMoSymbol;
end;

class function CoStrings.Create: IMoStrings;
begin
  Result := CreateComObject(CLASS_Strings) as IMoStrings;
end;

class function CoStrings.CreateRemote(const MachineName: string): IMoStrings;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Strings) as IMoStrings;
end;

class function CoTable.Create: IMoTable;
begin
  Result := CreateComObject(CLASS_Table) as IMoTable;
end;

class function CoTable.CreateRemote(const MachineName: string): IMoTable;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Table) as IMoTable;
end;

class function CoTextSymbol.Create: IMoTextSymbol;
begin
  Result := CreateComObject(CLASS_TextSymbol) as IMoTextSymbol;
end;

class function CoTextSymbol.CreateRemote(const MachineName: string): IMoTextSymbol;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TextSymbol) as IMoTextSymbol;
end;

class function CoStandardizer.Create: IMoStandardizer;
begin
  Result := CreateComObject(CLASS_Standardizer) as IMoStandardizer;
end;

class function CoStandardizer.CreateRemote(const MachineName: string): IMoStandardizer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Standardizer) as IMoStandardizer;
end;

class function CoGeoDataset.Create: IMoGeoDataset;
begin
  Result := CreateComObject(CLASS_GeoDataset) as IMoGeoDataset;
end;

class function CoGeoDataset.CreateRemote(const MachineName: string): IMoGeoDataset;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GeoDataset) as IMoGeoDataset;
end;

class function CoAddressLocation.Create: IMoAddressLocation;
begin
  Result := CreateComObject(CLASS_AddressLocation) as IMoAddressLocation;
end;

class function CoAddressLocation.CreateRemote(const MachineName: string): IMoAddressLocation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_AddressLocation) as IMoAddressLocation;
end;

class function CoDataConnection.Create: IMoDataConnection;
begin
  Result := CreateComObject(CLASS_DataConnection) as IMoDataConnection;
end;

class function CoDataConnection.CreateRemote(const MachineName: string): IMoDataConnection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DataConnection) as IMoDataConnection;
end;

class function CoEllipse.Create: IMoEllipse;
begin
  Result := CreateComObject(CLASS_Ellipse) as IMoEllipse;
end;

class function CoEllipse.CreateRemote(const MachineName: string): IMoEllipse;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Ellipse) as IMoEllipse;
end;

class function CoLine.Create: IMoLine;
begin
  Result := CreateComObject(CLASS_Line) as IMoLine;
end;

class function CoLine.CreateRemote(const MachineName: string): IMoLine;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Line) as IMoLine;
end;

class function CoPolygon.Create: IMoPolygon;
begin
  Result := CreateComObject(CLASS_Polygon) as IMoPolygon;
end;

class function CoPolygon.CreateRemote(const MachineName: string): IMoPolygon;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Polygon) as IMoPolygon;
end;

procedure TMap.InitControlData;
const
  CEventDispIDs: array [0..7] of DWORD = (
    $00000001, $00000002, $00000003, $00000004, $00000005, $00000006,
    $00000007, $00000008);
  CLicenseKey: array[0..29] of Word = ( $0043, $006F, $0070, $0079, $0072, $0069, $0067, $0068, $0074, $0020, $0028
    , $0063, $0029, $0020, $0031, $0039, $0039, $0039, $0020, $0045, $0053
    , $0052, $0049, $0020, $0020, $0049, $006E, $0063, $002E, $0000);
  CControlData: TControlData2 = (
    ClassID: '{9BD6A64B-CE75-11D1-AF04-204C4F4F5020}';
    EventIID: '{9BD6A64A-CE75-11D1-AF04-204C4F4F5020}';
    EventCount: 8;
    EventDispIDs: @CEventDispIDs;
    LicenseKey: @CLicenseKey;
    Flags: $00000009;
    Version: 401);
begin
  ControlData := @CControlData;
  TControlData2(CControlData).FirstEventOfs := Cardinal(@@FOnDrawingCanceled) - Cardinal(Self);
end;

procedure TMap.CreateControl;

  procedure DoCreate;
  begin
    FIntf := IUnknown(OleObject) as _DMap;
  end;

begin
  if FIntf = nil then DoCreate;
end;

function TMap.GetControlInterface: _DMap;
begin
  CreateControl;
  Result := FIntf;
end;

function TMap.Get_VisibleRegion: IDispatch;
begin
  Result := DefaultInterface.VisibleRegion;
end;

procedure TMap.Set_VisibleRegion(const Value: IDispatch);
begin
  DefaultInterface.VisibleRegion := Value;
end;

function TMap.Get_CoordinateSystem: OleVariant;
begin
  Result := DefaultInterface.CoordinateSystem;
end;

procedure TMap.Set_CoordinateSystem(Value: OleVariant);
begin
  DefaultInterface.CoordinateSystem := Value;
end;

function TMap.Get__Layers: IMoLayers;
begin
  Result := DefaultInterface._Layers;
end;

procedure TMap.Set__Layers(const Value: IMoLayers);
begin
  DefaultInterface._Layers := Value;
end;

function TMap.Get_TrackingLayer: IMoTrackingLayer;
begin
  Result := DefaultInterface.TrackingLayer;
end;

procedure TMap.Set_TrackingLayer(const Value: IMoTrackingLayer);
begin
  DefaultInterface.TrackingLayer := Value;
end;

function TMap.Get_FullExtent: Rectangle;
begin
  Result := DefaultInterface.FullExtent;
end;

procedure TMap.Set_FullExtent(const Value: Rectangle);
begin
  DefaultInterface.FullExtent := Value;
end;

function TMap.Get_Extent: Rectangle;
begin
  Result := DefaultInterface.Extent;
end;

procedure TMap.Set_Extent(const Value: Rectangle);
begin
  DefaultInterface.Extent := Value;
end;

function TMap.Get_Layers: IMoLayers;
begin
  Result := DefaultInterface.Layers;
end;

procedure TMap.Set_Layers(const Value: IMoLayers);
begin
  DefaultInterface.Layers := Value;
end;

function TMap.Wrapper36: IMoDatum;
begin
  Result := DefaultInterface.Wrapper36;
end;

function TMap.TrackLine: Line;
begin
  Result := DefaultInterface.TrackLine;
end;

function TMap.Wrapper34: IMoGeoCoordSys;
begin
  Result := DefaultInterface.Wrapper34;
end;

function TMap.Wrapper35: IMoUnit;
begin
  Result := DefaultInterface.Wrapper35;
end;

function TMap.TrackCircle: Ellipse;
begin
  Result := DefaultInterface.TrackCircle;
end;

procedure TMap.FromMapPoint(const Point: Point; var X: Single; var Y: Single);
begin
  DefaultInterface.FromMapPoint(Point, X, Y);
end;

function TMap.TrackRectangle: Rectangle;
begin
  Result := DefaultInterface.TrackRectangle;
end;

procedure TMap.DrawText(const text: WideString; const shape: IDispatch; const Symbol: TextSymbol);
begin
  DefaultInterface.DrawText(text, shape, Symbol);
end;

function TMap.ToMapDistance(distance: Single): Double;
begin
  Result := DefaultInterface.ToMapDistance(distance);
end;

function TMap.Wrapper33: IMoProjCoordSys;
begin
  Result := DefaultInterface.Wrapper33;
end;

function TMap.Wrapper28: IMoTableDesc;
begin
  Result := DefaultInterface.Wrapper28;
end;

function TMap.Wrapper31: IMoParts;
begin
  Result := DefaultInterface.Wrapper31;
end;

function TMap.Wrapper32: IMoProjection;
begin
  Result := DefaultInterface.Wrapper32;
end;

function TMap.Wrapper29: IMoAddressLocation;
begin
  Result := DefaultInterface.Wrapper29;
end;

function TMap.Wrapper38: IMoPrimeMeridian;
begin
  Result := DefaultInterface.Wrapper38;
end;

function TMap.Wrapper39: IMoGeoTransformation;
begin
  Result := DefaultInterface.Wrapper39;
end;

function TMap.Wrapper30: IMoPlaceLocator;
begin
  Result := DefaultInterface.Wrapper30;
end;

function TMap.Wrapper37: IMoSpheroid;
begin
  Result := DefaultInterface.Wrapper37;
end;

procedure TMap.OutputMap2(hDC: OLE_HANDLE; X: Integer; Y: Integer; Width: Integer; Height: Integer);
begin
  DefaultInterface.OutputMap2(hDC, X, Y, Width, Height, EmptyParam);
end;

procedure TMap.OutputMap2(hDC: OLE_HANDLE; X: Integer; Y: Integer; Width: Integer; Height: Integer; 
                          DrawFlags: OleVariant);
begin
  DefaultInterface.OutputMap2(hDC, X, Y, Width, Height, DrawFlags);
end;

procedure TMap.OutputMap(hDC: OLE_HANDLE);
begin
  DefaultInterface.OutputMap(hDC);
end;

function TMap.Wrapper2: IMoGeoDatasets;
begin
  Result := DefaultInterface.Wrapper2;
end;

procedure TMap.RefreshRect(const rect: IMoRectangle);
begin
  DefaultInterface.RefreshRect(rect);
end;

function TMap.TrackPolygon: Polygon;
begin
  Result := DefaultInterface.TrackPolygon;
end;

procedure TMap.ExportMap(exportType: ExportMapConstants; const outputFile: WideString; 
                         scaleFactor: Double);
begin
  DefaultInterface.ExportMap(exportType, outputFile, scaleFactor);
end;

procedure TMap.PrintMap(const docName: WideString; const outputFile: WideString; 
                        landscapeOrientation: WordBool);
begin
  DefaultInterface.PrintMap(docName, outputFile, landscapeOrientation);
end;

function TMap.FromMapDistance(distance: Double): Single;
begin
  Result := DefaultInterface.FromMapDistance(distance);
end;

procedure TMap.CopyMap(scaleFactor: Double);
begin
  DefaultInterface.CopyMap(scaleFactor);
end;

procedure TMap.AboutBox;
begin
  DefaultInterface.AboutBox;
end;

procedure TMap.DrawShape(const shape: IDispatch; const Symbol: Symbol);
begin
  DefaultInterface.DrawShape(shape, Symbol);
end;

function TMap.ToMapPoint(X: Single; Y: Single): Point;
begin
  Result := DefaultInterface.ToMapPoint(X, Y);
end;

procedure TMap.Pan;
begin
  DefaultInterface.Pan;
end;

procedure TMap.Refresh;
begin
  DefaultInterface.Refresh;
end;

procedure TMap.RefreshLayer(index: Smallint);
begin
  DefaultInterface.RefreshLayer(index, EmptyParam);
end;

procedure TMap.RefreshLayer(index: Smallint; rect: OleVariant);
begin
  DefaultInterface.RefreshLayer(index, rect);
end;

procedure TMap.CenterAt(X: Double; Y: Double);
begin
  DefaultInterface.CenterAt(X, Y);
end;

procedure TMap.FlashShape(const shape: IDispatch; nTimes: Smallint);
begin
  DefaultInterface.FlashShape(shape, nTimes);
end;

procedure TMap.ExportMap2(exportType: ExportMapConstants; const outputFile: WideString; 
                          scaleFactor: Double);
begin
  DefaultInterface.ExportMap2(exportType, outputFile, scaleFactor, EmptyParam);
end;

procedure TMap.ExportMap2(exportType: ExportMapConstants; const outputFile: WideString; 
                          scaleFactor: Double; useSourceDepth: OleVariant);
begin
  DefaultInterface.ExportMap2(exportType, outputFile, scaleFactor, useSourceDepth);
end;

procedure TMap.EnableGIF(const licenseCode: WideString);
begin
  DefaultInterface.EnableGIF(licenseCode);
end;

function TMap.Wrapper23: IMoGeoEvent;
begin
  Result := DefaultInterface.Wrapper23;
end;

function TMap.Wrapper6: IMoMapLayer;
begin
  Result := DefaultInterface.Wrapper6;
end;

function TMap.Wrapper21: IMoLabelRenderer;
begin
  Result := DefaultInterface.Wrapper21;
end;

function TMap.Wrapper22: IMoTrackingLayer;
begin
  Result := DefaultInterface.Wrapper22;
end;

function TMap.Wrapper7: IMoRectangle;
begin
  Result := DefaultInterface.Wrapper7;
end;

function TMap.Wrapper4: IMoGeoDataset;
begin
  Result := DefaultInterface.Wrapper4;
end;

function TMap.Wrapper5: IMoLayers;
begin
  Result := DefaultInterface.Wrapper5;
end;

function TMap.Wrapper8: IMoRecordset;
begin
  Result := DefaultInterface.Wrapper8;
end;

function TMap.Wrapper3: IMoDataConnection;
begin
  Result := DefaultInterface.Wrapper3;
end;

function TMap.Wrapper20: IMoDotDensityRenderer;
begin
  Result := DefaultInterface.Wrapper20;
end;

function TMap.Wrapper15: IMoSymbol;
begin
  Result := DefaultInterface.Wrapper15;
end;

function TMap.Wrapper18: IMoStatistics;
begin
  Result := DefaultInterface.Wrapper18;
end;

function TMap.Wrapper19: IMoClassBreaksRenderer;
begin
  Result := DefaultInterface.Wrapper19;
end;

function TMap.Wrapper16: IMoValueMapRenderer;
begin
  Result := DefaultInterface.Wrapper16;
end;

function TMap.Wrapper25: IMoImageLayer;
begin
  Result := DefaultInterface.Wrapper25;
end;

function TMap.Wrapper26: IMoTable;
begin
  Result := DefaultInterface.Wrapper26;
end;

function TMap.Wrapper17: IMoStrings;
begin
  Result := DefaultInterface.Wrapper17;
end;

function TMap.Wrapper24: IMoEllipse;
begin
  Result := DefaultInterface.Wrapper24;
end;

function TMap.Wrapper41: IMoGeocoder;
begin
  Result := DefaultInterface.Wrapper41;
end;

function TMap.Wrapper42: IMoZRenderer;
begin
  Result := DefaultInterface.Wrapper42;
end;

function TMap.Wrapper45: IMoLabelPlacer;
begin
  Result := DefaultInterface.Wrapper45;
end;

function TMap.Wrapper40: IMoStandardizer;
begin
  Result := DefaultInterface.Wrapper40;
end;

procedure TMap.EnableStreetMap(const licenseCode: WideString);
begin
  DefaultInterface.EnableStreetMap(licenseCode);
end;

function TMap.Wrapper46: IMoEventRenderer;
begin
  Result := DefaultInterface.Wrapper46;
end;

procedure TMap.EnableTIFFLZW(const licenseCode: WideString);
begin
  DefaultInterface.EnableTIFFLZW(licenseCode);
end;

procedure TMap.ExportMapToJpeg(const outputFile: WideString; percentQuality: Integer; 
                               isProgressive: WordBool; scaleFactor: Double; 
                               scaleSymbology: ExportSymbologyScaleConstants);
begin
  DefaultInterface.ExportMapToJpeg(outputFile, percentQuality, isProgressive, scaleFactor, 
                                   scaleSymbology);
end;

procedure TMap.ExportMap3(formatType: ExportMapConstants; formatData: OleVariant; 
                          scaleFactor: Double; scaleSymbology: ExportSymbologyScaleConstants; 
                          exportDepth: ExportDepthConstants; palette: ExportPaletteConstants);
begin
  DefaultInterface.ExportMap3(formatType, formatData, scaleFactor, scaleSymbology, exportDepth, 
                              palette);
end;

function TMap.Wrapper14: IMoPoints;
begin
  Result := DefaultInterface.Wrapper14;
end;

function TMap.Wrapper9: IMoPoint;
begin
  Result := DefaultInterface.Wrapper9;
end;

function TMap.Wrapper12: IMoPolygon;
begin
  Result := DefaultInterface.Wrapper12;
end;

function TMap.Wrapper13: IMoLine;
begin
  Result := DefaultInterface.Wrapper13;
end;

function TMap.Wrapper10: IMoFields;
begin
  Result := DefaultInterface.Wrapper10;
end;

function TMap.Wrapper43: IMoGroupRenderer;
begin
  Result := DefaultInterface.Wrapper43;
end;

function TMap.Wrapper44: IMoChartRenderer;
begin
  Result := DefaultInterface.Wrapper44;
end;

function TMap.Wrapper11: IMoField;
begin
  Result := DefaultInterface.Wrapper11;
end;

function TMap.Wrapper27: IMoTextSymbol;
begin
  Result := DefaultInterface.Wrapper27;
end;

class function CoGeoDatasets.Create: IMoGeoDatasets;
begin
  Result := CreateComObject(CLASS_GeoDatasets) as IMoGeoDatasets;
end;

class function CoGeoDatasets.CreateRemote(const MachineName: string): IMoGeoDatasets;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GeoDatasets) as IMoGeoDatasets;
end;

class function CoLayers.Create: IMoLayers;
begin
  Result := CreateComObject(CLASS_Layers) as IMoLayers;
end;

class function CoLayers.CreateRemote(const MachineName: string): IMoLayers;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Layers) as IMoLayers;
end;

class function CoMapLayer.Create: IMoMapLayer;
begin
  Result := CreateComObject(CLASS_MapLayer) as IMoMapLayer;
end;

class function CoMapLayer.CreateRemote(const MachineName: string): IMoMapLayer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_MapLayer) as IMoMapLayer;
end;

class function CoRecordset.Create: IMoRecordset;
begin
  Result := CreateComObject(CLASS_Recordset) as IMoRecordset;
end;

class function CoRecordset.CreateRemote(const MachineName: string): IMoRecordset;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Recordset) as IMoRecordset;
end;

class function CoFields.Create: IMoFields;
begin
  Result := CreateComObject(CLASS_Fields) as IMoFields;
end;

class function CoFields.CreateRemote(const MachineName: string): IMoFields;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Fields) as IMoFields;
end;

class function CoField.Create: IMoField;
begin
  Result := CreateComObject(CLASS_Field) as IMoField;
end;

class function CoField.CreateRemote(const MachineName: string): IMoField;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Field) as IMoField;
end;

class function CoValueMapRenderer.Create: IMoValueMapRenderer;
begin
  Result := CreateComObject(CLASS_ValueMapRenderer) as IMoValueMapRenderer;
end;

class function CoValueMapRenderer.CreateRemote(const MachineName: string): IMoValueMapRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ValueMapRenderer) as IMoValueMapRenderer;
end;

class function CoStatistics.Create: IMoStatistics;
begin
  Result := CreateComObject(CLASS_Statistics) as IMoStatistics;
end;

class function CoStatistics.CreateRemote(const MachineName: string): IMoStatistics;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Statistics) as IMoStatistics;
end;

class function CoClassBreaksRenderer.Create: IMoClassBreaksRenderer;
begin
  Result := CreateComObject(CLASS_ClassBreaksRenderer) as IMoClassBreaksRenderer;
end;

class function CoClassBreaksRenderer.CreateRemote(const MachineName: string): IMoClassBreaksRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ClassBreaksRenderer) as IMoClassBreaksRenderer;
end;

class function CoDotDensityRenderer.Create: IMoDotDensityRenderer;
begin
  Result := CreateComObject(CLASS_DotDensityRenderer) as IMoDotDensityRenderer;
end;

class function CoDotDensityRenderer.CreateRemote(const MachineName: string): IMoDotDensityRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_DotDensityRenderer) as IMoDotDensityRenderer;
end;

class function CoLabelRenderer.Create: IMoLabelRenderer;
begin
  Result := CreateComObject(CLASS_LabelRenderer) as IMoLabelRenderer;
end;

class function CoLabelRenderer.CreateRemote(const MachineName: string): IMoLabelRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_LabelRenderer) as IMoLabelRenderer;
end;

class function CoTrackingLayer.Create: IMoTrackingLayer;
begin
  Result := CreateComObject(CLASS_TrackingLayer) as IMoTrackingLayer;
end;

class function CoTrackingLayer.CreateRemote(const MachineName: string): IMoTrackingLayer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_TrackingLayer) as IMoTrackingLayer;
end;

class function CoGeoEvent.Create: IMoGeoEvent;
begin
  Result := CreateComObject(CLASS_GeoEvent) as IMoGeoEvent;
end;

class function CoGeoEvent.CreateRemote(const MachineName: string): IMoGeoEvent;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GeoEvent) as IMoGeoEvent;
end;

class function CoImageLayer.Create: IMoImageLayer;
begin
  Result := CreateComObject(CLASS_ImageLayer) as IMoImageLayer;
end;

class function CoImageLayer.CreateRemote(const MachineName: string): IMoImageLayer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ImageLayer) as IMoImageLayer;
end;

class function CoPlaceLocator.Create: IMoPlaceLocator;
begin
  Result := CreateComObject(CLASS_PlaceLocator) as IMoPlaceLocator;
end;

class function CoPlaceLocator.CreateRemote(const MachineName: string): IMoPlaceLocator;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PlaceLocator) as IMoPlaceLocator;
end;

class function CoParts.Create: IMoParts;
begin
  Result := CreateComObject(CLASS_Parts) as IMoParts;
end;

class function CoParts.CreateRemote(const MachineName: string): IMoParts;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Parts) as IMoParts;
end;

class function CoProjection.Create: IMoProjection;
begin
  Result := CreateComObject(CLASS_Projection) as IMoProjection;
end;

class function CoProjection.CreateRemote(const MachineName: string): IMoProjection;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Projection) as IMoProjection;
end;

class function CoProjCoordSys.Create: IMoProjCoordSys;
begin
  Result := CreateComObject(CLASS_ProjCoordSys) as IMoProjCoordSys;
end;

class function CoProjCoordSys.CreateRemote(const MachineName: string): IMoProjCoordSys;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ProjCoordSys) as IMoProjCoordSys;
end;

class function CoGeoCoordSys.Create: IMoGeoCoordSys;
begin
  Result := CreateComObject(CLASS_GeoCoordSys) as IMoGeoCoordSys;
end;

class function CoGeoCoordSys.CreateRemote(const MachineName: string): IMoGeoCoordSys;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GeoCoordSys) as IMoGeoCoordSys;
end;

class function CoUnit_.Create: IMoUnit;
begin
  Result := CreateComObject(CLASS_Unit_) as IMoUnit;
end;

class function CoUnit_.CreateRemote(const MachineName: string): IMoUnit;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Unit_) as IMoUnit;
end;

class function CoDatum.Create: IMoDatum;
begin
  Result := CreateComObject(CLASS_Datum) as IMoDatum;
end;

class function CoDatum.CreateRemote(const MachineName: string): IMoDatum;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Datum) as IMoDatum;
end;

class function CoSpheroid.Create: IMoSpheroid;
begin
  Result := CreateComObject(CLASS_Spheroid) as IMoSpheroid;
end;

class function CoSpheroid.CreateRemote(const MachineName: string): IMoSpheroid;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Spheroid) as IMoSpheroid;
end;

class function CoPrimeMeridian.Create: IMoPrimeMeridian;
begin
  Result := CreateComObject(CLASS_PrimeMeridian) as IMoPrimeMeridian;
end;

class function CoPrimeMeridian.CreateRemote(const MachineName: string): IMoPrimeMeridian;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_PrimeMeridian) as IMoPrimeMeridian;
end;

class function CoGeoTransformation.Create: IMoGeoTransformation;
begin
  Result := CreateComObject(CLASS_GeoTransformation) as IMoGeoTransformation;
end;

class function CoGeoTransformation.CreateRemote(const MachineName: string): IMoGeoTransformation;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GeoTransformation) as IMoGeoTransformation;
end;

class function CoGeocoder.Create: IMoGeocoder;
begin
  Result := CreateComObject(CLASS_Geocoder) as IMoGeocoder;
end;

class function CoGeocoder.CreateRemote(const MachineName: string): IMoGeocoder;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_Geocoder) as IMoGeocoder;
end;

class function CoZRenderer.Create: IMoZRenderer;
begin
  Result := CreateComObject(CLASS_ZRenderer) as IMoZRenderer;
end;

class function CoZRenderer.CreateRemote(const MachineName: string): IMoZRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ZRenderer) as IMoZRenderer;
end;

class function CoGroupRenderer.Create: IMoGroupRenderer;
begin
  Result := CreateComObject(CLASS_GroupRenderer) as IMoGroupRenderer;
end;

class function CoGroupRenderer.CreateRemote(const MachineName: string): IMoGroupRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_GroupRenderer) as IMoGroupRenderer;
end;

class function CoChartRenderer.Create: IMoChartRenderer;
begin
  Result := CreateComObject(CLASS_ChartRenderer) as IMoChartRenderer;
end;

class function CoChartRenderer.CreateRemote(const MachineName: string): IMoChartRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_ChartRenderer) as IMoChartRenderer;
end;

class function CoLabelPlacer.Create: IMoLabelPlacer;
begin
  Result := CreateComObject(CLASS_LabelPlacer) as IMoLabelPlacer;
end;

class function CoLabelPlacer.CreateRemote(const MachineName: string): IMoLabelPlacer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_LabelPlacer) as IMoLabelPlacer;
end;

class function CoEventRenderer.Create: IMoEventRenderer;
begin
  Result := CreateComObject(CLASS_EventRenderer) as IMoEventRenderer;
end;

class function CoEventRenderer.CreateRemote(const MachineName: string): IMoEventRenderer;
begin
  Result := CreateRemoteComObject(MachineName, CLASS_EventRenderer) as IMoEventRenderer;
end;

procedure Register;
begin
  RegisterComponents(dtlOcxPage, [TMap]);
end;

end.
