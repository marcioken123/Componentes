// CodeGear C++Builder
// Copyright (c) 1995, 2010 by Embarcadero Technologies, Inc.
// All rights reserved

// (DO NOT EDIT: machine generated header) 'qsRes.pas' rev: 22.00

#ifndef QsresHPP
#define QsresHPP

#pragma delphiheader begin
#pragma option push
#pragma option -w-      // All warnings off
#pragma option -Vx      // Zero-length empty class member functions
#pragma pack(push,8)
#include <System.hpp>	// Pascal unit
#include <SysInit.hpp>	// Pascal unit
#include <SysUtils.hpp>	// Pascal unit
#include <Classes.hpp>	// Pascal unit

//-- user supplied -----------------------------------------------------------

namespace Qsres
{
//-- type declarations -------------------------------------------------------
//-- var, const, procedure ---------------------------------------------------
#define SAfter L"SAfter"
#define SAggregationFunctionNotAllowed L"SAggregationFunctionNotAllowed"
#define SAlias L"SAlias"
#define SAmbiguousError L"SAmbiguousError"
#define SAnd L"SAnd"
#define SAndNot L"SAndNot"
#define SAnyFile L"SAnyFile"
#define SAs L"SAs"
#define SAscending L"SAscending"
#define SAutomaticListEditor L"SAutomaticListEditor"
#define SAvg L"SAvg"
#define SBefore L"SBefore"
#define SBring L"SBring"
#define SCancel L"SCancel"
#define SCannotClearParser L"SCannotClearParser"
#define SCapabilityNotSupportedJoins L"SCapabilityNotSupportedJoins"
#define SCheckListEditor L"SCheckListEditor"
#define SChooseListEditor L"SChooseListEditor"
#define SCompareFieldToAnother L"SCompareFieldToAnother"
#define SCompareFieldToParametricValue L"SCompareFieldToParametricValue"
#define SCompareFieldToSpecificValue L"SCompareFieldToSpecificValue"
#define SConditionExpressionNotSpecified L"SConditionExpressionNotSpecified"
#define SConditionRightSideNotSpecified L"SConditionRightSideNotSpecified"
#define SConfirmChangeLogicalConnector L"SConfirmChangeLogicalConnector"
#define SConfirmClearAllItems L"SConfirmClearAllItems"
#define SConfirmDeleteSelectedItems L"SConfirmDeleteSelectedItems"
#define SConfirmExcludeAllDefinitions L"SConfirmExcludeAllDefinitions"
#define SConfirmUpdatingMetaSQL L"SConfirmUpdatingMetaSQL"
#define SContaining L"SContaining"
#define SCount L"SCount"
#define SCustomExpression L"SCustomExpression"
#define SCustomExpressionSQLSyntax L"SCustomExpressionSQLSyntax"
#define SDatabaseNameNotInformed L"SDatabaseNameNotInformed"
#define SDataFields L"SDataFields"
#define SDataTypeNotIndicated L"SDataTypeNotIndicated"
#define SDate L"SDate"
#define SDay L"SDay"
#define SDeleteThisQuery L"SDeleteThisQuery"
#define SDescending L"SDescending"
#define SDifferent L"SDifferent"
#define SDropdownAutomatic L"SDropdownAutomatic"
#define SDropdownCheck L"SDropdownCheck"
#define SDropdownChoose L"SDropdownChoose"
#define SDropdownQuery L"SDropdownQuery"
#define SDuplicateThisQuery L"SDuplicateThisQuery"
#define SEditMetaSQL L"SEditMetaSQL"
#define SEditParameterEditorTitled L"SEditParameterEditorTitled"
#define SEmpty L"SEmpty"
#define SEndingWith L"SEndingWith"
#define SEnterTableAlias L"SEnterTableAlias"
#define SEqual L"SEqual"
#define SErrorOpeningQueryCombo L"SErrorOpeningQueryCombo"
#define SErroSintaxeLinhaColuna L"SErroSintaxeLinhaColuna"
#define SExportQueriesToFile L"SExportQueriesToFile"
#define SExpression L"SExpression"
#define SExpressionAliasTitled L"SExpressionAliasTitled"
#define SExpressionFieldNotSpecified L"SExpressionFieldNotSpecified"
#define SExpressionOperatorNotSpecified L"SExpressionOperatorNotSpecified"
#define SFalse L"SFalse"
#define SField L"SField"
#define SFieldAliasNotIndicated L"SFieldAliasNotIndicated"
#define SFieldAliasNotUnique L"SFieldAliasNotUnique"
#define SFieldCalculatedByAnExpression L"SFieldCalculatedByAnExpression"
#define SFieldComparing L"SFieldComparing"
#define SFieldExpressionNotIndicated L"SFieldExpressionNotIndicated"
#define SFieldKindAvg L"SFieldKindAvg"
#define SFieldKindBring L"SFieldKindBring"
#define SFieldKindCount L"SFieldKindCount"
#define SFieldKindMax L"SFieldKindMax"
#define SFieldKindMin L"SFieldKindMin"
#define SFieldKindSum L"SFieldKindSum"
#define SFieldNameNotIndicated L"SFieldNameNotIndicated"
#define SFieldNotIndicated L"SFieldNotIndicated"
#define SFilterConditions L"SFilterConditions"
#define SFreeTyping L"SFreeTyping"
#define SFreeTypingEditor L"SFreeTypingEditor"
#define SGreaterOrEqual L"SGreaterOrEqual"
#define SGreaterThan L"SGreaterThan"
#define SGroupingFields L"SGroupingFields"
#define SImportQueriesFromFile L"SImportQueriesFromFile"
#define SImportQueryFromTargetDataset L"SImportQueryFromTargetDataset"
#define SImportQueryFromTargetMetaSQL L"SImportQueryFromTargetMetaSQL"
#define SInclude L"SInclude"
#define SIncludeANewItem L"SIncludeANewItem"
#define SIncorrectGrammarLiteralString L"SIncorrectGrammarLiteralString"
#define SIncorrectGrammarSubexpressionEmpty L"SIncorrectGrammarSubexpressionEmpty"
#define SIncorrectGrammarSubexpressionNotTerminated L"SIncorrectGrammarSubexpressionNotTerminated"
#define SIndexOutOfBounds L"SIndexOutOfBounds"
#define SInvalidFieldType L"SInvalidFieldType"
#define SInvalidIncludedInputBuffer L"SInvalidIncludedInputBuffer"
#define SInvalidMetaSQL L"SInvalidMetaSQL"
#define SInvalidSQLForQueryCombo L"SInvalidSQLForQueryCombo"
#define SInvalidQueryFirstSecondFields L"SInvalidQueryFirstSecondFields"
#define SItemSets L"SItemSets"
#define SJoinConditionEmpty L"SJoinConditionEmpty"
#define SJoinConditionError L"SJoinConditionError"
#define SLessOrEqual L"SLessOrEqual"
#define SLessThan L"SLessThan"
#define SLike L"SLike"
#define SMainConditions L"SMainConditions"
#define SMax L"SMax"
#define SMin L"SMin"
#define SMonth L"SMonth"
#define SNaoPossivelInserirSubstring L"SNaoPossivelInserirSubstring"
#define SNaoPossivelModificarSubstring L"SNaoPossivelModificarSubstring"
#define SNestedConditions L"SNestedConditions"
#define SNestedSubconditions L"SNestedSubconditions"
#define SNewCheckItem L"SNewCheckItem"
#define SNewChooseItem L"SNewChooseItem"
#define SNewCondition L"SNewCondition"
#define SNewEditor L"SNewEditor"
#define SNewField L"SNewField"
#define SNewGroupField L"SNewGroupField"
#define SNewOrderField L"SNewOrderField"
#define SNewParameterAssignment L"SNewParameterAssignment"
#define SNewQuery L"SNewQuery"
#define SNewTable L"SNewTable"
#define SNewVisualQueryTitle L"SNewVisualQueryTitle"
#define SNone L"SNone"
#define SNotEnoughTableLinks L"SNotEnoughTableLinks"
#define SNotImplemented L"SNotImplemented"
#define SNow L"SNow"
#define SNull L"SNull"
#define SNullNode L"SNullNode"
#define SOff L"SOff"
#define SOK L"SOK"
#define SOr L"SOr"
#define SOrderingFields L"SOrderingFields"
#define SOrNot L"SOrNot"
#define SParamCaptionNotSpecified L"SParamCaptionNotSpecified"
#define SParameter L"SParameter"
#define SParameterEditors L"SParameterEditors"
#define SParameterTo L"SParameterTo"
#define SParamNameNotIndicated L"SParamNameNotIndicated"
#define SParamNameNotReferFieldComparingCondition L"SParamNameNotReferFieldComparingCondition"
#define SParamNameNotValid L"SParamNameNotValid"
#define SQueryAlreadyExists L"SQueryAlreadyExists"
#define SQueryDefinitionFile L"SQueryDefinitionFile"
#define SQueryEditorForParameter L"SQueryEditorForParameter"
#define SQueryListEditor L"SQueryListEditor"
#define SQueryTitle L"SQueryTitle"
#define SSaveCurrentQuery L"SSaveCurrentQuery"
#define SSelectDirectory L"SSelectDirectory"
#define SSetContinueOnRemarksShouldOnlyBeCalled L"SSetContinueOnRemarksShouldOnlyBeCalled"
#define SSetCurrentInputPosShouldOnlyBeCalled L"SSetCurrentInputPosShouldOnlyBeCalled"
#define SSetCurrentMaxInputPosShouldOnlyBeCalled L"SSetCurrentMaxInputPosShouldOnlyBeCalled"
#define SSetTableAlias L"SSetTableAlias"
#define SShowSQL L"SShowSQL"
#define SSingleField L"SSingleField"
#define SSingleTable L"SSingleTable"
#define SSourceTables L"SSourceTables"
#define SSQLIs L"SSQLIs"
#define SStartingWith L"SStartingWith"
#define SSum L"SSum"
#define SSyntaxErrorAtRow L"SSyntaxErrorAtRow"
#define SSyntaxOK L"SSyntaxOK"
#define STable L"STable"
#define STableAliasAlreadyIncluded L"STableAliasAlreadyIncluded"
#define STableAliasEmpty L"STableAliasEmpty"
#define STableAliasJoinedConditioned L"STableAliasJoinedConditioned"
#define STableJoinHandlingFailure L"STableJoinHandlingFailure"
#define STableLinkedToAnother L"STableLinkedToAnother"
#define STableNameEmpty L"STableNameEmpty"
#define STableNotIndicated L"STableNotIndicated"
#define STargetDatasetNotSupported L"STargetDatasetNotSupported"
#define STentativaAcessarPosicaoInexistente L"STentativaAcessarPosicaoInexistente"
#define STentativaInserirSubstring L"STentativaInserirSubstring"
#define STentativaModificarSubstring L"STentativaModificarSubstring"
#define STitled L"STitled"
#define SToday L"SToday"
#define STokenDoesNotContainSubnode L"STokenDoesNotContainSubnode"
#define STokenIsNotNode L"STokenIsNotNode"
#define STrue L"STrue"
#define SUndefinedValue L"SUndefinedValue"
#define SValue L"SValue"
#define SValuesAppliedNoItemSelected L"SValuesAppliedNoItemSelected"
#define SValuesAppliedItemSelected L"SValuesAppliedItemSelected"
#define SVisualQueryEditor L"SVisualQueryEditor"
#define SWhen L"SWhen"
#define SWhenNot L"SWhenNot"
#define SWith L"SWith"
#define SYear L"SYear"
#define SYouMustCompleteUndefinedItem L"SYouMustCompleteUndefinedItem"
#define SYouMustSpecifyTargetDataset L"SYouMustSpecifyTargetDataset"
#define SYouMustSpecifyTargetMetaSQL L"SYouMustSpecifyTargetMetaSQL"
extern PACKAGE void __fastcall _ResAddStrings(System::UnicodeString str);
extern PACKAGE System::UnicodeString __fastcall _str(System::UnicodeString id);

}	/* namespace Qsres */
#if !defined(DELPHIHEADER_NO_IMPLICIT_NAMESPACE_USE)
using namespace Qsres;
#endif
#pragma pack(pop)
#pragma option pop

#pragma delphiheader end.
//-- end unit ----------------------------------------------------------------
#endif	// QsresHPP
